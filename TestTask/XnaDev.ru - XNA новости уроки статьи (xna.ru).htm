<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html><head>
<title>XnaDev.ru - XNA новости уроки статьи (xna.ru)</title>
<meta http-equiv="Content-Type" content="text/html; charset=windows-1251">
<meta name="description" content="XnaDev.ru - это основной русскоязычный ресурс, посвященный разработке игр на платформе XNA.
Цель данного проекта - объединить в единое сообщество русскоязычных XNA разработчиков.">
<meta name="keywords" content="XNA,Windows,Phone,сообщество,русских, разработчиков,разработка,игр, платформа,3D,движок,уроки">
<style type="text/css">
body { font-family:Verdana,Tahoma,Arial,Sans-Serif;font-size:14px; }
hr { height:1px;color:#ccc; }
.small { font-family:Verdana,Tahoma,Arial,Sans-Serif;font-size:12px; }
.small2 { font-family:Verdana,Tahoma,Arial,Sans-Serif;font-size:12px;color:#666; }
</style>
</head>
<body>
<strong>Использование Vertex Textures в XNA</strong><br>
<span class="small">Прислано SolarWind 28.02.2009 02:42:50</span>
<hr><p><span style="font-weight: bold;"><span style="font-weight: normal;"><span style="white-space: pre;"></span>Урок, рассматривающий основы работы с Vertex Textures Fetch в XNA. <span style="white-space: pre;"></span>Фактически это не один урок, а целых четыре, материала очень много, но интересно. Одним из плюсов является то, что автор (<a href="http://catalinzima.spaces.live.com/" target="_blank">Catalin Zima</a>)
 постарался расписать каждую строку кода, почему сделано именно так и 
что для чего надо, таким образом набрать исходный код можно и не 
прибегая к прилагающимся к уроку исходникам. Кто все же решит 
досконально пройти весь урок и набрать весь исходный код сам, небольшой 
совет – сохраняйте состояния проектов (делайте копии, используйте SVN и 
т.п.) перед каждой из частей и конце их, ибо замечены несколько 
прецедентов «отката» состояния проекта на предыдущее состояние. В тексте
 переведены все комментарии к исходным кодам как C#, так и HLSL, 
прилагаемые исходники взяты с англоязычного ресурса и там все 
комментарии на английском.</span><br></span></p>
<p><span style="font-weight: bold;"><br></span></p>
<p><strong>Вступление</strong></p>
<p><span style="white-space:pre"></span>Данная статья описывает четыре 
метода использования Вершинных Текстур (Vertex Textures) в XNA играх. 
Начнем мы с краткого описания вершинных текстур, что это такое и как ими
 пользоваться, затем реализуем четыре эффекта с их использованием, от 
простейшего до довольно сложных реализаций. В статье будет детально 
расписан каждый шаг написания программ и объяснено, почему выбрана 
именно эта реализация и какие техники могут быть применены для решения 
подобных задач. Некоторые части будут содержать дополнения с 
разъяснениями как использовать те или иные подходы реализации в других 
подобных задачах, даже если они не связаны с Vertex Texture Fetching 
(далее по тексту просто VTF).</p>
<p><br><strong>Вершинные Текстуры</strong></p>
<p><br><span style="white-space:pre"></span>С момента появления 
программируемых графических процессоров в их архитектуру было изначально
 заложено, что вершинный и пиксельный шейдеры имеют различные 
характеристики. В шейдерной модели 3.0 были сделаны первые шаги для 
объединения их функциональности. DirectX 10 сделал последний шаг и 
объединил набор инструкций между всеми типами шейдеров: пиксельными 
(Pixel), вершинными (Vertex) и новыми геометрическими (Geometry) 
шейдерами. Основной темой данной статьи будет Vertex Texture Fetch 
(VTF), одна из фичей третьей шейдерной модели (Shader Model 3.0), 
которая в свою очередь послужила началом этой унификации.<br><span style="white-space:pre"></span>VTF
 позволяет нам читать информацию из текстуры в вершинный шейдер, почти 
так же, как это делает пиксельный шейдер. Чтобы использовать 
функциональность VTF Вам потребуется XBOX 360 (у которого 
унифицированная шейдерная архитектура) или графическая карта NVIDIA 
серии GeForce 6 или выше. Для владельцев видеоадаптеров от ATI, для 
достижения подобного результата применима технология R2VB – отрисовка в 
вершинный буфер (Render To Vertex Buffer), но я не знаю, как 
использовать данную технологию в XNA. (Вот тут можно прочитать <a href="http://catalinzima.spaces.live.com/blog/cns%213D9ECAE1F2DC56EF%21272.entry" target="_blank">как сэмулировать VTF программно</a>, для пользователей адаптеров ATI).<br><span style="white-space:pre"></span>Ассемблерная
 функция графического процессора для чтения текстуры в вершинный шейдер –
 «texldl», в HLSL, который и будет использоваться, ее аналогом является –
 «tex2Dlod». Параметры вызова - tex2Dlod( s, t ), где «s» - 2D 
текстурный самплер и «t» - четырехмерный вектор (float4). При чтении 
текстуры mipmap уровень указывается вручную, путем задания четвертого 
компонента вектора (t.w). В большинстве случаев используется 0 уровень 
(текстура будет считана, как есть), так что вызов будет выглядеть 
примерно следующим образом - tex2Dlod(textureSampler, 
float4(uv.xy,0,0)).<br><span style="white-space:pre"></span>Поведение вершинной текстуры аналогично текстурам в пиксельных шейдерах, за исключением:</p>
<ul>
<li><a href="http://www.gamedev.ru/terms/BilinearFiltering" target="_blank">Билинейная</a> (Bilinear) и <a href="http://www.gamedev.ru/terms/TrilinearFiltering" target="_blank">трилинейная</a>
 (Trilinear) фильтрация не поддерживается на аппаратном уровне. Далее 
будет рассмотрено, как реализовать билинейную фильтрацию в вершинном 
шейдере.</li>
<li><a href="http://www.gamedev.ru/terms/AnisotropicFiltering" target="_blank">Анизотропная</a> (Anisotropic) фильтрация не поддерживается на аппаратном уровне.</li>
<li>Автоматический расчет mipmap уровня не производится и если необходимо, расчет нужно реализовывать самим.</li>
</ul>
<p>&nbsp;</p>
<p><span style="font-style: italic;">Необходимые ресурсы и код</span></p>
<p><span style="white-space:pre"></span>Прежде чем мы начнем, скачайте архив <a href="http://www.xnadev.ru/_content/articles/wtf/Resources.zip" target="_blank">Resources.zip</a>, который содержит:</p>
<ul>
<li>Две карты высот, .dds в формате R32F (каждый пиксель записан в 32 битный float и содержит информацию о высоте).</li>
<li>Примечание: видеокарты NVIDIA поколения 6 и 7 для VTF поддерживают 
только R32F и A32R32G32B32F форматы. Возможно GeForce 8 и XBOX 360 могут
 для VTF использовать и другие форматы, но у меня нет возможности 
проверить это.</li>
<li>Несколько текстур взятых с <a href="http://www.turbosquid.com/" target="_blank">turbosquid.com</a> и прочих уроков и примеров.</li>
<li>Camera.cs является компонентом (GameComponent), который реализует игровую камеру, взят из примера <a href="http://creators.xna.com/Headlines/developmentaspx/archive/2007/01/01/Skinned-Model-Sample.aspx" target="_blank">Skinned Model Sample</a>.</li>
<li>Используйте триггеры на контроллере или клавиши Z и X клавиатуры для зума камеры.</li>
<li>Правый стик или клавиши WASD для перемещения камеры.</li>
<li>Grid.cs класс для отрисовки сетки в плоскостях XZ.</li>
<li>DudeModel.zip будет использован в четвертой части.</li>
</ul>
<p>&nbsp;</p>
<p><span style="white-space:pre"></span>Эти ресурсы будут использованы в данном уроке, и исходный код будет содержать ссылки на эти файлы.<br><span style="white-space:pre"></span>Grid.cs</p>
<p><br><span style="white-space:pre"></span>Данный класс реализует 
геометрию сетки и будет использован в Heightmap Rendering, Terrain 
Morphing и Steps in Snow. Свойство CellSize отвечает, на сколько 
большими будут ячейки сетки, а свойство Dimension контролирует 
размерность сетки (сколько строк, столбцов). Каждая вершина содержит 
информацию о позиции, нормали и соответствующей текстурной координате. 
Таким образом, каждая вершина ссылается (мапится) на пиксель в текстуре и
 это будет использовано в вершинном шейдере для манипуляции вершинами. 
Механизм ассоциации между вершиной и пикселем текстуры, является 
ключевым при использовании VTF. Изначально высота для всех вершин 
установлена в 0, так что мы имеем идеально гладкую поверхность, в этом 
можно убедиться, посмотрев в функцию GenerateStructures (строка 46, кода
 Grid.cs).</p>
<p>&nbsp;</p>
<div class="rj_insertcode">
<div class="rj_insertcode_csharp">
<div class="csharp" style="background: #f8f8f8; width: 100%; border-collapse: collapse; border: #054b6e 1px solid;">
<pre style="margin:0; background:none; vertical-align:top; padding: 0px 4px; font-size: 12px;"><span style="vertical-align:top">vert.<span style="color: #0000FF;">Position</span> <span style="color: #008000;">=</span> <a href="http://www.google.com/search?q=new+msdn.microsoft.com"><span style="color: #008000;">new</span></a> Vector3<span style="color: #000000;">(</span><span style="color: #000000;">(</span>i <span style="color: #008000;">-</span> dimension <span style="color: #008000;">/</span> 2.0f<span style="color: #000000;">)</span> <span style="color: #008000;">*</span> cellSize, </span>
<span style="vertical-align:top"> <span style="color: #FF0000;">0</span>, <span style="color: #000000;">(</span>j <span style="color: #008000;">-</span> dimension <span style="color: #008000;">/</span> 2.0f<span style="color: #000000;">)</span> <span style="color: #008000;">*</span> cellSize<span style="color: #000000;">)</span><span style="color: #008000;">;</span></span>
<span style="vertical-align:top"> </span></pre>
</div>
</div>
</div>
<p>&nbsp;</p>
<br>
<p>&nbsp;</p>
<p><span style="white-space:pre"></span><span style="font-weight: bold;">I. Отрисовка ландшафта, используя карту высот</span></p>
<p><span style="white-space:pre"></span>Начнем мы с простого примера - 
отрисовки ландшафта, используя карту высот. Карта высот (heightmap) это 
изображение (оттенки серого), содержащее информацию о высотах. Чем 
темнее оттенок пикселя, тем ниже данный участок поверхности, 
соответственно, чем светлее, тем выше. Так как мы используем текстуру, 
которая содержит данные с плавающей точкой, то 0,0 – минимальная высота,
 а 1,0 – означает максимальную высоту. На самом деле построить ландшафт 
по карте высот можно и без использования вершинных текстур, просто 
прочитав карту высот на этапе загрузки и на основе ее данных построить 
буфер вершин. А так как эта операция производится только один раз (в 
момент загрузки), а не каждый кадр (в вершинном шейдере) использование 
вершинных текстур для решения подобных задач, в плане производительности
 приложения, несколько нелогично. Как бы то ни было, это является 
простейшей и относительно легкой в реализации демонстрацией 
использования VTF.<br>Начнем с создания нового проекта (Windows или 
Xbox360) и добавим в проект файлы Camera.cs и Grid.cs. Затем идем в 
основной класс созданного проекта (Game1.cs) и добавляем пространство 
имен VTFTutorial в объявления using.</p>
<p>&nbsp;</p>
<div class="rj_insertcode">
<div class="rj_insertcode_csharp">
<div class="csharp" style="background: #f8f8f8; width: 100%; border-collapse: collapse; border: #054b6e 1px solid;">
<pre style="margin:0; background:none; vertical-align:top; padding: 0px 4px; font-size: 12px;"><span style="vertical-align:top"><span style="color: #0600FF;">using</span> <span style="color: #008080;">VTFTutorial</span><span style="color: #008000;">;</span></span></pre>
</div>
</div>
</div>
<p>&nbsp;</p>
<p><span style="white-space:pre"></span>Теперь добавляем две новые 
переменные в класс Game1: одну для камеры и одну для сетки. 
Инициализируем их и указываем параметры в конструкторе класса. Камера 
должна быть добавлена в список компонентов, т.к. является игровым 
компонентом и за изменения состояний камеры и ее обновление теперь будет
 отвечать компонентная модель XNA. Так же мы должна задать параметры 
сетки CellSize и Dimension, 4 и 256 соответственно. Вы можете 
проиграться с параметром CellSize и повыставлять ему различные 
параметры, просто ради спортивного интереса «А что будет?». О том, что 
произойдет если выставить другие параметры свойству Dimension, мы 
поговорим четь позже. Теперь в методе LoadGraphicsContent добавьте вызов
 grid.LoadGraphicsContent().</p>
<p>&nbsp;</p>
<div class="rj_insertcode">
<div class="rj_insertcode_csharp">
<div class="csharp" style="background: #f8f8f8; width: 100%; border-collapse: collapse; border: #054b6e 1px solid;">
<pre style="margin:0; background:none; vertical-align:top; padding: 0px 4px; font-size: 12px;"><span style="vertical-align:top">Camera camera<span style="color: #008000;">;</span></span>
<span style="vertical-align:top">Grid grid<span style="color: #008000;">;</span></span>
<span style="vertical-align:top"> </span>
<span style="vertical-align:top"><span style="color: #0600FF;">public</span> Game1<span style="color: #000000;">(</span><span style="color: #000000;">)</span></span>
<span style="vertical-align:top"><span style="color: #000000;">{</span></span>
<span style="vertical-align:top">	graphics <span style="color: #008000;">=</span> <a href="http://www.google.com/search?q=new+msdn.microsoft.com"><span style="color: #008000;">new</span></a> GraphicsDeviceManager<span style="color: #000000;">(</span><span style="color: #0600FF;">this</span><span style="color: #000000;">)</span><span style="color: #008000;">;</span></span>
<span style="vertical-align:top">        content <span style="color: #008000;">=</span> <a href="http://www.google.com/search?q=new+msdn.microsoft.com"><span style="color: #008000;">new</span></a> ContentManager<span style="color: #000000;">(</span>Services<span style="color: #000000;">)</span><span style="color: #008000;">;</span></span>
<span style="vertical-align:top"> </span>
<span style="vertical-align:top">        camera <span style="color: #008000;">=</span> <a href="http://www.google.com/search?q=new+msdn.microsoft.com"><span style="color: #008000;">new</span></a> Camera<span style="color: #000000;">(</span><span style="color: #0600FF;">this</span><span style="color: #000000;">)</span><span style="color: #008000;">;</span></span>
<span style="vertical-align:top">        <span style="color: #0600FF;">this</span>.<span style="color: #0000FF;">Components</span>.<span style="color: #0000FF;">Add</span><span style="color: #000000;">(</span>camera<span style="color: #000000;">)</span><span style="color: #008000;">;</span></span>
<span style="vertical-align:top"> </span>
<span style="vertical-align:top">        grid <span style="color: #008000;">=</span> <a href="http://www.google.com/search?q=new+msdn.microsoft.com"><span style="color: #008000;">new</span></a> Grid<span style="color: #000000;">(</span><span style="color: #0600FF;">this</span><span style="color: #000000;">)</span><span style="color: #008000;">;</span></span>
<span style="vertical-align:top">        grid.<span style="color: #0000FF;">Dimension</span> <span style="color: #008000;">=</span> <span style="color: #FF0000;">256</span><span style="color: #008000;">;</span></span>
<span style="vertical-align:top">        grid.<span style="color: #0000FF;">CellSize</span> <span style="color: #008000;">=</span> <span style="color: #FF0000;">4</span><span style="color: #008000;">;</span></span>
<span style="vertical-align:top"><span style="color: #000000;">}</span></span>
<span style="vertical-align:top"> </span>
<span style="vertical-align:top"><span style="color: #0600FF;">protected</span> <span style="color: #0600FF;">override</span> <span style="color: #0600FF;">void</span> LoadGraphicsContent<span style="color: #000000;">(</span><span style="color: #FF0000;">bool</span> loadAllContent<span style="color: #000000;">)</span></span>
<span style="vertical-align:top"><span style="color: #000000;">{</span></span>
<span style="vertical-align:top">	<span style="color: #0600FF;">if</span> <span style="color: #000000;">(</span>loadAllContent<span style="color: #000000;">)</span></span>
<span style="vertical-align:top">        <span style="color: #000000;">{</span></span>
<span style="vertical-align:top">	<span style="color: #000000;">}</span></span>
<span style="vertical-align:top"> </span>
<span style="vertical-align:top">        grid.<span style="color: #0000FF;">LoadGraphicsContent</span><span style="color: #000000;">(</span><span style="color: #000000;">)</span><span style="color: #008000;">;</span></span>
<span style="vertical-align:top"><span style="color: #000000;">}</span></span></pre>
</div>
</div>
</div>
<p><span style="white-space:pre"></span>Итак, у нас есть геометрия, 
теперь нам необходимо создать файл эффекта (шейдера) который нам создаст
 и отресует ландшафт. Добавьте в проект новую папку с именем «Shaders», 
затем в эту папку добавьте новый текстовой файл (Add -&gt; New Item...) с
 именем «VTFDisplacement.fx». Откройте его и приступим к написанию кода 
шейдера на языке HLSL (High Level Shading Language).</p>
<p><span style="white-space:pre"></span>Нам необходимы 3 параметра 
матрицы, для матриц мира (world), вида (view) и проекции (projection). 
Затем мы должны будем добавить карту высот с именем displacementMap 
(карта смещения, так как именно в ней содержится информация о смещении 
вершин относительно плоскости XZ) и самплер дня нее. Самплер будет 
использоваться для чтения данных высоты из карты высот в вершинном 
шейдере. Для всех фильтров с самплере используется значение Point, т.к. 
линейный (Linear) и анизотропный (Anisotropic) не поддерживается для 
вершинных текстур. Даже если прописать другое значение для фильтров, 
никаких сообщений об ошибках выедено не будет, но использоваться все 
равно будет значение Point.</p>
<div class="rj_insertcode">
<div class="rj_insertcode_hlsl">
<div class="hlsl" style="background: #f8f8f8; width: 100%; border-collapse: collapse; border: #054b6e 1px solid;">
<pre style="margin:0; background:none; vertical-align:top; padding: 0px 4px; font-size: 12px;"><span style="vertical-align:top"><span style="color: #000066; font-weight: bold;">float4x4</span> world<span style="color: #000066;">;</span> <span style="color: #666666; font-style: italic;">// матрица мира</span></span>
<span style="vertical-align:top"><span style="color: #000066; font-weight: bold;">float4x4</span> view<span style="color: #000066;">;</span> <span style="color: #666666; font-style: italic;">// матрица вида</span></span>
<span style="vertical-align:top"><span style="color: #000066; font-weight: bold;">float4x4</span> proj<span style="color: #000066;">;</span> <span style="color: #666666; font-style: italic;">// матрица проекции</span></span>
<span style="vertical-align:top"> </span>
<span style="vertical-align:top"><span style="color: #666666; font-style: italic;">// максимальная высота для ландшафта</span></span>
<span style="vertical-align:top"><span style="color: #000066; font-weight: bold;">float</span> maxHeight <span style="color: #000066;">=</span> <span style="color: #0000ff;">128</span><span style="color: #000066;">;</span></span>
<span style="vertical-align:top"> </span>
<span style="vertical-align:top"><span style="color: #666666; font-style: italic;">//текстура карты высот</span></span>
<span style="vertical-align:top">texture displacementMap<span style="color: #000066;">;</span></span>
<span style="vertical-align:top"> </span>
<span style="vertical-align:top"><span style="color: #666666; font-style: italic;">// самплер для чтения карты высот</span></span>
<span style="vertical-align:top">sampler displacementSampler <span style="color: #000066;">=</span> sampler_state     </span>
<span style="vertical-align:top">    <span style="color: #000066;">{</span></span>
<span style="vertical-align:top">            Texture   <span style="color: #000066;">=</span> <span style="color: #000066;">&lt;</span>displacementMap<span style="color: #000066;">&gt;;</span></span>
<span style="vertical-align:top">            MipFilter <span style="color: #000066;">=</span> Point<span style="color: #000066;">;</span></span>
<span style="vertical-align:top">            MinFilter <span style="color: #000066;">=</span> Point<span style="color: #000066;">;</span></span>
<span style="vertical-align:top">            MagFilter <span style="color: #000066;">=</span> Point<span style="color: #000066;">;</span></span>
<span style="vertical-align:top"> </span>
<span style="vertical-align:top">            AddressU  <span style="color: #000066;">=</span> Clamp<span style="color: #000066;">;</span></span>
<span style="vertical-align:top">            AddressV  <span style="color: #000066;">=</span> Clamp<span style="color: #000066;">;</span></span>
<span style="vertical-align:top">    <span style="color: #000066;">}</span><span style="color: #000066;">;</span></span></pre>
</div>
</div>
</div>
<p><span style="white-space:pre"><span style="white-space:pre"></span></span>Далее
 создадим две структуры, одна будет описывать данные, поступающие на 
вход вершинному шейдеру, вторая данные на выходе из него. На вход мы 
будем подавать местоположение вершины (position) и ее текстурные 
координаты (uv), на выходе мы будем получать трансформированные вершины в
 пространстве, а так же будем передавать в пиксельный шейдер еще один 
«комплект» координат вершины в переменной worldPos для «раскрашивания» 
основываясь на данных высоты вершин. Текстурные координаты будем просто 
«туннелировать» через вершинный шейдер в пиксельный, оставляя без 
изменений.</p>
<p>&nbsp;</p>
<div class="rj_insertcode">
<div class="rj_insertcode_hlsl">
<div class="hlsl" style="background: #f8f8f8; width: 100%; border-collapse: collapse; border: #054b6e 1px solid;">
<pre style="margin:0; background:none; vertical-align:top; padding: 0px 4px; font-size: 12px;"><span style="vertical-align:top">    <span style="color: #000066; font-weight: bold;">struct</span> VS_INPUT </span>
<span style="vertical-align:top">    <span style="color: #000066;">{</span></span>
<span style="vertical-align:top">        <span style="color: #000066; font-weight: bold;">float4</span> position <span style="color: #000066;">:</span> <span style="color: #551111;">POSITION</span><span style="color: #000066;">;</span></span>
<span style="vertical-align:top">        <span style="color: #000066; font-weight: bold;">float4</span> uv       <span style="color: #000066;">:</span> <span style="color: #551111;">TEXCOORD0</span><span style="color: #000066;">;</span></span>
<span style="vertical-align:top">    <span style="color: #000066;">}</span><span style="color: #000066;">;</span></span>
<span style="vertical-align:top"> </span>
<span style="vertical-align:top">    <span style="color: #000066; font-weight: bold;">struct</span> VS_OUTPUT</span>
<span style="vertical-align:top">    <span style="color: #000066;">{</span></span>
<span style="vertical-align:top">        <span style="color: #000066; font-weight: bold;">float4</span> position  <span style="color: #000066;">:</span> <span style="color: #551111;">POSITION</span><span style="color: #000066;">;</span></span>
<span style="vertical-align:top">        <span style="color: #000066; font-weight: bold;">float4</span> uv        <span style="color: #000066;">:</span> <span style="color: #551111;">TEXCOORD0</span><span style="color: #000066;">;</span></span>
<span style="vertical-align:top">        <span style="color: #000066; font-weight: bold;">float4</span> worldPos  <span style="color: #000066;">:</span> <span style="color: #551111;">TEXCOORD1</span><span style="color: #000066;">;</span></span>
<span style="vertical-align:top">    <span style="color: #000066;">}</span><span style="color: #000066;">;</span></span></pre>
</div>
</div>
</div>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p><span style="white-space:pre"></span>Код вершинного шейдера выглядит следующим образом:</p>
<p>&nbsp;</p>
<div class="rj_insertcode">
<div class="rj_insertcode_hlsl">
<div class="hlsl" style="background: #f8f8f8; width: 100%; border-collapse: collapse; border: #054b6e 1px solid;">
<pre style="margin:0; background:none; vertical-align:top; padding: 0px 4px; font-size: 12px;"><span style="vertical-align:top">    VS_OUTPUT Transform<span style="color: #000066;">(</span>VS_INPUT In<span style="color: #000066;">)</span></span>
<span style="vertical-align:top">    <span style="color: #000066;">{</span></span>
<span style="vertical-align:top">        <span style="color: #666666; font-style: italic;">// инициализация выходной структуры</span></span>
<span style="vertical-align:top">        VS_OUTPUT Out <span style="color: #000066;">=</span> <span style="color: #000066;">(</span>VS_OUTPUT<span style="color: #000066;">)</span><span style="color: #0000ff;">0</span><span style="color: #000066;">;</span></span>
<span style="vertical-align:top"> </span>
<span style="vertical-align:top">        <span style="color: #666666; font-style: italic;">//расчет матрицы произведения View * Projection</span></span>
<span style="vertical-align:top">        <span style="color: #000066; font-weight: bold;">float4x4</span> viewProj <span style="color: #000066;">=</span> mul<span style="color: #000066;">(</span>view<span style="color: #000066;">,</span> proj<span style="color: #000066;">)</span><span style="color: #000066;">;</span></span>
<span style="vertical-align:top"> </span>
<span style="vertical-align:top">        <span style="color: #666666; font-style: italic;">//финальный расчет матриц для вывода на экран World * View * Projection</span></span>
<span style="vertical-align:top">        <span style="color: #000066; font-weight: bold;">float4x4</span> worldViewProj<span style="color: #000066;">=</span> mul<span style="color: #000066;">(</span>world<span style="color: #000066;">,</span> viewProj<span style="color: #000066;">)</span><span style="color: #000066;">;</span></span>
<span style="vertical-align:top"> </span>
<span style="vertical-align:top">        <span style="color: #666666; font-style: italic;">// Данная инструкция читает карту высот</span></span>
<span style="vertical-align:top">        <span style="color: #666666; font-style: italic;">// в соответствии с текстурными координатами вершины</span></span>
<span style="vertical-align:top"> </span>
<span style="vertical-align:top">        <span style="color: #666666; font-style: italic;">// Примечание: мы передаем как параметр 0 уровень mipmap в tex2Dlod,</span></span>
<span style="vertical-align:top">        <span style="color: #666666; font-style: italic;">// т.к. хотим чтобы изображение использовалось 1 к 1</span></span>
<span style="vertical-align:top">        <span style="color: #000066; font-weight: bold;">float</span> height <span style="color: #000066;">=</span> tex2Dlod <span style="color: #000066;">(</span> displacementSampler<span style="color: #000066;">,</span></span>
<span style="vertical-align:top">                                  <span style="color: #000066; font-weight: bold;">float4</span><span style="color: #000066;">(</span>In<span style="color: #000066;">.</span><span style="color: #006600;">uv</span><span style="color: #000066;">.</span><span style="color: #006600;">xy</span> <span style="color: #000066;">,</span> <span style="color: #0000ff;">0</span> <span style="color: #000066;">,</span> <span style="color: #0000ff;">0</span> <span style="color: #000066;">)</span> <span style="color: #000066;">)</span><span style="color: #000066;">;</span></span>
<span style="vertical-align:top">        <span style="color: #666666; font-style: italic;">// После считывания данных высоты с текстуры</span></span>
<span style="vertical-align:top">        <span style="color: #666666; font-style: italic;">// мы присваиваем это значение в y координаты вершины</span></span>
<span style="vertical-align:top">        <span style="color: #666666; font-style: italic;">// и т.к. значение height лежит в диапазоне от 0 до 1,</span></span>
<span style="vertical-align:top">        <span style="color: #666666; font-style: italic;">// то перемножаем с переменной maxHeight, которая в</span></span>
<span style="vertical-align:top">        <span style="color: #666666; font-style: italic;">// свою очередь отвечает за максимальный подъем ландшафта</span></span>
<span style="vertical-align:top">        In<span style="color: #000066;">.</span><span style="color: #006600;">position</span><span style="color: #000066;">.</span><span style="color: #006600;">y</span> <span style="color: #000066;">=</span> height <span style="color: #000066;">*</span> maxHeight<span style="color: #000066;">;</span></span>
<span style="vertical-align:top"> </span>
<span style="vertical-align:top">        <span style="color: #666666; font-style: italic;">//Передаем в пиксельный шейдер координаты вершины в мировом пространстве</span></span>
<span style="vertical-align:top">        Out<span style="color: #000066;">.</span><span style="color: #006600;">worldPos</span> <span style="color: #000066;">=</span> mul<span style="color: #000066;">(</span>In<span style="color: #000066;">.</span><span style="color: #006600;">position</span><span style="color: #000066;">,</span> world<span style="color: #000066;">)</span><span style="color: #000066;">;</span></span>
<span style="vertical-align:top"> </span>
<span style="vertical-align:top">        <span style="color: #666666; font-style: italic;">//Расчитываем финальное местоположение вершины уже для вывода на экран</span></span>
<span style="vertical-align:top">        Out<span style="color: #000066;">.</span><span style="color: #006600;">position</span> <span style="color: #000066;">=</span> mul<span style="color: #000066;">(</span> In<span style="color: #000066;">.</span><span style="color: #006600;">position</span><span style="color: #000066;">,</span> worldViewProj<span style="color: #000066;">)</span><span style="color: #000066;">;</span></span>
<span style="vertical-align:top"> </span>
<span style="vertical-align:top">        <span style="color: #666666; font-style: italic;">//Текстурные координаты передаем без изменений</span></span>
<span style="vertical-align:top">        Out<span style="color: #000066;">.</span><span style="color: #006600;">uv</span> <span style="color: #000066;">=</span> In<span style="color: #000066;">.</span><span style="color: #006600;">uv</span><span style="color: #000066;">;</span></span>
<span style="vertical-align:top"> </span>
<span style="vertical-align:top">        <span style="color: #000000; font-weight: bold;">return</span> Out<span style="color: #000066;">;</span></span>
<span style="vertical-align:top">    <span style="color: #000066;">}</span></span></pre>
</div>
</div>
</div>
<p><span style="white-space:pre"></span>Функция tex2Dlod читает данные 
высот из текстуры, использую текстурные координаты которые создаются в 
классе Grid.cs. Перед тем как координаты вершины будут перемножены со 
всеми матрицами для вывода на экран, мы подменим данные координаты Y, на
 этом этапе вершины будут выстроены по высоте в соответствии с данными 
карты высот и только потом произойдет преобразование вершин в экранные 
координаты. Все эти действия выполняет графический процессор.</p>
<p><span style="white-space:pre"></span>Настало время позаботиться о 
пиксельном шейдере. Мы просто отрисовываем ландшафт раскрашивая в 
оттенки серого, более светлые тона наверху, темные внизу. Техника 
(technique) шейдера имеет всего один проход (pass), содержащий два наших
 шейдера. В параметрах компиляции указываем vs_3_0 и ps_3_0, т.к. VTF 
является функциональностью Shader Model 3.0.</p>
<p>&nbsp;</p>
<div class="rj_insertcode">
<div class="rj_insertcode_hlsl">
<div class="hlsl" style="background: #f8f8f8; width: 100%; border-collapse: collapse; border: #054b6e 1px solid;">
<pre style="margin:0; background:none; vertical-align:top; padding: 0px 4px; font-size: 12px;"><span style="vertical-align:top">    <span style="color: #000066; font-weight: bold;">float4</span> PixelShader<span style="color: #000066;">(</span><span style="color: #333399; font-weight: bold;">in</span> <span style="color: #000066; font-weight: bold;">float4</span> worldPos <span style="color: #000066;">:</span> <span style="color: #551111;">TEXCOORD1</span><span style="color: #000066;">)</span> <span style="color: #000066;">:</span> <span style="color: #551111;">COLOR</span></span>
<span style="vertical-align:top">    <span style="color: #000066;">{</span></span>
<span style="vertical-align:top">        <span style="color: #000000; font-weight: bold;">return</span> worldPos<span style="color: #000066;">.</span><span style="color: #006600;">y</span> <span style="color: #000066;">/</span> maxHeight<span style="color: #000066;">;</span></span>
<span style="vertical-align:top">    <span style="color: #000066;">}</span></span>
<span style="vertical-align:top"> </span>
<span style="vertical-align:top">    <span style="color: #333399; font-weight: bold;">technique</span> GridDraw</span>
<span style="vertical-align:top">    <span style="color: #000066;">{</span></span>
<span style="vertical-align:top">        <span style="color: #333399; font-weight: bold;">pass</span> P0</span>
<span style="vertical-align:top">        <span style="color: #000066;">{</span></span>
<span style="vertical-align:top">            vertexShader <span style="color: #000066;">=</span> compile vs_3_0 Transform<span style="color: #000066;">(</span><span style="color: #000066;">)</span><span style="color: #000066;">;</span></span>
<span style="vertical-align:top">            pixelShader  <span style="color: #000066;">=</span> compile ps_3_0 PixelShader<span style="color: #000066;">(</span><span style="color: #000066;">)</span><span style="color: #000066;">;</span></span>
<span style="vertical-align:top">        <span style="color: #000066;">}</span></span>
<span style="vertical-align:top">    <span style="color: #000066;">}</span></span></pre>
</div>
</div>
</div>
<p><span style="white-space:pre"></span>После того как мы закончили с 
шейдером, давайте вернемся в класс Game. Создайте в проекте еще одну 
папку с именем Textures и добавьте в нее файл height1.dds из архива 
resources, установите для фала контент процессор Texture(mipmapped). 
Далее нам необходимо добавить в класс поля для шейдера (эффекта) и 
текстуры.</p>
<div class="rj_insertcode">
<div class="rj_insertcode_csharp">
<div class="csharp" style="background: #f8f8f8; width: 100%; border-collapse: collapse; border: #054b6e 1px solid;">
<pre style="margin:0; background:none; vertical-align:top; padding: 0px 4px; font-size: 12px;"><span style="vertical-align:top">    Effect gridEffect<span style="color: #008000;">;</span></span>
<span style="vertical-align:top">    Texture2D displacementTexture<span style="color: #008000;">;</span></span></pre>
</div>
</div>
</div>
<p><span style="white-space:pre"></span>В методе LoadGraphicsContent загружаем эффект и текстуру.</p>
<div class="rj_insertcode">
<div class="rj_insertcode_csharp">
<div class="csharp" style="background: #f8f8f8; width: 100%; border-collapse: collapse; border: #054b6e 1px solid;">
<pre style="margin:0; background:none; vertical-align:top; padding: 0px 4px; font-size: 12px;"><span style="vertical-align:top">gridEffect <span style="color: #008000;">=</span> content.<span style="color: #0000FF;">Load</span><span style="color: #008000;">&lt;</span>Effect<span style="color: #008000;">&gt;</span><span style="color: #000000;">(</span><span style="color: #666666;">"Shaders<span style="color: #008080; font-weight: bold;">\</span>VTFDisplacement"</span><span style="color: #000000;">)</span><span style="color: #008000;">;</span></span>
<span style="vertical-align:top">displacementTexture <span style="color: #008000;">=</span> content.<span style="color: #0000FF;">Load</span><span style="color: #008000;">&lt;</span>Texture2D<span style="color: #008000;">&gt;</span><span style="color: #000000;">(</span><span style="color: #666666;">"Textures<span style="color: #008080; font-weight: bold;">\</span>height1"</span><span style="color: #000000;">)</span><span style="color: #008000;">;</span></span></pre>
</div>
</div>
</div>
<p><span style="white-space:pre"></span>В метод Draw добавляем код, 
устанавливающий параметры эффекта и код отрисовки сетки. Мы помещаем наш
 ландшафт в центр виртуального мира, поэтому матрицу мира (world) 
оставляем единичной (Identity), матрицы вида (view) и проекции 
(projection) получаем из компонента камеры.</p>
<div class="rj_insertcode">
<div class="rj_insertcode_csharp">
<div class="csharp" style="background: #f8f8f8; width: 100%; border-collapse: collapse; border: #054b6e 1px solid;">
<pre style="margin:0; background:none; vertical-align:top; padding: 0px 4px; font-size: 12px;"><span style="vertical-align:top"><span style="color: #0600FF;">protected</span> <span style="color: #0600FF;">override</span> <span style="color: #0600FF;">void</span> Draw<span style="color: #000000;">(</span>GameTime gameTime<span style="color: #000000;">)</span></span>
<span style="vertical-align:top">        <span style="color: #000000;">{</span></span>
<span style="vertical-align:top">            graphics.<span style="color: #0000FF;">GraphicsDevice</span>.<span style="color: #0000FF;">Clear</span><span style="color: #000000;">(</span>Color.<span style="color: #0000FF;">CornflowerBlue</span><span style="color: #000000;">)</span><span style="color: #008000;">;</span></span>
<span style="vertical-align:top">            graphics.<span style="color: #0000FF;">GraphicsDevice</span>.<span style="color: #0000FF;">RenderState</span>.<span style="color: #0000FF;">CullMode</span> <span style="color: #008000;">=</span> CullMode.<span style="color: #0000FF;">None</span><span style="color: #008000;">;</span></span>
<span style="vertical-align:top">            gridEffect.<span style="color: #0000FF;">Parameters</span><span style="color: #000000;">[</span><span style="color: #666666;">"world"</span><span style="color: #000000;">]</span>.<span style="color: #0000FF;">SetValue</span><span style="color: #000000;">(</span>Matrix.<span style="color: #0000FF;">Identity</span><span style="color: #000000;">)</span><span style="color: #008000;">;</span></span>
<span style="vertical-align:top">            gridEffect.<span style="color: #0000FF;">Parameters</span><span style="color: #000000;">[</span><span style="color: #666666;">"view"</span><span style="color: #000000;">]</span>.<span style="color: #0000FF;">SetValue</span><span style="color: #000000;">(</span>camera.<span style="color: #0000FF;">View</span><span style="color: #000000;">)</span><span style="color: #008000;">;</span></span>
<span style="vertical-align:top">            gridEffect.<span style="color: #0000FF;">Parameters</span><span style="color: #000000;">[</span><span style="color: #666666;">"proj"</span><span style="color: #000000;">]</span>.<span style="color: #0000FF;">SetValue</span><span style="color: #000000;">(</span>camera.<span style="color: #0000FF;">Projection</span><span style="color: #000000;">)</span><span style="color: #008000;">;</span></span>
<span style="vertical-align:top">            gridEffect.<span style="color: #0000FF;">Parameters</span><span style="color: #000000;">[</span><span style="color: #666666;">"maxHeight"</span><span style="color: #000000;">]</span>.<span style="color: #0000FF;">SetValue</span><span style="color: #000000;">(</span><span style="color: #FF0000;">128</span><span style="color: #000000;">)</span><span style="color: #008000;">;</span></span>
<span style="vertical-align:top">            gridEffect.<span style="color: #0000FF;">Parameters</span><span style="color: #000000;">[</span><span style="color: #666666;">"displacementMap"</span><span style="color: #000000;">]</span>.<span style="color: #0000FF;">SetValue</span><span style="color: #000000;">(</span>displacementTexture<span style="color: #000000;">)</span><span style="color: #008000;">;</span></span>
<span style="vertical-align:top"> </span>
<span style="vertical-align:top">            gridEffect.<span style="color: #0000FF;">Begin</span><span style="color: #000000;">(</span><span style="color: #000000;">)</span><span style="color: #008000;">;</span></span>
<span style="vertical-align:top">            <span style="color: #0600FF;">foreach</span> <span style="color: #000000;">(</span>EffectPass pass <span style="color: #0600FF;">in</span> gridEffect.<span style="color: #0000FF;">CurrentTechnique</span>.<span style="color: #0000FF;">Passes</span><span style="color: #000000;">)</span></span>
<span style="vertical-align:top">            <span style="color: #000000;">{</span></span>
<span style="vertical-align:top">                pass.<span style="color: #0000FF;">Begin</span><span style="color: #000000;">(</span><span style="color: #000000;">)</span><span style="color: #008000;">;</span></span>
<span style="vertical-align:top">                grid.<span style="color: #0000FF;">Draw</span><span style="color: #000000;">(</span><span style="color: #000000;">)</span><span style="color: #008000;">;</span></span>
<span style="vertical-align:top">                pass.<span style="color: #0000FF;">End</span><span style="color: #000000;">(</span><span style="color: #000000;">)</span><span style="color: #008000;">;</span></span>
<span style="vertical-align:top">            <span style="color: #000000;">}</span></span>
<span style="vertical-align:top">            gridEffect.<span style="color: #0000FF;">End</span><span style="color: #000000;">(</span><span style="color: #000000;">)</span><span style="color: #008000;">;</span></span>
<span style="vertical-align:top"> </span>
<span style="vertical-align:top">            <span style="color: #0600FF;">base</span>.<span style="color: #0000FF;">Draw</span><span style="color: #000000;">(</span>gameTime<span style="color: #000000;">)</span><span style="color: #008000;">;</span></span>
<span style="vertical-align:top">        <span style="color: #000000;">}</span></span></pre>
</div>
</div>
</div>
<p>&nbsp;</p>
<p><span style="white-space:pre"></span>На данном этапе наше приложение удачно скомпилируется и запустится, и вы увидите, что-то наподобие этого:</p>
<p><img src="XnaDev.ru%20-%20XNA%20%D0%BD%D0%BE%D0%B2%D0%BE%D1%81%D1%82%D0%B8%20%D1%83%D1%80%D0%BE%D0%BA%D0%B8%20%D1%81%D1%82%D0%B0%D1%82%D1%8C%D0%B8%20%28xna.ru%29_files/simpleTerrain.PNG" border="0" height="450" width="600"></p>
<p><span style="white-space:pre"></span>Пока что все выглядит 
замечательно, но давайте посмотрим что произойдет, если мы увеличим 
размер ландшафта, установите значения свойств grid.CellSize = 8, 
grid.Dimension = 512 и значение переменной maxHeight передаваемое в 
шейдер = 512. Получаем что-то подобное этому:</p>
<p><img src="XnaDev.ru%20-%20XNA%20%D0%BD%D0%BE%D0%B2%D0%BE%D1%81%D1%82%D0%B8%20%D1%83%D1%80%D0%BE%D0%BA%D0%B8%20%D1%81%D1%82%D0%B0%D1%82%D1%8C%D0%B8%20%28xna.ru%29_files/largeTerrain.PNG" border="0"></p>
<p><span style="white-space:pre"></span>Смотрим и ужасаемся, откуда у 
нас такая «замечательная» лестница? Карта высот у нас имеет размер 256 
на 256 пикселей, так что пока размерность сетки была 256, то каждый 
пиксель текстуры проецировался на одну вершину в сетке, и было все 
замечательно. Но после того как мы увеличили размер сетки, один пиксель 
стал проецироваться на 2 вершины, которые на самом деле должны иметь 
разную высоту, но получилось так, что они находятся на одной высоте. 
Если бы у нас была билинейная фильтрация, то графический процессор 
автоматически бы рассчитал среднее значение на основе данных 4 соседних 
пикселей, и поверхность была бы более сглаженной. Но так как вершинные 
текстуры не поддерживают фильтрации, то нам придется самим реализовывать
 билинейную фильтрацию в шейдере. Итак, давайте откроем файл 
VTFDisplacement.fx и добавим следующий код.</p>
<p>&nbsp;</p>
<div class="rj_insertcode">
<div class="rj_insertcode_csharp">
<div class="csharp" style="background: #f8f8f8; width: 100%; border-collapse: collapse; border: #054b6e 1px solid;">
<pre style="margin:0; background:none; vertical-align:top; padding: 0px 4px; font-size: 12px;"><span style="vertical-align:top">    <span style="color: #008080; font-style: italic;">//Следующие два параметра по большому счету</span></span>
<span style="vertical-align:top">    <span style="color: #008080; font-style: italic;">//должны задаваться из приложения</span></span>
<span style="vertical-align:top"> </span>
<span style="vertical-align:top">    <span style="color: #008080; font-style: italic;">//Размер текстуры</span></span>
<span style="vertical-align:top">    <span style="color: #FF0000;">float</span> textureSize <span style="color: #008000;">=</span> 256.0f<span style="color: #008000;">;</span></span>
<span style="vertical-align:top"> </span>
<span style="vertical-align:top">    <span style="color: #008080; font-style: italic;">//Размер одного текселя</span></span>
<span style="vertical-align:top">    <span style="color: #FF0000;">float</span> texelSize <span style="color: #008000;">=</span>  1.0f <span style="color: #008000;">/</span> 256.0f<span style="color: #008000;">;</span></span>
<span style="vertical-align:top"> </span>
<span style="vertical-align:top">    <span style="color: #008080; font-style: italic;">//Функция билинейной интерполяции</span></span>
<span style="vertical-align:top">    float4 tex2Dlod_bilinear<span style="color: #000000;">(</span> sampler texSam, float4 uv <span style="color: #000000;">)</span></span>
<span style="vertical-align:top">    <span style="color: #000000;">{</span></span>
<span style="vertical-align:top">        float4 height00 <span style="color: #008000;">=</span> tex2Dlod<span style="color: #000000;">(</span>texSam, uv<span style="color: #000000;">)</span><span style="color: #008000;">;</span></span>
<span style="vertical-align:top"> </span>
<span style="vertical-align:top">        float4 height10 <span style="color: #008000;">=</span> tex2Dlod<span style="color: #000000;">(</span>texSam, uv <span style="color: #008000;">+</span> float4<span style="color: #000000;">(</span>texelSize, <span style="color: #FF0000;">0</span>, <span style="color: #FF0000;">0</span>, <span style="color: #FF0000;">0</span><span style="color: #000000;">)</span><span style="color: #000000;">)</span><span style="color: #008000;">;</span></span>
<span style="vertical-align:top"> </span>
<span style="vertical-align:top">        float4 height01 <span style="color: #008000;">=</span> tex2Dlod<span style="color: #000000;">(</span>texSam, uv <span style="color: #008000;">+</span> float4<span style="color: #000000;">(</span><span style="color: #FF0000;">0</span>, texelSize, <span style="color: #FF0000;">0</span>, <span style="color: #FF0000;">0</span><span style="color: #000000;">)</span><span style="color: #000000;">)</span><span style="color: #008000;">;</span></span>
<span style="vertical-align:top"> </span>
<span style="vertical-align:top">        float4 height11 <span style="color: #008000;">=</span> tex2Dlod<span style="color: #000000;">(</span>texSam, uv <span style="color: #008000;">+</span> float4<span style="color: #000000;">(</span>texelSize, texelSize, <span style="color: #FF0000;">0</span>, <span style="color: #FF0000;">0</span><span style="color: #000000;">)</span><span style="color: #000000;">)</span><span style="color: #008000;">;</span></span>
<span style="vertical-align:top">        float2 f <span style="color: #008000;">=</span> frac<span style="color: #000000;">(</span> uv.<span style="color: #0000FF;">xy</span> <span style="color: #008000;">*</span> textureSize <span style="color: #000000;">)</span><span style="color: #008000;">;</span></span>
<span style="vertical-align:top">        float4 tA <span style="color: #008000;">=</span> lerp<span style="color: #000000;">(</span> height00, height10, f.<span style="color: #0000FF;">x</span> <span style="color: #000000;">)</span><span style="color: #008000;">;</span></span>
<span style="vertical-align:top">        float4 tB <span style="color: #008000;">=</span> lerp<span style="color: #000000;">(</span> height01, height11, f.<span style="color: #0000FF;">x</span> <span style="color: #000000;">)</span><span style="color: #008000;">;</span></span>
<span style="vertical-align:top">        <span style="color: #0600FF;">return</span> lerp<span style="color: #000000;">(</span> tA, tB, f.<span style="color: #0000FF;">y</span> <span style="color: #000000;">)</span><span style="color: #008000;">;</span></span>
<span style="vertical-align:top">    <span style="color: #000000;">}</span></span></pre>
</div>
</div>
</div>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p><span style="white-space:pre"></span>Данный код реализует билинейную 
фильтрацию, берется 4 пограничных пикселя от текущих текстурных 
координат и между ними производится интерполяция, таким образом, 
находится среднее значение высоты вершины.</p>
<p><span style="white-space:pre"></span>Для иcпользования билинейной фильтрации в вершинном шейдере замените</p>
<div class="rj_insertcode">
<div class="rj_insertcode_hlsl">
<div class="hlsl" style="background: #f8f8f8; width: 100%; border-collapse: collapse; border: #054b6e 1px solid;">
<pre style="margin:0; background:none; vertical-align:top; padding: 0px 4px; font-size: 12px;"><span style="vertical-align:top"><span style="color: #000066; font-weight: bold;">float</span> height <span style="color: #000066;">=</span> tex2Dlod <span style="color: #000066;">(</span> displacementSampler<span style="color: #000066;">,</span> <span style="color: #000066; font-weight: bold;">float4</span><span style="color: #000066;">(</span>In<span style="color: #000066;">.</span><span style="color: #006600;">uv</span><span style="color: #000066;">.</span><span style="color: #006600;">xy</span><span style="color: #000066;">,</span> <span style="color: #0000ff;">0</span><span style="color: #000066;">,</span> <span style="color: #0000ff;">0</span> <span style="color: #000066;">)</span><span style="color: #000066;">)</span><span style="color: #000066;">;</span></span></pre>
</div>
</div>
</div>
<p>на:</p>
<div class="rj_insertcode">
<div class="rj_insertcode_hlsl">
<div class="hlsl" style="background: #f8f8f8; width: 100%; border-collapse: collapse; border: #054b6e 1px solid;">
<pre style="margin:0; background:none; vertical-align:top; padding: 0px 4px; font-size: 12px;"><span style="vertical-align:top"><span style="color: #000066; font-weight: bold;">float</span> height <span style="color: #000066;">=</span> tex2Dlod_bilinear<span style="color: #000066;">(</span>displacementSampler<span style="color: #000066;">,</span> <span style="color: #000066; font-weight: bold;">float4</span><span style="color: #000066;">(</span>In<span style="color: #000066;">.</span><span style="color: #006600;">uv</span><span style="color: #000066;">.</span><span style="color: #006600;">xy</span><span style="color: #000066;">,</span> <span style="color: #0000ff;">0</span><span style="color: #000066;">,</span> <span style="color: #0000ff;">0</span><span style="color: #000066;">)</span><span style="color: #000066;">)</span><span style="color: #000066;">;</span></span></pre>
</div>
</div>
</div>
<p><span style="white-space:pre"></span>Теперь поверхность ландшафта стала более гладкой:</p>
<p><img src="XnaDev.ru%20-%20XNA%20%D0%BD%D0%BE%D0%B2%D0%BE%D1%81%D1%82%D0%B8%20%D1%83%D1%80%D0%BE%D0%BA%D0%B8%20%D1%81%D1%82%D0%B0%D1%82%D1%8C%D0%B8%20%28xna.ru%29_files/bilinear.PNG" border="0" height="450" width="600"></p>
<p><span style="white-space:pre"><span style="white-space: pre;"></span></span><span style="font-style: italic;">Бонуc: Текстурирование</span></p>
<p><span style="white-space:pre"></span>Давайте наложим на наш ландшафт 
пару текстур. Наилучшим способом затекстурить поверхность, является 
смешать несколько текстур (например: песок, траву, скалы и снег) в 
пиксельном шейдере основываясь на весах вершин, которые рассчитываются 
из данных высот вершин. У Riemer`s есть отличный урок, как реализовать 
это, но в его реализации веса для смешивания текстур рассчитываются на 
CPU, на этапе загрузки карты высот, мы же будем это делать на GPU. 
Представленный далее код написан по материалам уроков Riemer`s.</p>
<p><span style="white-space:pre"></span>Для начала в папку проекта 
Textures добавьте файлы sand.dds, grass.dds, rock.dds и snow.dds 
(примечание: для уменьшения размера скачиваемого архива эти файлы 
представлены в низком разрешении, наличие этих файлов в высоком 
разрешении заметно улучшит картинку в визуальном плане). Затем откройте 
файл шейдера и добавьте четыре параметра для текстур и самплеры.</p>
<div class="rj_insertcode">
<div class="rj_insertcode_hlsl">
<div class="hlsl" style="background: #f8f8f8; width: 100%; border-collapse: collapse; border: #054b6e 1px solid;">
<pre style="margin:0; background:none; vertical-align:top; padding: 0px 4px; font-size: 12px;"><span style="vertical-align:top">    texture sandMap<span style="color: #000066;">;</span></span>
<span style="vertical-align:top">    sampler sandSampler <span style="color: #000066;">=</span> sampler_state</span>
<span style="vertical-align:top">    <span style="color: #000066;">{</span></span>
<span style="vertical-align:top">        Texture   <span style="color: #000066;">=</span> <span style="color: #000066;">&lt;</span>sandMap<span style="color: #000066;">&gt;;</span></span>
<span style="vertical-align:top"> </span>
<span style="vertical-align:top">        MipFilter <span style="color: #000066;">=</span> Linear<span style="color: #000066;">;</span></span>
<span style="vertical-align:top">        MinFilter <span style="color: #000066;">=</span> Linear<span style="color: #000066;">;</span></span>
<span style="vertical-align:top">        MagFilter <span style="color: #000066;">=</span> Linear<span style="color: #000066;">;</span></span>
<span style="vertical-align:top"> </span>
<span style="vertical-align:top">        AddressU  <span style="color: #000066;">=</span> Wrap<span style="color: #000066;">;</span></span>
<span style="vertical-align:top">        AddressV  <span style="color: #000066;">=</span> Wrap<span style="color: #000066;">;</span></span>
<span style="vertical-align:top">    <span style="color: #000066;">}</span><span style="color: #000066;">;</span></span>
<span style="vertical-align:top"> </span>
<span style="vertical-align:top">    texture grassMap<span style="color: #000066;">;</span></span>
<span style="vertical-align:top">    sampler grassSampler <span style="color: #000066;">=</span> sampler_state</span>
<span style="vertical-align:top">    <span style="color: #000066;">{</span></span>
<span style="vertical-align:top">        Texture   <span style="color: #000066;">=</span> <span style="color: #000066;">&lt;</span>grassMap<span style="color: #000066;">&gt;;</span></span>
<span style="vertical-align:top"> </span>
<span style="vertical-align:top">        MipFilter <span style="color: #000066;">=</span> Linear<span style="color: #000066;">;</span></span>
<span style="vertical-align:top">        MinFilter <span style="color: #000066;">=</span> Linear<span style="color: #000066;">;</span></span>
<span style="vertical-align:top">        MagFilter <span style="color: #000066;">=</span> Linear<span style="color: #000066;">;</span></span>
<span style="vertical-align:top"> </span>
<span style="vertical-align:top">        AddressU  <span style="color: #000066;">=</span> Wrap<span style="color: #000066;">;</span></span>
<span style="vertical-align:top">        AddressV  <span style="color: #000066;">=</span> Wrap<span style="color: #000066;">;</span></span>
<span style="vertical-align:top">    <span style="color: #000066;">}</span><span style="color: #000066;">;</span></span>
<span style="vertical-align:top"> </span>
<span style="vertical-align:top">    texture rockMap<span style="color: #000066;">;</span></span>
<span style="vertical-align:top">    sampler rockSampler <span style="color: #000066;">=</span> sampler_state</span>
<span style="vertical-align:top">    <span style="color: #000066;">{</span></span>
<span style="vertical-align:top">        Texture   <span style="color: #000066;">=</span> <span style="color: #000066;">&lt;</span>rockMap<span style="color: #000066;">&gt;;</span></span>
<span style="vertical-align:top"> </span>
<span style="vertical-align:top">        MipFilter <span style="color: #000066;">=</span> Linear<span style="color: #000066;">;</span></span>
<span style="vertical-align:top">        MinFilter <span style="color: #000066;">=</span> Linear<span style="color: #000066;">;</span></span>
<span style="vertical-align:top">        MagFilter <span style="color: #000066;">=</span> Linear<span style="color: #000066;">;</span></span>
<span style="vertical-align:top"> </span>
<span style="vertical-align:top">        AddressU  <span style="color: #000066;">=</span> Wrap<span style="color: #000066;">;</span></span>
<span style="vertical-align:top">        AddressV  <span style="color: #000066;">=</span> Wrap<span style="color: #000066;">;</span></span>
<span style="vertical-align:top">    <span style="color: #000066;">}</span><span style="color: #000066;">;</span></span>
<span style="vertical-align:top"> </span>
<span style="vertical-align:top">    texture snowMap<span style="color: #000066;">;</span></span>
<span style="vertical-align:top">    sampler snowSampler <span style="color: #000066;">=</span> sampler_state</span>
<span style="vertical-align:top">    <span style="color: #000066;">{</span></span>
<span style="vertical-align:top">        Texture   <span style="color: #000066;">=</span> <span style="color: #000066;">&lt;</span>snowMap<span style="color: #000066;">&gt;;</span></span>
<span style="vertical-align:top"> </span>
<span style="vertical-align:top">        MipFilter <span style="color: #000066;">=</span> Linear<span style="color: #000066;">;</span></span>
<span style="vertical-align:top">        MinFilter <span style="color: #000066;">=</span> Linear<span style="color: #000066;">;</span></span>
<span style="vertical-align:top">        MagFilter <span style="color: #000066;">=</span> Linear<span style="color: #000066;">;</span></span>
<span style="vertical-align:top"> </span>
<span style="vertical-align:top">        AddressU  <span style="color: #000066;">=</span> Wrap<span style="color: #000066;">;</span></span>
<span style="vertical-align:top">        AddressV  <span style="color: #000066;">=</span> Wrap<span style="color: #000066;">;</span></span>
<span style="vertical-align:top">    <span style="color: #000066;">}</span><span style="color: #000066;">;</span></span></pre>
</div>
</div>
</div>
<p><span style="white-space:pre"></span>Теперь надо добавить параметр в 
выходную структуру вершинного шейдера. Для каждой вершины на выходе мы 
будем задавать 4 значения веса для каждой из текстур (песок, трава, 
скала, снег). Итак, для вершин с малым значением высоты мы будем 
накладывать только текстуру песка, так что вес для песка будет равен 1, 
пока все остальные веса будет равны 0. По мере увеличения высоты мы 
должны будем сделать переход от песка к траве, так что вес песка будет 
уменьшаться, а все травы увеличиваться. Так как каждое значение веса 
лежит в промежутке от 0,0 до 1,0, мы можем запаковать все значения в 4 
переменные типа float, а его в один float4 параметр. Новая выходная 
структура для вершинного шейдера будет выглядеть примерно следующим 
образом:</p>
<div class="rj_insertcode">
<div class="rj_insertcode_hlsl">
<div class="hlsl" style="background: #f8f8f8; width: 100%; border-collapse: collapse; border: #054b6e 1px solid;">
<pre style="margin:0; background:none; vertical-align:top; padding: 0px 4px; font-size: 12px;"><span style="vertical-align:top">    <span style="color: #000066; font-weight: bold;">struct</span> VS_OUTPUT</span>
<span style="vertical-align:top">    <span style="color: #000066;">{</span></span>
<span style="vertical-align:top">        <span style="color: #000066; font-weight: bold;">float4</span> position       <span style="color: #000066;">:</span> <span style="color: #551111;">POSITION</span><span style="color: #000066;">;</span></span>
<span style="vertical-align:top">        <span style="color: #000066; font-weight: bold;">float4</span> uv             <span style="color: #000066;">:</span> <span style="color: #551111;">TEXCOORD0</span><span style="color: #000066;">;</span></span>
<span style="vertical-align:top">        <span style="color: #000066; font-weight: bold;">float4</span> worldPos       <span style="color: #000066;">:</span> <span style="color: #551111;">TEXCOORD1</span><span style="color: #000066;">;</span></span>
<span style="vertical-align:top"> </span>
<span style="vertical-align:top">        <span style="color: #666666; font-style: italic;">// вес, использующийся для мультитекстурирования</span></span>
<span style="vertical-align:top">        <span style="color: #000066; font-weight: bold;">float4</span> textureWeights <span style="color: #000066;">:</span> <span style="color: #551111;">TEXCOORD2</span><span style="color: #000066;">;</span></span>
<span style="vertical-align:top">    <span style="color: #000066;">}</span><span style="color: #000066;">;</span></span></pre>
</div>
</div>
</div>
<p><span style="white-space:pre"></span>В конец вершинного шейдера (до возвращения параметра return Out;) добавьте следующий код:</p>
<div class="rj_insertcode">
<div class="rj_insertcode_hlsl">
<div class="hlsl" style="background: #f8f8f8; width: 100%; border-collapse: collapse; border: #054b6e 1px solid;">
<pre style="margin:0; background:none; vertical-align:top; padding: 0px 4px; font-size: 12px;"><span style="vertical-align:top">    <span style="color: #000066; font-weight: bold;">float4</span> TexWeights <span style="color: #000066;">=</span> <span style="color: #0000ff;">0</span><span style="color: #000066;">;</span></span>
<span style="vertical-align:top">    TexWeights<span style="color: #000066;">.</span><span style="color: #006600;">x</span> <span style="color: #000066;">=</span> saturate<span style="color: #000066;">(</span> 1<span style="color: #000066;">.</span>0f <span style="color: #000066;">-</span> <span style="color: #993333; font-weight: bold;">abs</span><span style="color: #000066;">(</span>height <span style="color: #000066;">-</span> <span style="color: #0000ff;">0.0</span><span style="color: #000066;">)</span> <span style="color: #000066;">/</span> 0<span style="color: #000066;">.</span>20f<span style="color: #000066;">)</span><span style="color: #000066;">;</span></span>
<span style="vertical-align:top">    TexWeights<span style="color: #000066;">.</span><span style="color: #006600;">y</span> <span style="color: #000066;">=</span> saturate<span style="color: #000066;">(</span> 1<span style="color: #000066;">.</span>0f <span style="color: #000066;">-</span> <span style="color: #993333; font-weight: bold;">abs</span><span style="color: #000066;">(</span>height <span style="color: #000066;">-</span> <span style="color: #0000ff;">0.3</span><span style="color: #000066;">)</span> <span style="color: #000066;">/</span> 0<span style="color: #000066;">.</span>25f<span style="color: #000066;">)</span><span style="color: #000066;">;</span></span>
<span style="vertical-align:top">    TexWeights<span style="color: #000066;">.</span><span style="color: #006600;">z</span> <span style="color: #000066;">=</span> saturate<span style="color: #000066;">(</span> 1<span style="color: #000066;">.</span>0f <span style="color: #000066;">-</span> <span style="color: #993333; font-weight: bold;">abs</span><span style="color: #000066;">(</span>height <span style="color: #000066;">-</span> <span style="color: #0000ff;">0.6</span><span style="color: #000066;">)</span> <span style="color: #000066;">/</span> 0<span style="color: #000066;">.</span>25f<span style="color: #000066;">)</span><span style="color: #000066;">;</span></span>
<span style="vertical-align:top">    TexWeights<span style="color: #000066;">.</span><span style="color: #006600;">w</span> <span style="color: #000066;">=</span> saturate<span style="color: #000066;">(</span> 1<span style="color: #000066;">.</span>0f <span style="color: #000066;">-</span> <span style="color: #993333; font-weight: bold;">abs</span><span style="color: #000066;">(</span>height <span style="color: #000066;">-</span> <span style="color: #0000ff;">0.9</span><span style="color: #000066;">)</span> <span style="color: #000066;">/</span> 0<span style="color: #000066;">.</span>25f<span style="color: #000066;">)</span><span style="color: #000066;">;</span></span>
<span style="vertical-align:top"> </span>
<span style="vertical-align:top">    <span style="color: #000066; font-weight: bold;">float</span> totalWeight <span style="color: #000066;">=</span> TexWeights<span style="color: #000066;">.</span><span style="color: #006600;">x</span> <span style="color: #000066;">+</span></span>
<span style="vertical-align:top">                        TexWeights<span style="color: #000066;">.</span><span style="color: #006600;">y</span> <span style="color: #000066;">+</span></span>
<span style="vertical-align:top">                        TexWeights<span style="color: #000066;">.</span><span style="color: #006600;">z</span> <span style="color: #000066;">+</span></span>
<span style="vertical-align:top">                        TexWeights<span style="color: #000066;">.</span><span style="color: #006600;">w</span><span style="color: #000066;">;</span></span>
<span style="vertical-align:top"> </span>
<span style="vertical-align:top">    TexWeights <span style="color: #000066;">/=</span> totalWeight<span style="color: #000066;">;</span></span>
<span style="vertical-align:top">    Out<span style="color: #000066;">.</span><span style="color: #006600;">textureWeights</span> <span style="color: #000066;">=</span> TexWeights<span style="color: #000066;">;</span></span></pre>
</div>
</div>
</div>
<p><span style="white-space:pre"></span>Каждый компонент вектора 
textureWeights содержит в себе вес для каждой из текстур, X – песок, Y –
 трава, Z – скала и W – снег. Для каждой из текстур задано значение на 
которой она начинает проявлять себя, затем достигает максимальной 
«видимости» и затухает, переходя в следующую текстуру. Последние 
инструкции нормализуют значения, чтобы сумма всех весов имела значение 
1, иначе мы получим темные или светлые участки в местах перехода 
текстур.</p>
<p><span style="white-space:pre"></span>Когда мы производим выборку в 
пиксельном шейдере, то текстурные координаты мы будем перемножать на 
специально подобранное значение (в нашем случае 8), это делается для 
повтора текстуры на все участки ландшафта. Если выбрать данное значение 
слишком маленьким, то уровень «натяжки» текстуры на ландшафт будет 
слишком большим и при близком рассмотрении будет заметна пикселизация. 
Если задать слишком большое значение, то повторение текстуры будет 
бросаться в глаза при просмотре с дальнего расстояния. Но вы свободны в 
выборе данного значения, можете посмотреть, к чему приведет его 
изменение. Техника называемая «detail texturing» может помочь в решении 
данной проблемы, она заключается в комбинировании с более 
детализированными текстурами при приближении к поверхности, но в данном 
уроке она рассматриваться не будет.<br><span style="white-space:pre"></span>И в завершении в пиксельном шейдере, мы считываем цвет со всех 4 текстур и на основе весов смешиваем их.</p>
<div class="rj_insertcode">
<div class="rj_insertcode_hlsl">
<div class="hlsl" style="background: #f8f8f8; width: 100%; border-collapse: collapse; border: #054b6e 1px solid;">
<pre style="margin:0; background:none; vertical-align:top; padding: 0px 4px; font-size: 12px;"><span style="vertical-align:top">    <span style="color: #000066; font-weight: bold;">float4</span> PixelShader<span style="color: #000066;">(</span><span style="color: #333399; font-weight: bold;">in</span> <span style="color: #000066; font-weight: bold;">float4</span> uv      <span style="color: #000066;">:</span> <span style="color: #551111;">TEXCOORD0</span><span style="color: #000066;">,</span></span>
<span style="vertical-align:top">                       <span style="color: #333399; font-weight: bold;">in</span> <span style="color: #000066; font-weight: bold;">float4</span> weights <span style="color: #000066;">:</span> <span style="color: #551111;">TEXCOORD2</span><span style="color: #000066;">)</span> <span style="color: #000066;">:</span> <span style="color: #551111;">COLOR</span></span>
<span style="vertical-align:top">    <span style="color: #000066;">{</span></span>
<span style="vertical-align:top">         <span style="color: #000066; font-weight: bold;">float4</span> sand  <span style="color: #000066;">=</span> <span style="color: #993333; font-weight: bold;">tex2D</span><span style="color: #000066;">(</span>sandSampler<span style="color: #000066;">,</span>  uv <span style="color: #000066;">*</span> <span style="color: #0000ff;">8</span> <span style="color: #000066;">)</span><span style="color: #000066;">;</span></span>
<span style="vertical-align:top">         <span style="color: #000066; font-weight: bold;">float4</span> grass <span style="color: #000066;">=</span> <span style="color: #993333; font-weight: bold;">tex2D</span><span style="color: #000066;">(</span>grassSampler<span style="color: #000066;">,</span> uv <span style="color: #000066;">*</span> <span style="color: #0000ff;">8</span> <span style="color: #000066;">)</span><span style="color: #000066;">;</span></span>
<span style="vertical-align:top">         <span style="color: #000066; font-weight: bold;">float4</span> rock  <span style="color: #000066;">=</span> <span style="color: #993333; font-weight: bold;">tex2D</span><span style="color: #000066;">(</span>rockSampler<span style="color: #000066;">,</span>  uv <span style="color: #000066;">*</span> <span style="color: #0000ff;">8</span> <span style="color: #000066;">)</span><span style="color: #000066;">;</span></span>
<span style="vertical-align:top">         <span style="color: #000066; font-weight: bold;">float4</span> snow  <span style="color: #000066;">=</span> <span style="color: #993333; font-weight: bold;">tex2D</span><span style="color: #000066;">(</span>snowSampler<span style="color: #000066;">,</span>  uv <span style="color: #000066;">*</span> <span style="color: #0000ff;">8</span> <span style="color: #000066;">)</span><span style="color: #000066;">;</span></span>
<span style="vertical-align:top"> </span>
<span style="vertical-align:top">         <span style="color: #000000; font-weight: bold;">return</span> sand  <span style="color: #000066;">*</span> weights<span style="color: #000066;">.</span><span style="color: #006600;">x</span> <span style="color: #000066;">+</span></span>
<span style="vertical-align:top">                grass <span style="color: #000066;">*</span> weights<span style="color: #000066;">.</span><span style="color: #006600;">y</span> <span style="color: #000066;">+</span></span>
<span style="vertical-align:top">                rock  <span style="color: #000066;">*</span> weights<span style="color: #000066;">.</span><span style="color: #006600;">z</span> <span style="color: #000066;">+</span></span>
<span style="vertical-align:top">                snow  <span style="color: #000066;">*</span> weights<span style="color: #000066;">.</span><span style="color: #006600;">w</span><span style="color: #000066;">;</span> </span>
<span style="vertical-align:top">    <span style="color: #000066;">}</span></span></pre>
</div>
</div>
</div>
<p><span style="white-space:pre"></span>В коде приложения объявляем поля для текстур:</p>
<div class="rj_insertcode">
<div class="rj_insertcode_csharp">
<div class="csharp" style="background: #f8f8f8; width: 100%; border-collapse: collapse; border: #054b6e 1px solid;">
<pre style="margin:0; background:none; vertical-align:top; padding: 0px 4px; font-size: 12px;"><span style="vertical-align:top">        Texture2D sandTexture<span style="color: #008000;">;</span></span>
<span style="vertical-align:top">        Texture2D grassTexture<span style="color: #008000;">;</span></span>
<span style="vertical-align:top">        Texture2D rockTexture<span style="color: #008000;">;</span></span>
<span style="vertical-align:top">        Texture2D snowTexture<span style="color: #008000;">;</span></span></pre>
</div>
</div>
</div>
<p><span style="white-space:pre"></span>В методе LoadGraphicsContent загружаем их:</p>
<div class="rj_insertcode">
<div class="rj_insertcode_csharp">
<div class="csharp" style="background: #f8f8f8; width: 100%; border-collapse: collapse; border: #054b6e 1px solid;">
<pre style="margin:0; background:none; vertical-align:top; padding: 0px 4px; font-size: 12px;"><span style="vertical-align:top">            sandTexture <span style="color: #008000;">=</span> content.<span style="color: #0000FF;">Load</span><span style="color: #008000;">&lt;</span>Texture2D<span style="color: #008000;">&gt;</span><span style="color: #000000;">(</span><span style="color: #666666;">"Textures<span style="color: #008080; font-weight: bold;">\</span>sand"</span><span style="color: #000000;">)</span><span style="color: #008000;">;</span></span>
<span style="vertical-align:top">            grassTexture <span style="color: #008000;">=</span> content.<span style="color: #0000FF;">Load</span><span style="color: #008000;">&lt;</span>Texture2D<span style="color: #008000;">&gt;</span><span style="color: #000000;">(</span><span style="color: #666666;">"Textures<span style="color: #008080; font-weight: bold;">\</span>grass"</span><span style="color: #000000;">)</span><span style="color: #008000;">;</span></span>
<span style="vertical-align:top">            rockTexture <span style="color: #008000;">=</span> content.<span style="color: #0000FF;">Load</span><span style="color: #008000;">&lt;</span>Texture2D<span style="color: #008000;">&gt;</span><span style="color: #000000;">(</span><span style="color: #666666;">"Textures<span style="color: #008080; font-weight: bold;">\</span>rock"</span><span style="color: #000000;">)</span><span style="color: #008000;">;</span></span>
<span style="vertical-align:top">            snowTexture <span style="color: #008000;">=</span> content.<span style="color: #0000FF;">Load</span><span style="color: #008000;">&lt;</span>Texture2D<span style="color: #008000;">&gt;</span><span style="color: #000000;">(</span><span style="color: #666666;">"Textures<span style="color: #008080; font-weight: bold;">\</span>snow"</span><span style="color: #000000;">)</span><span style="color: #008000;">;</span></span></pre>
</div>
</div>
</div>
<p><span style="white-space:pre"></span>А в методе Draw передаем в шейдер в виде параметров:</p>
<div class="rj_insertcode">
<div class="rj_insertcode_csharp">
<div class="csharp" style="background: #f8f8f8; width: 100%; border-collapse: collapse; border: #054b6e 1px solid;">
<pre style="margin:0; background:none; vertical-align:top; padding: 0px 4px; font-size: 12px;"><span style="vertical-align:top">            gridEffect.<span style="color: #0000FF;">Parameters</span><span style="color: #000000;">[</span><span style="color: #666666;">"sandMap"</span><span style="color: #000000;">]</span>.<span style="color: #0000FF;">SetValue</span><span style="color: #000000;">(</span>sandTexture<span style="color: #000000;">)</span><span style="color: #008000;">;</span></span>
<span style="vertical-align:top">            gridEffect.<span style="color: #0000FF;">Parameters</span><span style="color: #000000;">[</span><span style="color: #666666;">"grassMap"</span><span style="color: #000000;">]</span>.<span style="color: #0000FF;">SetValue</span><span style="color: #000000;">(</span>grassTexture<span style="color: #000000;">)</span><span style="color: #008000;">;</span></span>
<span style="vertical-align:top">            gridEffect.<span style="color: #0000FF;">Parameters</span><span style="color: #000000;">[</span><span style="color: #666666;">"rockMap"</span><span style="color: #000000;">]</span>.<span style="color: #0000FF;">SetValue</span><span style="color: #000000;">(</span>rockTexture<span style="color: #000000;">)</span><span style="color: #008000;">;</span></span>
<span style="vertical-align:top">            gridEffect.<span style="color: #0000FF;">Parameters</span><span style="color: #000000;">[</span><span style="color: #666666;">"snowMap"</span><span style="color: #000000;">]</span>.<span style="color: #0000FF;">SetValue</span><span style="color: #000000;">(</span>snowTexture<span style="color: #000000;">)</span><span style="color: #008000;">;</span></span></pre>
</div>
</div>
</div>
<p><span style="white-space:pre"></span>В итоге поверхность должна выглядеть примерно следующим образом:</p>
<p><img src="XnaDev.ru%20-%20XNA%20%D0%BD%D0%BE%D0%B2%D0%BE%D1%81%D1%82%D0%B8%20%D1%83%D1%80%D0%BE%D0%BA%D0%B8%20%D1%81%D1%82%D0%B0%D1%82%D1%8C%D0%B8%20%28xna.ru%29_files/textured.PNG" border="0"></p>
<p><span style="white-space:pre"></span>Итак, в первом уроке мы 
рассмотрели, как использовать вершинные текстуры для построения 
ландшафта, используя карту высот и наложить на него текстуры при помощи 
мультитекстурирования, причем вся обработка велась на графическом 
процессоре. Также мы рассмотрели, как реализовать билинейную фильтрацию в
 вершинном шейдере. Прошу не обращать внимания на то, что мы все это 
сделали на GPU и пересчитывали каждый кадр, вместо того чтобы сделать 
все расчета один раз на CPU в момент загрузки, в следующей части мы 
рассмотрим, как реализовать морфинг (morph) ландшафта и как добавлять на
 него деформации. По большому счету всю эту функциональность можно 
реализовать и на CPU, но мы все сделали на GPU, оставив ресурсы 
центрального процессора для других задач, например: реализация логики 
геймплея, физики, AI и т.п.</p>
<p><span style="white-space:pre"></span>Полный код этой главы можно скачать тут: <a href="http://www.xnadev.ru/_Content/Tutorials/VTF/Chapter1.zip" target="_blank">Chapter1.rar</a></p>
<p></p>
<p><span style="font-weight: bold;"><span style="white-space: pre;"></span>II. Морфинг ландшафта</span></p>
<p><span style="white-space:pre"></span>В данной главе мы рассмотрим 
реализацию трансформации ландшафта между двумя картами высот. Где можно 
применить данный эффект: перемещение между уровнями, ускоренная анимация
 изменения поверхности, происходящие с ландшафтом в течение миллиардов 
лет (наглядная реализация в фильме «Машина времени») или анимация 
природных катаклизмах и землетрясений. Я уверен, что вы придумаете, где 
использовать этот эффект. Метод, рассматриваемый в этой части является 
отправной точкой для реализации прочих эффектов, которые будут 
рассматриваться далее.<br><span style="white-space:pre"></span>Как мы 
видели ранее, каждая вершина соотносится с пикселем карты высот, чтобы 
осуществить морфинг мы должны интерполировать представление высоты между
 первой и второй картой высот. Даная интерполяция будет оперировать 
данными в промежутке между 0,0 и 1,0. Если мы плавно будем изменять это 
число, то ландшафт так же плавно «перетечет» из одной формы в другую. 
Итак, для простоты назовем это число – морф фактором (morph factor).<br><span style="white-space:pre"></span>В
 чем же преимущество выполнения данной операции на GPU? Если мы будем 
производить все расчеты на стороне CPU, то вершинный буфер будет 
изменяться каждый кадр, что является довольно дорогостоящей операцией. 
Ребята из команды разработчиков XNA проделали великолепную работу и 
использование DrawUserIndexedPrimitives или DrawUserPrimitives может 
значительно упростить задачу, чтобы сильно не заморачиваться с 
динамическим вершинным буфером, но мы попытаемся все же реализовать это 
на GPU, если получится. Есть два способа достичь желаемого результата.</p>
<p><span style="font-style: italic;">Реализация морфинга в вершинном шейдере</span></p>
<p><span style="font-style: italic;"><br></span><span style="white-space:pre"></span>Первый
 способ заключается в чтении данных высоты из второй карты высот в 
вершинном шейдере и интерполяции между этими значениями. Начнем мы с 
кода, написанного в первой части. Добавьте вторую карту высот 
height2.dds в проект, в папку Textures, затем в классе Game1.cs добавьте
 поле для текстуры и загрузите ее в методе LoadGraphicsContent.</p>
<p>&nbsp;</p>
<div class="rj_insertcode">
<div class="rj_insertcode_csharp">
<div class="csharp" style="background: #f8f8f8; width: 100%; border-collapse: collapse; border: #054b6e 1px solid;">
<pre style="margin:0; background:none; vertical-align:top; padding: 0px 4px; font-size: 12px;"><span style="vertical-align:top">Texture2D displacementTexture2<span style="color: #008000;">;</span></span>
<span style="vertical-align:top"><span style="color: #000000;">[</span>...<span style="color: #000000;">]</span></span>
<span style="vertical-align:top"> </span>
<span style="vertical-align:top"><span style="color: #0600FF;">protected</span> <span style="color: #0600FF;">override</span> <span style="color: #0600FF;">void</span> LoadGraphicsContent<span style="color: #000000;">(</span><span style="color: #FF0000;">bool</span> loadAllContent<span style="color: #000000;">)</span></span>
<span style="vertical-align:top"><span style="color: #000000;">{</span></span>
<span style="vertical-align:top">    <span style="color: #000000;">[</span>...<span style="color: #000000;">]</span></span>
<span style="vertical-align:top">    displacementTexture2 <span style="color: #008000;">=</span> content.<span style="color: #0000FF;">Load</span><span style="color: #008000;">&lt;</span>Texture2D<span style="color: #008000;">&gt;</span><span style="color: #000000;">(</span><span style="color: #666666;">"Textures<span style="color: #008080; font-weight: bold;">\</span>height2"</span><span style="color: #000000;">)</span><span style="color: #008000;">;</span></span>
<span style="vertical-align:top"><span style="color: #000000;">}</span></span></pre>
</div>
</div>
</div>
<p><span style="white-space:pre"></span>В файле шейдера VTFDisplacement.fx добавляем новый float параметр – morphFactor, текстуру и самплер для второй карты высот.</p>
<div class="rj_insertcode">
<div class="rj_insertcode_hlsl">
<div class="hlsl" style="background: #f8f8f8; width: 100%; border-collapse: collapse; border: #054b6e 1px solid;">
<pre style="margin:0; background:none; vertical-align:top; padding: 0px 4px; font-size: 12px;"><span style="vertical-align:top">    <span style="color: #000066; font-weight: bold;">float</span> morphFactor <span style="color: #000066;">=</span> 0<span style="color: #000066;">.</span>0f<span style="color: #000066;">;</span></span>
<span style="vertical-align:top"> </span>
<span style="vertical-align:top">    texture displacementMap2<span style="color: #000066;">;</span></span>
<span style="vertical-align:top">    sampler displacementSampler2 <span style="color: #000066;">=</span> sampler_state</span>
<span style="vertical-align:top">    <span style="color: #000066;">{</span></span>
<span style="vertical-align:top">        Texture   <span style="color: #000066;">=</span> <span style="color: #000066;">&lt;</span>displacementMap2<span style="color: #000066;">&gt;;</span></span>
<span style="vertical-align:top"> </span>
<span style="vertical-align:top">        MipFilter <span style="color: #000066;">=</span> Point<span style="color: #000066;">;</span></span>
<span style="vertical-align:top">        MinFilter <span style="color: #000066;">=</span> Point<span style="color: #000066;">;</span></span>
<span style="vertical-align:top">        MagFilter <span style="color: #000066;">=</span> Point<span style="color: #000066;">;</span></span>
<span style="vertical-align:top"> </span>
<span style="vertical-align:top">        AddressU  <span style="color: #000066;">=</span> Clamp<span style="color: #000066;">;</span></span>
<span style="vertical-align:top">        AddressV  <span style="color: #000066;">=</span> Clamp<span style="color: #000066;">;</span></span>
<span style="vertical-align:top">    <span style="color: #000066;">}</span><span style="color: #000066;">;</span></span></pre>
</div>
</div>
</div>
<p><span style="white-space:pre"></span>В вершинном шейдере будем читать данные высот из двух текстур, и интерполировать между этими двумя значениями.</p>
<div class="rj_insertcode">
<div class="rj_insertcode_hlsl">
<div class="hlsl" style="background: #f8f8f8; width: 100%; border-collapse: collapse; border: #054b6e 1px solid;">
<pre style="margin:0; background:none; vertical-align:top; padding: 0px 4px; font-size: 12px;"><span style="vertical-align:top">    VS_OUTPUT Transform<span style="color: #000066;">(</span>VS_INPUT In<span style="color: #000066;">)</span></span>
<span style="vertical-align:top">    <span style="color: #000066;">{</span></span>
<span style="vertical-align:top">        <span style="color: #000066;">[</span><span style="color: #000066;">...</span><span style="color: #000066;">]</span>   </span>
<span style="vertical-align:top">        <span style="color: #666666; font-style: italic;">// Читаем даннные из первой карты высот</span></span>
<span style="vertical-align:top">        <span style="color: #000066; font-weight: bold;">float</span> height1 <span style="color: #000066;">=</span> tex2Dlod_bilinear<span style="color: #000066;">(</span> displacementSampler<span style="color: #000066;">,</span></span>
<span style="vertical-align:top">                                           <span style="color: #000066; font-weight: bold;">float4</span><span style="color: #000066;">(</span>In<span style="color: #000066;">.</span><span style="color: #006600;">uv</span><span style="color: #000066;">.</span><span style="color: #006600;">xy</span><span style="color: #000066;">,</span><span style="color: #0000ff;">0</span><span style="color: #000066;">,</span><span style="color: #0000ff;">0</span><span style="color: #000066;">)</span><span style="color: #000066;">)</span><span style="color: #000066;">;</span></span>
<span style="vertical-align:top"> </span>
<span style="vertical-align:top">        <span style="color: #666666; font-style: italic;">// Читаем данные из второй карты высот</span></span>
<span style="vertical-align:top">        <span style="color: #000066; font-weight: bold;">float</span> height2 <span style="color: #000066;">=</span> tex2Dlod_bilinear<span style="color: #000066;">(</span> displacementSampler2<span style="color: #000066;">,</span></span>
<span style="vertical-align:top">                                           <span style="color: #000066; font-weight: bold;">float4</span><span style="color: #000066;">(</span>In<span style="color: #000066;">.</span><span style="color: #006600;">uv</span><span style="color: #000066;">.</span><span style="color: #006600;">xy</span><span style="color: #000066;">,</span><span style="color: #0000ff;">0</span><span style="color: #000066;">,</span><span style="color: #0000ff;">0</span><span style="color: #000066;">)</span><span style="color: #000066;">)</span><span style="color: #000066;">;</span></span>
<span style="vertical-align:top"> </span>
<span style="vertical-align:top">        <span style="color: #666666; font-style: italic;">// Итерполируем мужду двумя значениями на основе морф фактора</span></span>
<span style="vertical-align:top">        <span style="color: #000066; font-weight: bold;">float</span> height <span style="color: #000066;">=</span> lerp<span style="color: #000066;">(</span>height1<span style="color: #000066;">,</span> height2<span style="color: #000066;">,</span> morphFactor<span style="color: #000066;">)</span><span style="color: #000066;">;</span></span>
<span style="vertical-align:top">        <span style="color: #000066;">[</span><span style="color: #000066;">...</span><span style="color: #000066;">]</span></span>
<span style="vertical-align:top">    <span style="color: #000066;">}</span></span></pre>
</div>
</div>
</div>
<p><span style="white-space:pre"></span>И последнее, что мы должны 
сделать, передать параметры в шейдер из кода приложения. Идем опять в 
класс Game1.cs и в методе Draw добавляем следующий код:</p>
<div class="rj_insertcode">
<div class="rj_insertcode_csharp">
<div class="csharp" style="background: #f8f8f8; width: 100%; border-collapse: collapse; border: #054b6e 1px solid;">
<pre style="margin:0; background:none; vertical-align:top; padding: 0px 4px; font-size: 12px;"><span style="vertical-align:top">gridEffect.<span style="color: #0000FF;">Parameters</span><span style="color: #000000;">[</span><span style="color: #666666;">"displacementMap2"</span><span style="color: #000000;">]</span>.<span style="color: #0000FF;">SetValue</span><span style="color: #000000;">(</span>displacementTexture2<span style="color: #000000;">)</span><span style="color: #008000;">;</span></span>
<span style="vertical-align:top">gridEffect.<span style="color: #0000FF;">Parameters</span><span style="color: #000000;">[</span><span style="color: #666666;">"morphFactor"</span><span style="color: #000000;">]</span>.<span style="color: #0000FF;">SetValue</span><span style="color: #000000;">(</span><span style="color: #000000;">(</span><span style="color: #FF0000;">float</span><span style="color: #000000;">)</span>Math.<span style="color: #0000FF;">Sin</span><span style="color: #000000;">(</span></span>
<span style="vertical-align:top">    gameTime.<span style="color: #0000FF;">TotalGameTime</span>.<span style="color: #0000FF;">TotalSeconds</span><span style="color: #000000;">)</span> <span style="color: #008000;">*</span> 0.5f <span style="color: #008000;">+</span> 0.5f<span style="color: #000000;">)</span><span style="color: #008000;">;</span></span></pre>
</div>
</div>
</div>
<p><span style="white-space:pre"></span>Мы используем функцию синуса для зацикливания плавного перехода между двумя картами высот. Можно теперь запустить приложение.</p>
<p><img src="XnaDev.ru%20-%20XNA%20%D0%BD%D0%BE%D0%B2%D0%BE%D1%81%D1%82%D0%B8%20%D1%83%D1%80%D0%BE%D0%BA%D0%B8%20%D1%81%D1%82%D0%B0%D1%82%D1%8C%D0%B8%20%28xna.ru%29_files/morph.PNG" border="0"></p>
<p><span style="white-space:pre"></span>Данный подход легок в реализации
 и требует всего несколько строк кода, но как можно заметить очень 
сильно сказывается на производительности. Основная причина «тормозов» в 
том, что в вершинном шейдере мы читаем две высоты. Каждая операция 
чтения производит 4 выборки из текстуры, итого мы получаем 8 чтений из 
текстур для каждой вершины, а это сильно затормаживает всю работу 
(запомните, чтение из вершинной текстуры намного медленнее, чем чтение 
из текстуры в пиксельном шейдере). Чтобы хоть как-то ускорить процесс мы
 можем отказаться от билинейной фильтрации, тогда мы будем выполнять 
всего 2 чтения текстуры на вершину, но вернемся опять к «лестнице» между
 парами вершин. Далее мы рассмотрим, как сохранить билинейную 
фильтрацию, не теряя сильно в производительности.</p>
<p><span style="font-style: italic;"><span style="white-space:pre"></span>Морфинг с использованием отрисовки в текстуру</span></p>
<p><span style="white-space:pre"></span>Метод который мы далее 
рассмотрим называется отрисовка в текстуру (Render To Texture). Перед 
рисованием ландшафта, мы объединим цвета двух карт высот в пиксельном 
шейдере. Результирующий цвет будет, как и раньше получен путем 
интерполяции на основе морф фактора. Вместо вывода изображения на экран,
 мы запишем его в текстуру, а уже потом будем рисовать ландшафт, но в 
качестве карты высот будем использовать уже готовую (запеченную) 
текстуру. Скорость создания интерполированной карты высот довольно 
высока, так как будет производиться в пиксельном шейдере, пиксельный 
шейдер будет использовать билинейную фильтрацию, но скорость все равно 
возрастет.<br><span style="white-space:pre"></span>Для начала мы должны 
использовать код шейдера VTFDisplacement.fx в том состоянии, в котором 
он был в конце предыдущей части (уберите вторую карту высот и код 
реализующий интерполяцию). В папке Shaders создайте новый фал с именем 
TextureMorph.fx, откройте его. Нам надо добавить две текстуры, которые 
мы будем смешивать и самплеры для них.</p>
<div class="rj_insertcode">
<div class="rj_insertcode_hlsl">
<div class="hlsl" style="background: #f8f8f8; width: 100%; border-collapse: collapse; border: #054b6e 1px solid;">
<pre style="margin:0; background:none; vertical-align:top; padding: 0px 4px; font-size: 12px;"><span style="vertical-align:top">    texture textureMap1<span style="color: #000066;">;</span></span>
<span style="vertical-align:top">    sampler textureSampler1 <span style="color: #000066;">:</span> register<span style="color: #000066;">(</span>s0<span style="color: #000066;">)</span> <span style="color: #000066;">=</span> sampler_state</span>
<span style="vertical-align:top">    <span style="color: #000066;">{</span></span>
<span style="vertical-align:top">       Texture   <span style="color: #000066;">=</span> <span style="color: #000066;">(</span>textureMap1<span style="color: #000066;">)</span><span style="color: #000066;">;</span></span>
<span style="vertical-align:top"> </span>
<span style="vertical-align:top">       ADDRESSU  <span style="color: #000066;">=</span> WRAP<span style="color: #000066;">;</span></span>
<span style="vertical-align:top">       ADDRESSV  <span style="color: #000066;">=</span> WRAP<span style="color: #000066;">;</span></span>
<span style="vertical-align:top"> </span>
<span style="vertical-align:top">       MAGFILTER <span style="color: #000066;">=</span> LINEAR<span style="color: #000066;">;</span></span>
<span style="vertical-align:top">       MINFILTER <span style="color: #000066;">=</span> LINEAR<span style="color: #000066;">;</span></span>
<span style="vertical-align:top">       MIPFILTER <span style="color: #000066;">=</span> LINEAR<span style="color: #000066;">;</span></span>
<span style="vertical-align:top">    <span style="color: #000066;">}</span><span style="color: #000066;">;</span></span>
<span style="vertical-align:top"> </span>
<span style="vertical-align:top">    texture textureMap2<span style="color: #000066;">;</span></span>
<span style="vertical-align:top">    sampler textureSampler2 <span style="color: #000066;">:</span> register<span style="color: #000066;">(</span>s1<span style="color: #000066;">)</span> <span style="color: #000066;">=</span> sampler_state</span>
<span style="vertical-align:top">    <span style="color: #000066;">{</span></span>
<span style="vertical-align:top">       Texture   <span style="color: #000066;">=</span> <span style="color: #000066;">(</span>textureMap2<span style="color: #000066;">)</span><span style="color: #000066;">;</span></span>
<span style="vertical-align:top"> </span>
<span style="vertical-align:top">       ADDRESSU  <span style="color: #000066;">=</span> WRAP<span style="color: #000066;">;</span></span>
<span style="vertical-align:top">       ADDRESSV  <span style="color: #000066;">=</span> WRAP<span style="color: #000066;">;</span></span>
<span style="vertical-align:top"> </span>
<span style="vertical-align:top">       MAGFILTER <span style="color: #000066;">=</span> LINEAR<span style="color: #000066;">;</span></span>
<span style="vertical-align:top">       MINFILTER <span style="color: #000066;">=</span> LINEAR<span style="color: #000066;">;</span></span>
<span style="vertical-align:top">       MIPFILTER <span style="color: #000066;">=</span> LINEAR<span style="color: #000066;">;</span></span>
<span style="vertical-align:top">    <span style="color: #000066;">}</span><span style="color: #000066;">;</span></span></pre>
</div>
</div>
</div>
<p><span style="white-space:pre"></span>Добавляем параметр morphFactor и
 далее создаем пиксельный шейдер в котором будем смешивать две текстуры.
 Мы интерполируем два цвета пикселя текстур на основе морф фактора, так 
же как мы это делали до этого, но на этот раз в пиксельном шейдере.</p>
<div class="rj_insertcode">
<div class="rj_insertcode_hlsl">
<div class="hlsl" style="background: #f8f8f8; width: 100%; border-collapse: collapse; border: #054b6e 1px solid;">
<pre style="margin:0; background:none; vertical-align:top; padding: 0px 4px; font-size: 12px;"><span style="vertical-align:top">    <span style="color: #000066; font-weight: bold;">float</span> morphFactor <span style="color: #000066;">=</span> 0<span style="color: #000066;">.</span>0f<span style="color: #000066;">;</span></span>
<span style="vertical-align:top"> </span>
<span style="vertical-align:top">    <span style="color: #000066; font-weight: bold;">float4</span> PixelShaderMorph<span style="color: #000066;">(</span><span style="color: #333399; font-weight: bold;">in</span> <span style="color: #000066; font-weight: bold;">float2</span> uv <span style="color: #000066;">:</span> <span style="color: #551111;">TEXCOORD0</span><span style="color: #000066;">)</span> <span style="color: #000066;">:</span> <span style="color: #551111;">COLOR</span></span>
<span style="vertical-align:top">    <span style="color: #000066;">{</span></span>
<span style="vertical-align:top">     <span style="color: #000066; font-weight: bold;">float4</span> color1 <span style="color: #000066;">=</span> <span style="color: #993333; font-weight: bold;">tex2D</span><span style="color: #000066;">(</span>textureSampler1<span style="color: #000066;">,</span> uv<span style="color: #000066;">)</span><span style="color: #000066;">;</span></span>
<span style="vertical-align:top">     <span style="color: #000066; font-weight: bold;">float4</span> color2 <span style="color: #000066;">=</span> <span style="color: #993333; font-weight: bold;">tex2D</span><span style="color: #000066;">(</span>textureSampler2<span style="color: #000066;">,</span> uv<span style="color: #000066;">)</span><span style="color: #000066;">;</span></span>
<span style="vertical-align:top"> </span>
<span style="vertical-align:top">     <span style="color: #000000; font-weight: bold;">return</span> lerp<span style="color: #000066;">(</span>color1<span style="color: #000066;">,</span> color2<span style="color: #000066;">,</span> morphFactor<span style="color: #000066;">)</span><span style="color: #000066;">;</span></span>
<span style="vertical-align:top">    <span style="color: #000066;">}</span></span>
<span style="vertical-align:top"> </span>
<span style="vertical-align:top">    <span style="color: #333399; font-weight: bold;">technique</span> TextureMorph</span>
<span style="vertical-align:top">    <span style="color: #000066;">{</span></span>
<span style="vertical-align:top">        <span style="color: #333399; font-weight: bold;">pass</span> P0</span>
<span style="vertical-align:top">        <span style="color: #000066;">{</span></span>
<span style="vertical-align:top">            pixelShader <span style="color: #000066;">=</span> compile ps_3_0 PixelShaderMorph<span style="color: #000066;">(</span><span style="color: #000066;">)</span><span style="color: #000066;">;</span></span>
<span style="vertical-align:top">        <span style="color: #000066;">}</span></span>
<span style="vertical-align:top">    <span style="color: #000066;">}</span></span></pre>
</div>
</div>
</div>
<p><span style="white-space:pre"></span>Для упрощения мы будем 
использовать SpriteBatcth для рендеринга нашей интерполированной 
текстуры. По этой причине для реализации нашего подхода – TextureMorph 
нам необходим только пиксельный шейдер, так как работу с вершинами на 
себя берет SpriteBatch. Мы будем использовать SpriteBatcth в комбинации с
 нашим шейдером, так же как это реализовано в примере <a href="http://creators.xna.com/Headlines/developmentaspx/archive/2007/01/01/Sprite-Effects-Sample.aspx" target="_blank">Sprite Effects Sample</a>.</p>
<p><span style="white-space:pre"></span>Далее откройте код класса Game1.cs и добавьте следующие поля в класс</p>
<div class="rj_insertcode">
<div class="rj_insertcode_csharp">
<div class="csharp" style="background: #f8f8f8; width: 100%; border-collapse: collapse; border: #054b6e 1px solid;">
<pre style="margin:0; background:none; vertical-align:top; padding: 0px 4px; font-size: 12px;"><span style="vertical-align:top">    Effect morphEffect<span style="color: #008000;">;</span></span>
<span style="vertical-align:top">    RenderTarget2D morphRenderTarget<span style="color: #008000;">;</span></span>
<span style="vertical-align:top">    DepthStencilBuffer morphDepthBuffer<span style="color: #008000;">;</span></span>
<span style="vertical-align:top">    SpriteBatch morphSpriteBatch<span style="color: #008000;">;</span></span></pre>
</div>
</div>
</div>
<p><span style="white-space:pre"></span>Переменная morphEffect будет 
использоваться для шейдера написанного ранее (TextureMorph.fx), 
morphRenderTarget, morphDepthBuffer и morphSpriteBatch будеи 
использованы для отрисовки в текстуру (Render To Texture) при создании 
новой карты высот. Далее в методе LoadGraphicsContent инициализируем все
 новые поля. В качестве размера используется значение 256, так как такой
 же размер у обеих карт высот.</p>
<div class="rj_insertcode">
<div class="rj_insertcode_csharp">
<div class="csharp" style="background: #f8f8f8; width: 100%; border-collapse: collapse; border: #054b6e 1px solid;">
<pre style="margin:0; background:none; vertical-align:top; padding: 0px 4px; font-size: 12px;"><span style="vertical-align:top">    morphEffect <span style="color: #008000;">=</span> content.<span style="color: #0000FF;">Load</span><span style="color: #008000;">&lt;</span>Effect<span style="color: #008000;">&gt;</span><span style="color: #000000;">(</span><span style="color: #666666;">"Shaders<span style="color: #008080; font-weight: bold;">\</span>TextureMorph"</span><span style="color: #000000;">)</span><span style="color: #008000;">;</span></span>
<span style="vertical-align:top">    morphRenderTarget <span style="color: #008000;">=</span> <a href="http://www.google.com/search?q=new+msdn.microsoft.com"><span style="color: #008000;">new</span></a> RenderTarget2D<span style="color: #000000;">(</span></span>
<span style="vertical-align:top">                            graphics.<span style="color: #0000FF;">GraphicsDevice</span>,</span>
<span style="vertical-align:top">                            <span style="color: #FF0000;">256</span>,</span>
<span style="vertical-align:top">                            <span style="color: #FF0000;">256</span>,</span>
<span style="vertical-align:top">                            <span style="color: #FF0000;">1</span>,</span>
<span style="vertical-align:top">                            SurfaceFormat.<span style="color: #0000FF;">Single</span><span style="color: #000000;">)</span><span style="color: #008000;">;</span></span>
<span style="vertical-align:top">    morphDepthBuffer <span style="color: #008000;">=</span> <a href="http://www.google.com/search?q=new+msdn.microsoft.com"><span style="color: #008000;">new</span></a> DepthStencilBuffer<span style="color: #000000;">(</span></span>
<span style="vertical-align:top">                            graphics.<span style="color: #0000FF;">GraphicsDevice</span>,</span>
<span style="vertical-align:top">                            <span style="color: #FF0000;">256</span>,</span>
<span style="vertical-align:top">                            <span style="color: #FF0000;">256</span>,</span>
<span style="vertical-align:top">                            graphics.<span style="color: #0000FF;">GraphicsDevice</span>.<span style="color: #0000FF;">DepthStencilBuffer</span>.<span style="color: #0000FF;">Format</span><span style="color: #000000;">)</span><span style="color: #008000;">;</span></span>
<span style="vertical-align:top">    morphSpriteBatch <span style="color: #008000;">=</span> <a href="http://www.google.com/search?q=new+msdn.microsoft.com"><span style="color: #008000;">new</span></a> SpriteBatch<span style="color: #000000;">(</span>graphics.<span style="color: #0000FF;">GraphicsDevice</span><span style="color: #000000;">)</span><span style="color: #008000;">;</span></span></pre>
</div>
</div>
</div>
<p><span style="white-space:pre"></span>Теперь напишем новый метод, 
принимающий в качестве параметра значение с типом данных float, который 
будет реализовывать отрисовку в текстуру для получения новой карты 
высот.</p>
<div class="rj_insertcode">
<div class="rj_insertcode_csharp">
<div class="csharp" style="background: #f8f8f8; width: 100%; border-collapse: collapse; border: #054b6e 1px solid;">
<pre style="margin:0; background:none; vertical-align:top; padding: 0px 4px; font-size: 12px;"><span style="vertical-align:top">    <span style="color: #0600FF;">protected</span> <span style="color: #0600FF;">void</span> Render2TextureMorph<span style="color: #000000;">(</span><span style="color: #FF0000;">float</span> morphFactor<span style="color: #000000;">)</span></span>
<span style="vertical-align:top">    <span style="color: #000000;">{</span></span></pre>
</div>
</div>
</div>
<p><span style="white-space:pre"></span>Для начала мы должны 
закэшировать ссылку на RenderTarget (цель визуализации) и 
DepthStencilBuffer (стенсильный буфер глубины). В нашем случае 
RenderTarget имеет значение null (прим. переводчика: в оригинале 
написано «In our case, the RenderTarget is null» на самом деле цель 
визуализации установлена в BackBuffer, просто в документации XNA и 
некоторых примерах от Microsoft, после перенаправления цели визуализации
 в другой RenderTarget для последующего его возвращения «на место», а 
точнее в задний буфер, используется код 
graphics.GraphicsDevice.SetRenderTarget(0, null);), но при реализации в 
реальном проекте, в большинстве случаев целью визуализации может 
оказаться другой RenderTarget, использующийся для постобработки, 
letterboxing`a, или других целей. После этого переключаем цель 
визуализации и буфер глубины на наши объекты.</p>
<div class="rj_insertcode">
<div class="rj_insertcode_csharp">
<div class="csharp" style="background: #f8f8f8; width: 100%; border-collapse: collapse; border: #054b6e 1px solid;">
<pre style="margin:0; background:none; vertical-align:top; padding: 0px 4px; font-size: 12px;"><span style="vertical-align:top">    <span style="color: #008080; font-style: italic;">// сохряняем старый RenderTarget</span></span>
<span style="vertical-align:top">    RenderTarget2D oldRT <span style="color: #008000;">=</span> graphics.<span style="color: #0000FF;">GraphicsDevice</span>.<span style="color: #0000FF;">GetRenderTarget</span><span style="color: #000000;">(</span><span style="color: #FF0000;">0</span><span style="color: #000000;">)</span> <span style="color: #0600FF;">as</span> RenderTarget2D<span style="color: #008000;">;</span></span>
<span style="vertical-align:top"> </span>
<span style="vertical-align:top">    <span style="color: #008080; font-style: italic;">// сохряняем старый DepthStencilBuffer</span></span>
<span style="vertical-align:top">    DepthStencilBuffer oldDS <span style="color: #008000;">=</span> graphics.<span style="color: #0000FF;">GraphicsDevice</span>.<span style="color: #0000FF;">DepthStencilBuffer</span><span style="color: #008000;">;</span></span>
<span style="vertical-align:top"> </span>
<span style="vertical-align:top">    <span style="color: #008080; font-style: italic;">// устанавливаем наш DepthStencilBuffer</span></span>
<span style="vertical-align:top">    graphics.<span style="color: #0000FF;">GraphicsDevice</span>.<span style="color: #0000FF;">DepthStencilBuffer</span> <span style="color: #008000;">=</span> morphDepthBuffer<span style="color: #008000;">;</span></span>
<span style="vertical-align:top"> </span>
<span style="vertical-align:top">    <span style="color: #008080; font-style: italic;">// устанавливаем наш RenderTarget</span></span>
<span style="vertical-align:top">    graphics.<span style="color: #0000FF;">GraphicsDevice</span>.<span style="color: #0000FF;">SetRenderTarget</span><span style="color: #000000;">(</span><span style="color: #FF0000;">0</span>, morphRenderTarget<span style="color: #000000;">)</span><span style="color: #008000;">;</span></span></pre>
</div>
</div>
</div>
<p><span style="white-space:pre"></span>Затем мы очищаем цель 
визуализации, начинаем процесс рисования и передаем параметры в шейдер. 
Мы рисуем displacementTexture на всю поверхность цели визуализации. 
Процессом рисования управляет наш пиксельный шейдер.</p>
<div class="rj_insertcode">
<div class="rj_insertcode_csharp">
<div class="csharp" style="background: #f8f8f8; width: 100%; border-collapse: collapse; border: #054b6e 1px solid;">
<pre style="margin:0; background:none; vertical-align:top; padding: 0px 4px; font-size: 12px;"><span style="vertical-align:top">    <span style="color: #008080; font-style: italic;">// очистка цели визуалиазции (заливка белым цветом)</span></span>
<span style="vertical-align:top">    graphics.<span style="color: #0000FF;">GraphicsDevice</span>.<span style="color: #0000FF;">Clear</span><span style="color: #000000;">(</span>Color.<span style="color: #0000FF;">White</span><span style="color: #000000;">)</span><span style="color: #008000;">;</span></span>
<span style="vertical-align:top"> </span>
<span style="vertical-align:top">    <span style="color: #008080; font-style: italic;">// переводим SpriteBatch в режим начала рисования</span></span>
<span style="vertical-align:top">    morphSpriteBatch.<span style="color: #0000FF;">Begin</span><span style="color: #000000;">(</span>SpriteBlendMode.<span style="color: #0000FF;">None</span>, SpriteSortMode.<span style="color: #0000FF;">Immediate</span>, SaveStateMode.<span style="color: #0000FF;">None</span><span style="color: #000000;">)</span><span style="color: #008000;">;</span></span>
<span style="vertical-align:top"> </span>
<span style="vertical-align:top">    <span style="color: #008080; font-style: italic;">// передаем параметры в шейдер</span></span>
<span style="vertical-align:top">    morphEffect.<span style="color: #0000FF;">Parameters</span><span style="color: #000000;">[</span><span style="color: #666666;">"textureMap1"</span><span style="color: #000000;">]</span>.<span style="color: #0000FF;">SetValue</span><span style="color: #000000;">(</span>displacementTexture<span style="color: #000000;">)</span><span style="color: #008000;">;</span></span>
<span style="vertical-align:top">    morphEffect.<span style="color: #0000FF;">Parameters</span><span style="color: #000000;">[</span><span style="color: #666666;">"textureMap2"</span><span style="color: #000000;">]</span>.<span style="color: #0000FF;">SetValue</span><span style="color: #000000;">(</span>displacementTexture2<span style="color: #000000;">)</span><span style="color: #008000;">;</span></span>
<span style="vertical-align:top">    morphEffect.<span style="color: #0000FF;">Parameters</span><span style="color: #000000;">[</span><span style="color: #666666;">"morphFactor"</span><span style="color: #000000;">]</span>.<span style="color: #0000FF;">SetValue</span><span style="color: #000000;">(</span>morphFactor<span style="color: #000000;">)</span><span style="color: #008000;">;</span></span>
<span style="vertical-align:top"> </span>
<span style="vertical-align:top">    <span style="color: #008080; font-style: italic;">// устанавливаем технику шейдера</span></span>
<span style="vertical-align:top">    morphEffect.<span style="color: #0000FF;">CurrentTechnique</span> <span style="color: #008000;">=</span> morphEffect.<span style="color: #0000FF;">Techniques</span><span style="color: #000000;">[</span><span style="color: #666666;">"TextureMorph"</span><span style="color: #000000;">]</span><span style="color: #008000;">;</span></span>
<span style="vertical-align:top"> </span>
<span style="vertical-align:top">    <span style="color: #008080; font-style: italic;">// собветвенно сам процесс отрисоки</span></span>
<span style="vertical-align:top">    morphEffect.<span style="color: #0000FF;">Begin</span><span style="color: #000000;">(</span><span style="color: #000000;">)</span><span style="color: #008000;">;</span></span>
<span style="vertical-align:top">    morphEffect.<span style="color: #0000FF;">CurrentTechnique</span>.<span style="color: #0000FF;">Passes</span><span style="color: #000000;">[</span><span style="color: #FF0000;">0</span><span style="color: #000000;">]</span>.<span style="color: #0000FF;">Begin</span><span style="color: #000000;">(</span><span style="color: #000000;">)</span><span style="color: #008000;">;</span></span>
<span style="vertical-align:top">    morphSpriteBatch.<span style="color: #0000FF;">Draw</span><span style="color: #000000;">(</span>displacementTexture, <a href="http://www.google.com/search?q=new+msdn.microsoft.com"><span style="color: #008000;">new</span></a> Rectangle<span style="color: #000000;">(</span><span style="color: #FF0000;">0</span>, <span style="color: #FF0000;">0</span>, <span style="color: #FF0000;">256</span>, <span style="color: #FF0000;">256</span><span style="color: #000000;">)</span>, Color.<span style="color: #0000FF;">White</span><span style="color: #000000;">)</span><span style="color: #008000;">;</span></span>
<span style="vertical-align:top">    morphEffect.<span style="color: #0000FF;">CurrentTechnique</span>.<span style="color: #0000FF;">Passes</span><span style="color: #000000;">[</span><span style="color: #FF0000;">0</span><span style="color: #000000;">]</span>.<span style="color: #0000FF;">End</span><span style="color: #000000;">(</span><span style="color: #000000;">)</span><span style="color: #008000;">;</span></span>
<span style="vertical-align:top">    morphEffect.<span style="color: #0000FF;">End</span><span style="color: #000000;">(</span><span style="color: #000000;">)</span><span style="color: #008000;">;</span></span>
<span style="vertical-align:top"> </span>
<span style="vertical-align:top">    morphSpriteBatch.<span style="color: #0000FF;">End</span><span style="color: #000000;">(</span><span style="color: #000000;">)</span><span style="color: #008000;">;</span></span></pre>
</div>
</div>
</div>
<p><span style="white-space:pre"></span>Далее мы должны переключить 
графическое устройство в режим, в котором можем забрать текстуру из цели
 визуализации и вернуть старые RenderTarget и DepthStencilBuffer на 
место.</p>
<div class="rj_insertcode">
<div class="rj_insertcode_csharp">
<div class="csharp" style="background: #f8f8f8; width: 100%; border-collapse: collapse; border: #054b6e 1px solid;">
<pre style="margin:0; background:none; vertical-align:top; padding: 0px 4px; font-size: 12px;"><span style="vertical-align:top">    graphics.<span style="color: #0000FF;">GraphicsDevice</span>.<span style="color: #0000FF;">ResolveRenderTarget</span><span style="color: #000000;">(</span><span style="color: #FF0000;">0</span><span style="color: #000000;">)</span><span style="color: #008000;">;</span></span>
<span style="vertical-align:top">    graphics.<span style="color: #0000FF;">GraphicsDevice</span>.<span style="color: #0000FF;">SetRenderTarget</span><span style="color: #000000;">(</span><span style="color: #FF0000;">0</span>, oldRT<span style="color: #000000;">)</span><span style="color: #008000;">;</span></span>
<span style="vertical-align:top">    graphics.<span style="color: #0000FF;">GraphicsDevice</span>.<span style="color: #0000FF;">DepthStencilBuffer</span> <span style="color: #008000;">=</span> oldDS<span style="color: #008000;">;</span></span></pre>
</div>
</div>
</div>
<p><span style="white-space:pre"></span>В методе Draw мы вызываем наш 
метод Render2TextureMorph, затем восстанавливаем состояния рендеринга 
(Render States), которые модифицировались для spriteBatch. Передаем в 
шейдер (gridEffect), в параметр displacementMap новую модифицированную 
карту высот, которую в свою очередь получаем из цели визуализации 
morphRederTarget.GetTexture();.</p>
<div class="rj_insertcode">
<div class="rj_insertcode_csharp">
<div class="csharp" style="background: #f8f8f8; width: 100%; border-collapse: collapse; border: #054b6e 1px solid;">
<pre style="margin:0; background:none; vertical-align:top; padding: 0px 4px; font-size: 12px;"><span style="vertical-align:top">   <span style="color: #0600FF;">protected</span> <span style="color: #0600FF;">override</span> <span style="color: #0600FF;">void</span> Draw<span style="color: #000000;">(</span>GameTime gameTime<span style="color: #000000;">)</span></span>
<span style="vertical-align:top">    <span style="color: #000000;">{</span></span>
<span style="vertical-align:top">        Render2TextureMorph<span style="color: #000000;">(</span><span style="color: #000000;">(</span><span style="color: #FF0000;">float</span><span style="color: #000000;">)</span>Math.<span style="color: #0000FF;">Sin</span><span style="color: #000000;">(</span></span>
<span style="vertical-align:top">                            gameTime.<span style="color: #0000FF;">TotalGameTime</span>.<span style="color: #0000FF;">TotalSeconds</span><span style="color: #000000;">)</span></span>
<span style="vertical-align:top">                            <span style="color: #008000;">*</span> 0.5f <span style="color: #008000;">+</span> 0.5f<span style="color: #000000;">)</span><span style="color: #008000;">;</span></span>
<span style="vertical-align:top"> </span>
<span style="vertical-align:top">        graphics.<span style="color: #0000FF;">GraphicsDevice</span>.<span style="color: #0000FF;">Clear</span><span style="color: #000000;">(</span>Color.<span style="color: #0000FF;">CornflowerBlue</span><span style="color: #000000;">)</span><span style="color: #008000;">;</span></span>
<span style="vertical-align:top"> </span>
<span style="vertical-align:top">        graphics.<span style="color: #0000FF;">GraphicsDevice</span>.<span style="color: #0000FF;">RenderState</span>.<span style="color: #0000FF;">CullMode</span> <span style="color: #008000;">=</span> CullMode.<span style="color: #0000FF;">None</span><span style="color: #008000;">;</span></span>
<span style="vertical-align:top">        graphics.<span style="color: #0000FF;">GraphicsDevice</span>.<span style="color: #0000FF;">RenderState</span>.<span style="color: #0000FF;">DepthBufferEnable</span> <span style="color: #008000;">=</span> true<span style="color: #008000;">;</span></span>
<span style="vertical-align:top"> </span>
<span style="vertical-align:top">        <span style="color: #000000;">[</span>...<span style="color: #000000;">]</span></span>
<span style="vertical-align:top"> </span>
<span style="vertical-align:top">        gridEffect.<span style="color: #0000FF;">Parameters</span><span style="color: #000000;">[</span><span style="color: #666666;">"displacementMap"</span><span style="color: #000000;">]</span>.<span style="color: #0000FF;">SetValue</span><span style="color: #000000;">(</span></span>
<span style="vertical-align:top">                                        morphRenderTarget.<span style="color: #0000FF;">GetTexture</span><span style="color: #000000;">(</span><span style="color: #000000;">)</span><span style="color: #000000;">)</span><span style="color: #008000;">;</span></span>
<span style="vertical-align:top"> </span>
<span style="vertical-align:top">        <span style="color: #000000;">[</span>...<span style="color: #000000;">]</span></span>
<span style="vertical-align:top">    <span style="color: #000000;">}</span></span></pre>
</div>
</div>
</div>
<p><span style="white-space:pre"></span>Если запустить код, то мы должны
 увидеть тот же самый результат морфинга ландшафта, что и прежде, но на 
этот раз с более высокой производительностью. Краткие итоги: реализация 
VTF довольно проста, не требует много усилий, эффект динамический, но не
 требует изменений вершинного буфера на каждом кадре. Сам процесс 
морфинга довольно быстрый, при использовании пиксельного шейдера. В 
теории мы можем возложить на этап отрисовки в текстуру (Render To 
Texture) более комплексные задачи и производительность останется на 
довольно приличном уровне. Пара идей по применению динамического 
морфинга ландшафта: воронки от взрывов, волны по ландшафту во время 
землетрясений или движение дюн в пустыне и прочее в том же духе. Все это
 реализуемо путем только манипуляций с картой высот перед тем, как 
скормить ее шейдеру отрисовки ландшафта.</p>
<p><br><span style="font-style: italic;">Бонус: Освещение ландшафта.</span></p>
<p>Как возможно вы могли заметить, до сих пор мы рисовали ландшафт без 
освещения, сейчас мы будем это исправлять. Так как формирование формы 
поверхности ландшафта происходит в вершинном шейдере, то для расчета 
освещения данные о нормалях должны существовать до этапа формирования 
поверхности. Если бы у нас был статический ландшафт, то мы бы просто 
сформировали карту нормалей на этапе формирования карты высот и 
передавали бы их в шейдеры. Но при использовании динамически изменяемого
 ландшафта рельеф поверхности меняется практически непредсказуемым 
образом. Итак, для получения нормалей сетки ландшафта мы будет 
генерировать карту нормалей на основе интерполированной карты высот с 
использованием фильтра Собеля (Sobel Filter). Данная реализация была 
позаимствована в одной из демосцен ATI.<br><span style="white-space:pre"></span>Откройте код шейдера TextureMorph.fx и добавте следующий код:</p>
<div class="rj_insertcode">
<div class="rj_insertcode_hlsl">
<div class="hlsl" style="background: #f8f8f8; width: 100%; border-collapse: collapse; border: #054b6e 1px solid;">
<pre style="margin:0; background:none; vertical-align:top; padding: 0px 4px; font-size: 12px;"><span style="vertical-align:top">    <span style="color: #666666; font-style: italic;">//Значение Normal Strength подбирается методом «научного тыка»</span></span>
<span style="vertical-align:top">    <span style="color: #666666; font-style: italic;">// пока не добьетесь приемлемого результата.</span></span>
<span style="vertical-align:top">    <span style="color: #666666; font-style: italic;">//Чем выше значение, тем более яркое освещение будет получено</span></span>
<span style="vertical-align:top"> </span>
<span style="vertical-align:top">    <span style="color: #000066; font-weight: bold;">float</span> normalStrength <span style="color: #000066;">=</span> 8<span style="color: #000066;">.</span>0f<span style="color: #000066;">;</span></span>
<span style="vertical-align:top"> </span>
<span style="vertical-align:top">    <span style="color: #000066; font-weight: bold;">float4</span> ComputeNormalsPS<span style="color: #000066;">(</span><span style="color: #333399; font-weight: bold;">in</span> <span style="color: #000066; font-weight: bold;">float2</span> uv <span style="color: #000066;">:</span> <span style="color: #551111;">TEXCOORD0</span><span style="color: #000066;">)</span> <span style="color: #000066;">:</span> <span style="color: #551111;">COLOR</span></span>
<span style="vertical-align:top">    <span style="color: #000066;">{</span></span>
<span style="vertical-align:top">        <span style="color: #666666; font-style: italic;">// левый верхний top left)</span></span>
<span style="vertical-align:top">        <span style="color: #000066; font-weight: bold;">float</span> tl <span style="color: #000066;">=</span> <span style="color: #993333; font-weight: bold;">abs</span><span style="color: #000066;">(</span><span style="color: #993333; font-weight: bold;">tex2D</span> <span style="color: #000066;">(</span>textureSampler1<span style="color: #000066;">,</span></span>
<span style="vertical-align:top">                              uv <span style="color: #000066;">+</span> texelSize <span style="color: #000066;">*</span> <span style="color: #000066; font-weight: bold;">float2</span><span style="color: #000066;">(</span><span style="color: #000066;">-</span><span style="color: #0000ff;">1</span><span style="color: #000066;">,</span> <span style="color: #000066;">-</span><span style="color: #0000ff;">1</span><span style="color: #000066;">)</span><span style="color: #000066;">)</span><span style="color: #000066;">.</span><span style="color: #006600;">x</span><span style="color: #000066;">)</span><span style="color: #000066;">;</span></span>
<span style="vertical-align:top">        <span style="color: #666666; font-style: italic;">// левый (left)</span></span>
<span style="vertical-align:top">        <span style="color: #000066; font-weight: bold;">float</span>  l <span style="color: #000066;">=</span> <span style="color: #993333; font-weight: bold;">abs</span><span style="color: #000066;">(</span><span style="color: #993333; font-weight: bold;">tex2D</span> <span style="color: #000066;">(</span>textureSampler1<span style="color: #000066;">,</span></span>
<span style="vertical-align:top">                              uv <span style="color: #000066;">+</span> texelSize <span style="color: #000066;">*</span> <span style="color: #000066; font-weight: bold;">float2</span><span style="color: #000066;">(</span><span style="color: #000066;">-</span><span style="color: #0000ff;">1</span><span style="color: #000066;">,</span>  <span style="color: #0000ff;">0</span><span style="color: #000066;">)</span><span style="color: #000066;">)</span><span style="color: #000066;">.</span><span style="color: #006600;">x</span><span style="color: #000066;">)</span><span style="color: #000066;">;</span></span>
<span style="vertical-align:top">        <span style="color: #666666; font-style: italic;">// левый нижний (bottom left)</span></span>
<span style="vertical-align:top">        <span style="color: #000066; font-weight: bold;">float</span> bl <span style="color: #000066;">=</span> <span style="color: #993333; font-weight: bold;">abs</span><span style="color: #000066;">(</span><span style="color: #993333; font-weight: bold;">tex2D</span> <span style="color: #000066;">(</span>textureSampler1<span style="color: #000066;">,</span></span>
<span style="vertical-align:top">                              uv <span style="color: #000066;">+</span> texelSize <span style="color: #000066;">*</span> <span style="color: #000066; font-weight: bold;">float2</span><span style="color: #000066;">(</span><span style="color: #000066;">-</span><span style="color: #0000ff;">1</span><span style="color: #000066;">,</span>  <span style="color: #0000ff;">1</span><span style="color: #000066;">)</span><span style="color: #000066;">)</span><span style="color: #000066;">.</span><span style="color: #006600;">x</span><span style="color: #000066;">)</span><span style="color: #000066;">;</span></span>
<span style="vertical-align:top">        <span style="color: #666666; font-style: italic;">// верхний (top)</span></span>
<span style="vertical-align:top">        <span style="color: #000066; font-weight: bold;">float</span>  t <span style="color: #000066;">=</span> <span style="color: #993333; font-weight: bold;">abs</span><span style="color: #000066;">(</span><span style="color: #993333; font-weight: bold;">tex2D</span> <span style="color: #000066;">(</span>textureSampler1<span style="color: #000066;">,</span></span>
<span style="vertical-align:top">                              uv <span style="color: #000066;">+</span> texelSize <span style="color: #000066;">*</span> <span style="color: #000066; font-weight: bold;">float2</span><span style="color: #000066;">(</span> <span style="color: #0000ff;">0</span><span style="color: #000066;">,</span> <span style="color: #000066;">-</span><span style="color: #0000ff;">1</span><span style="color: #000066;">)</span><span style="color: #000066;">)</span><span style="color: #000066;">.</span><span style="color: #006600;">x</span><span style="color: #000066;">)</span><span style="color: #000066;">;</span></span>
<span style="vertical-align:top">        <span style="color: #666666; font-style: italic;">// нижний (bottom)</span></span>
<span style="vertical-align:top">        <span style="color: #000066; font-weight: bold;">float</span>  b <span style="color: #000066;">=</span> <span style="color: #993333; font-weight: bold;">abs</span><span style="color: #000066;">(</span><span style="color: #993333; font-weight: bold;">tex2D</span> <span style="color: #000066;">(</span>textureSampler1<span style="color: #000066;">,</span></span>
<span style="vertical-align:top">                              uv <span style="color: #000066;">+</span> texelSize <span style="color: #000066;">*</span> <span style="color: #000066; font-weight: bold;">float2</span><span style="color: #000066;">(</span> <span style="color: #0000ff;">0</span><span style="color: #000066;">,</span>  <span style="color: #0000ff;">1</span><span style="color: #000066;">)</span><span style="color: #000066;">)</span><span style="color: #000066;">.</span><span style="color: #006600;">x</span><span style="color: #000066;">)</span><span style="color: #000066;">;</span></span>
<span style="vertical-align:top">        <span style="color: #666666; font-style: italic;">// верхний правый (top right)</span></span>
<span style="vertical-align:top">        <span style="color: #000066; font-weight: bold;">float</span> tr <span style="color: #000066;">=</span> <span style="color: #993333; font-weight: bold;">abs</span><span style="color: #000066;">(</span><span style="color: #993333; font-weight: bold;">tex2D</span> <span style="color: #000066;">(</span>textureSampler1<span style="color: #000066;">,</span></span>
<span style="vertical-align:top">                              uv <span style="color: #000066;">+</span> texelSize <span style="color: #000066;">*</span> <span style="color: #000066; font-weight: bold;">float2</span><span style="color: #000066;">(</span> <span style="color: #0000ff;">1</span><span style="color: #000066;">,</span> <span style="color: #000066;">-</span><span style="color: #0000ff;">1</span><span style="color: #000066;">)</span><span style="color: #000066;">)</span><span style="color: #000066;">.</span><span style="color: #006600;">x</span><span style="color: #000066;">)</span><span style="color: #000066;">;</span></span>
<span style="vertical-align:top">        <span style="color: #666666; font-style: italic;">// правый (right)</span></span>
<span style="vertical-align:top">        <span style="color: #000066; font-weight: bold;">float</span>  r <span style="color: #000066;">=</span> <span style="color: #993333; font-weight: bold;">abs</span><span style="color: #000066;">(</span><span style="color: #993333; font-weight: bold;">tex2D</span> <span style="color: #000066;">(</span>textureSampler1<span style="color: #000066;">,</span></span>
<span style="vertical-align:top">                              uv <span style="color: #000066;">+</span> texelSize <span style="color: #000066;">*</span> <span style="color: #000066; font-weight: bold;">float2</span><span style="color: #000066;">(</span> <span style="color: #0000ff;">1</span><span style="color: #000066;">,</span>  <span style="color: #0000ff;">0</span><span style="color: #000066;">)</span><span style="color: #000066;">)</span><span style="color: #000066;">.</span><span style="color: #006600;">x</span><span style="color: #000066;">)</span><span style="color: #000066;">;</span></span>
<span style="vertical-align:top">        <span style="color: #666666; font-style: italic;">// правый нижний (bottom right)</span></span>
<span style="vertical-align:top">        <span style="color: #000066; font-weight: bold;">float</span> br <span style="color: #000066;">=</span> <span style="color: #993333; font-weight: bold;">abs</span><span style="color: #000066;">(</span><span style="color: #993333; font-weight: bold;">tex2D</span> <span style="color: #000066;">(</span>textureSampler1<span style="color: #000066;">,</span></span>
<span style="vertical-align:top">                              uv <span style="color: #000066;">+</span> texelSize <span style="color: #000066;">*</span> <span style="color: #000066; font-weight: bold;">float2</span><span style="color: #000066;">(</span> <span style="color: #0000ff;">1</span><span style="color: #000066;">,</span>  <span style="color: #0000ff;">1</span><span style="color: #000066;">)</span><span style="color: #000066;">)</span><span style="color: #000066;">.</span><span style="color: #006600;">x</span><span style="color: #000066;">)</span><span style="color: #000066;">;</span></span>
<span style="vertical-align:top"> </span>
<span style="vertical-align:top">        <span style="color: #666666; font-style: italic;">// Расчет вектора X (Compute dx using Sobel):</span></span>
<span style="vertical-align:top">        <span style="color: #666666; font-style: italic;">//</span></span>
<span style="vertical-align:top">        <span style="color: #666666; font-style: italic;">//           -1 0 1</span></span>
<span style="vertical-align:top">        <span style="color: #666666; font-style: italic;">//           -2 0 2</span></span>
<span style="vertical-align:top">        <span style="color: #666666; font-style: italic;">//           -1 0 1</span></span>
<span style="vertical-align:top">        <span style="color: #000066; font-weight: bold;">float</span> dX <span style="color: #000066;">=</span> <span style="color: #000066;">-</span>tl <span style="color: #000066;">-</span> 2<span style="color: #000066;">.</span>0f<span style="color: #000066;">*</span>l <span style="color: #000066;">-</span> bl <span style="color: #000066;">+</span> tr <span style="color: #000066;">+</span> 2<span style="color: #000066;">.</span>0f<span style="color: #000066;">*</span>r <span style="color: #000066;">+</span> br<span style="color: #000066;">;</span></span>
<span style="vertical-align:top"> </span>
<span style="vertical-align:top">        <span style="color: #666666; font-style: italic;">// Расчет вектора Y (Compute dy using Sobel):</span></span>
<span style="vertical-align:top">        <span style="color: #666666; font-style: italic;">//</span></span>
<span style="vertical-align:top">        <span style="color: #666666; font-style: italic;">//           -1 -2 -1</span></span>
<span style="vertical-align:top">        <span style="color: #666666; font-style: italic;">//            0  0  0</span></span>
<span style="vertical-align:top">        <span style="color: #666666; font-style: italic;">//            1  2  1</span></span>
<span style="vertical-align:top">        <span style="color: #000066; font-weight: bold;">float</span> dY <span style="color: #000066;">=</span> <span style="color: #000066;">-</span>tl <span style="color: #000066;">-</span> 2<span style="color: #000066;">.</span>0f<span style="color: #000066;">*</span>t <span style="color: #000066;">-</span> tr <span style="color: #000066;">+</span> bl <span style="color: #000066;">+</span> 2<span style="color: #000066;">.</span>0f<span style="color: #000066;">*</span>b <span style="color: #000066;">+</span> br<span style="color: #000066;">;</span></span>
<span style="vertical-align:top"> </span>
<span style="vertical-align:top">        <span style="color: #666666; font-style: italic;">// Расчет нормализованного вектора нормали</span></span>
<span style="vertical-align:top">        <span style="color: #000066; font-weight: bold;">float4</span> N <span style="color: #000066;">=</span> <span style="color: #000066; font-weight: bold;">float4</span><span style="color: #000066;">(</span><span style="color: #993333; font-weight: bold;">normalize</span><span style="color: #000066;">(</span><span style="color: #000066; font-weight: bold;">float3</span><span style="color: #000066;">(</span>dX<span style="color: #000066;">,</span></span>
<span style="vertical-align:top">                                           1<span style="color: #000066;">.</span>0f <span style="color: #000066;">/</span> normalStrength<span style="color: #000066;">,</span></span>
<span style="vertical-align:top">                                           dY<span style="color: #000066;">)</span><span style="color: #000066;">)</span><span style="color: #000066;">,</span></span>
<span style="vertical-align:top">                                           1<span style="color: #000066;">.</span>0f<span style="color: #000066;">)</span><span style="color: #000066;">;</span></span>
<span style="vertical-align:top"> </span>
<span style="vertical-align:top">        <span style="color: #666666; font-style: italic;">//преобразование из диапазона (-1.0 , 1.0) в (0.0 , 1.0)</span></span>
<span style="vertical-align:top">        <span style="color: #666666; font-style: italic;">//для записи значения в текстуру</span></span>
<span style="vertical-align:top">        <span style="color: #000000; font-weight: bold;">return</span> N <span style="color: #000066;">*</span> 0<span style="color: #000066;">.</span>5f <span style="color: #000066;">+</span> 0<span style="color: #000066;">.</span>5f<span style="color: #000066;">;</span></span>
<span style="vertical-align:top">    <span style="color: #000066;">}</span></span>
<span style="vertical-align:top"> </span>
<span style="vertical-align:top">    <span style="color: #333399; font-weight: bold;">technique</span> ComputeNormals</span>
<span style="vertical-align:top">    <span style="color: #000066;">{</span></span>
<span style="vertical-align:top">        <span style="color: #333399; font-weight: bold;">pass</span> P0</span>
<span style="vertical-align:top">        <span style="color: #000066;">{</span></span>
<span style="vertical-align:top">          pixelShader <span style="color: #000066;">=</span> compile ps_3_0 ComputeNormalsPS<span style="color: #000066;">(</span><span style="color: #000066;">)</span><span style="color: #000066;">;</span></span>
<span style="vertical-align:top">        <span style="color: #000066;">}</span></span>
<span style="vertical-align:top">    <span style="color: #000066;">}</span></span></pre>
</div>
</div>
</div>
<p><span style="white-space:pre"></span>Теперь мы должны добавить код 
реализующий освещение непосредственно в шейдер рисования ландшафта. 
Открываем код шейдера VTFDisplacement.fx и добавляем в него вектор 
направления света, текстуру и самплер для нее. Так как обращение к 
текстуре будет осуществляться из пиксельного шейдера, то мы можем 
безболезненно использовать билинейную фильтрацию.</p>
<div class="rj_insertcode">
<div class="rj_insertcode_hlsl">
<div class="hlsl" style="background: #f8f8f8; width: 100%; border-collapse: collapse; border: #054b6e 1px solid;">
<pre style="margin:0; background:none; vertical-align:top; padding: 0px 4px; font-size: 12px;"><span style="vertical-align:top">    <span style="color: #000066; font-weight: bold;">float4</span> lightDirection <span style="color: #000066;">=</span> <span style="color: #000066;">{</span><span style="color: #0000ff;">1</span><span style="color: #000066;">,</span> <span style="color: #000066;">-</span><span style="color: #0000ff;">0.7</span><span style="color: #000066;">,</span> <span style="color: #0000ff;">1</span><span style="color: #000066;">,</span> <span style="color: #0000ff;">0</span><span style="color: #000066;">}</span><span style="color: #000066;">;</span></span>
<span style="vertical-align:top"> </span>
<span style="vertical-align:top">    texture normalMap<span style="color: #000066;">;</span></span>
<span style="vertical-align:top">    sampler normalSampler <span style="color: #000066;">=</span> sampler_state</span>
<span style="vertical-align:top">    <span style="color: #000066;">{</span></span>
<span style="vertical-align:top">        Texture   <span style="color: #000066;">=</span> <span style="color: #000066;">&lt;</span>normalMap<span style="color: #000066;">&gt;;</span></span>
<span style="vertical-align:top"> </span>
<span style="vertical-align:top">        MipFilter <span style="color: #000066;">=</span> Linear<span style="color: #000066;">;</span></span>
<span style="vertical-align:top">        MinFilter <span style="color: #000066;">=</span> Linear<span style="color: #000066;">;</span></span>
<span style="vertical-align:top">        MagFilter <span style="color: #000066;">=</span> Linear<span style="color: #000066;">;</span></span>
<span style="vertical-align:top"> </span>
<span style="vertical-align:top">        AddressU  <span style="color: #000066;">=</span> <span style="color: #993333; font-weight: bold;">clamp</span><span style="color: #000066;">;</span></span>
<span style="vertical-align:top">        AddressV  <span style="color: #000066;">=</span> <span style="color: #993333; font-weight: bold;">clamp</span><span style="color: #000066;">;</span></span>
<span style="vertical-align:top">    <span style="color: #000066;">}</span><span style="color: #000066;">;</span></span></pre>
</div>
</div>
</div>
<p><span style="white-space:pre"></span>Мы должны модифицировать 
пиксельный шейдер, для реализации расчета освещения. Для расчета 
освещения мы будем использовать простую формулу L * N (где L - вектор 
освещения, N – вектор нормали) и немного подсвечивать сцену для эмуляции
 окружающего освещения на 0.2f.</p>
<div class="rj_insertcode">
<div class="rj_insertcode_hlsl">
<div class="hlsl" style="background: #f8f8f8; width: 100%; border-collapse: collapse; border: #054b6e 1px solid;">
<pre style="margin:0; background:none; vertical-align:top; padding: 0px 4px; font-size: 12px;"><span style="vertical-align:top">    <span style="color: #000066; font-weight: bold;">float4</span> PixelShader<span style="color: #000066;">(</span><span style="color: #333399; font-weight: bold;">in</span> <span style="color: #000066; font-weight: bold;">float4</span> uv <span style="color: #000066;">:</span> <span style="color: #551111;">TEXCOORD0</span><span style="color: #000066;">,</span></span>
<span style="vertical-align:top">                       <span style="color: #333399; font-weight: bold;">in</span> <span style="color: #000066; font-weight: bold;">float4</span> weights <span style="color: #000066;">:</span> <span style="color: #551111;">TEXCOORD2</span><span style="color: #000066;">)</span> <span style="color: #000066;">:</span> <span style="color: #551111;">COLOR</span></span>
<span style="vertical-align:top">    <span style="color: #000066;">{</span></span>
<span style="vertical-align:top">        <span style="color: #000066;">[</span><span style="color: #000066;">...</span><span style="color: #000066;">]</span></span>
<span style="vertical-align:top"> </span>
<span style="vertical-align:top">        <span style="color: #000066; font-weight: bold;">float4</span> finalColor <span style="color: #000066;">=</span>  sand  <span style="color: #000066;">*</span> weights<span style="color: #000066;">.</span><span style="color: #006600;">x</span> <span style="color: #000066;">+</span></span>
<span style="vertical-align:top">                             grass <span style="color: #000066;">*</span> weights<span style="color: #000066;">.</span><span style="color: #006600;">y</span> <span style="color: #000066;">+</span></span>
<span style="vertical-align:top">                             rock  <span style="color: #000066;">*</span> weights<span style="color: #000066;">.</span><span style="color: #006600;">z</span> <span style="color: #000066;">+</span></span>
<span style="vertical-align:top">                             snow  <span style="color: #000066;">*</span> weights<span style="color: #000066;">.</span><span style="color: #006600;">w</span><span style="color: #000066;">;</span> </span>
<span style="vertical-align:top"> </span>
<span style="vertical-align:top">        <span style="color: #666666; font-style: italic;">// читаем данные нормали из карты нормалей и</span></span>
<span style="vertical-align:top">        <span style="color: #666666; font-style: italic;">// преобразовываем значение обратно в диапазон (-1, 1)</span></span>
<span style="vertical-align:top">        <span style="color: #000066; font-weight: bold;">float4</span> normal <span style="color: #000066;">=</span> <span style="color: #993333; font-weight: bold;">normalize</span><span style="color: #000066;">(</span> 2<span style="color: #000066;">.</span>0f <span style="color: #000066;">*</span> <span style="color: #000066;">(</span><span style="color: #993333; font-weight: bold;">tex2D</span><span style="color: #000066;">(</span>normalSampler<span style="color: #000066;">,</span> uv<span style="color: #000066;">)</span> <span style="color: #000066;">-</span> 0<span style="color: #000066;">.</span>5f<span style="color: #000066;">)</span><span style="color: #000066;">)</span><span style="color: #000066;">;</span></span>
<span style="vertical-align:top"> </span>
<span style="vertical-align:top">        <span style="color: #000066; font-weight: bold;">float4</span> light <span style="color: #000066;">=</span> <span style="color: #993333; font-weight: bold;">normalize</span><span style="color: #000066;">(</span><span style="color: #000066;">-</span>lightDirection<span style="color: #000066;">)</span><span style="color: #000066;">;</span></span>
<span style="vertical-align:top"> </span>
<span style="vertical-align:top">        <span style="color: #666666; font-style: italic;">// dot product между векторами light и normal</span></span>
<span style="vertical-align:top">        <span style="color: #000066; font-weight: bold;">float</span> ldn <span style="color: #000066;">=</span> <span style="color: #993333; font-weight: bold;">dot</span><span style="color: #000066;">(</span>light<span style="color: #000066;">,</span> normal<span style="color: #000066;">)</span><span style="color: #000066;">;</span></span>
<span style="vertical-align:top"> </span>
<span style="vertical-align:top">        ldn <span style="color: #000066;">=</span> <span style="color: #993333; font-weight: bold;">max</span><span style="color: #000066;">(</span><span style="color: #0000ff;">0</span><span style="color: #000066;">,</span> ldn<span style="color: #000066;">)</span><span style="color: #000066;">;</span></span>
<span style="vertical-align:top"> </span>
<span style="vertical-align:top">        <span style="color: #666666; font-style: italic;">// добавляем коэффициент окружающего освещения,</span></span>
<span style="vertical-align:top">        <span style="color: #666666; font-style: italic;">// и перемножаем с исходным цветом</span></span>
<span style="vertical-align:top">        <span style="color: #000000; font-weight: bold;">return</span> finalColor <span style="color: #000066;">*</span> <span style="color: #000066;">(</span>0<span style="color: #000066;">.</span>2f <span style="color: #000066;">+</span> ldn<span style="color: #000066;">)</span><span style="color: #000066;">;</span></span>
<span style="vertical-align:top">    <span style="color: #000066;">}</span></span></pre>
</div>
</div>
</div>
<p><span style="white-space:pre"></span>И последние изменения, которые 
надо произвести в классе Game1.cs. Нам нужна еще одна цель визуализации 
(RenderTarget2D) и код ее инициализации:</p>
<div class="rj_insertcode">
<div class="rj_insertcode_csharp">
<div class="csharp" style="background: #f8f8f8; width: 100%; border-collapse: collapse; border: #054b6e 1px solid;">
<pre style="margin:0; background:none; vertical-align:top; padding: 0px 4px; font-size: 12px;"><span style="vertical-align:top">    RenderTarget2D normalRenderTarget<span style="color: #008000;">;</span></span>
<span style="vertical-align:top"> </span>
<span style="vertical-align:top">    <span style="color: #0600FF;">protected</span> <span style="color: #0600FF;">override</span> <span style="color: #0600FF;">void</span> LoadGraphicsContent<span style="color: #000000;">(</span><span style="color: #FF0000;">bool</span> loadAllContent<span style="color: #000000;">)</span></span>
<span style="vertical-align:top">    <span style="color: #000000;">{</span></span>
<span style="vertical-align:top">        <span style="color: #000000;">[</span>...<span style="color: #000000;">]</span></span>
<span style="vertical-align:top"> </span>
<span style="vertical-align:top">        normalRenderTarget <span style="color: #008000;">=</span> <a href="http://www.google.com/search?q=new+msdn.microsoft.com"><span style="color: #008000;">new</span></a> RenderTarget2D<span style="color: #000000;">(</span>graphics.<span style="color: #0000FF;">GraphicsDevice</span>,</span>
<span style="vertical-align:top">                                                <span style="color: #FF0000;">256</span>, <span style="color: #FF0000;">256</span>, <span style="color: #FF0000;">1</span>, SurfaceFormat.<span style="color: #0000FF;">Color</span><span style="color: #000000;">)</span><span style="color: #008000;">;</span></span>
<span style="vertical-align:top"> </span>
<span style="vertical-align:top">        <span style="color: #000000;">[</span>...<span style="color: #000000;">]</span></span>
<span style="vertical-align:top">    <span style="color: #000000;">}</span></span></pre>
</div>
</div>
</div>
<p><span style="white-space:pre"></span>Метод расчета карты нормалей 
очень сильно похож на метод расчета карты высот (Render2TextureMorph). 
Его надо вызвать сразу же за методом расчета карты высот, а саму карту 
высот передать в виде параметра в шейдер, затем рассчитанную карту 
нормалей точно так же передаем в параметр шейдера отрисовки ландшафта.</p>
<div class="rj_insertcode">
<div class="rj_insertcode_csharp">
<div class="csharp" style="background: #f8f8f8; width: 100%; border-collapse: collapse; border: #054b6e 1px solid;">
<pre style="margin:0; background:none; vertical-align:top; padding: 0px 4px; font-size: 12px;"><span style="vertical-align:top">    <span style="color: #0600FF;">protected</span> <span style="color: #0600FF;">void</span> Render2TextureNormalCompute<span style="color: #000000;">(</span><span style="color: #000000;">)</span></span>
<span style="vertical-align:top">    <span style="color: #000000;">{</span></span>
<span style="vertical-align:top">        RenderTarget2D oldRT <span style="color: #008000;">=</span></span>
<span style="vertical-align:top">                graphics.<span style="color: #0000FF;">GraphicsDevice</span>.<span style="color: #0000FF;">GetRenderTarget</span><span style="color: #000000;">(</span><span style="color: #FF0000;">0</span><span style="color: #000000;">)</span> <span style="color: #0600FF;">as</span> RenderTarget2D<span style="color: #008000;">;</span></span>
<span style="vertical-align:top"> </span>
<span style="vertical-align:top">        DepthStencilBuffer oldDS <span style="color: #008000;">=</span> graphics.<span style="color: #0000FF;">GraphicsDevice</span>.<span style="color: #0000FF;">DepthStencilBuffer</span><span style="color: #008000;">;</span></span>
<span style="vertical-align:top">        graphics.<span style="color: #0000FF;">GraphicsDevice</span>.<span style="color: #0000FF;">DepthStencilBuffer</span> <span style="color: #008000;">=</span> morphDepthBuffer<span style="color: #008000;">;</span></span>
<span style="vertical-align:top">        graphics.<span style="color: #0000FF;">GraphicsDevice</span>.<span style="color: #0000FF;">SetRenderTarget</span><span style="color: #000000;">(</span><span style="color: #FF0000;">0</span>, normalRenderTarget<span style="color: #000000;">)</span><span style="color: #008000;">;</span></span>
<span style="vertical-align:top">        graphics.<span style="color: #0000FF;">GraphicsDevice</span>.<span style="color: #0000FF;">Clear</span><span style="color: #000000;">(</span>Color.<span style="color: #0000FF;">White</span><span style="color: #000000;">)</span><span style="color: #008000;">;</span></span>
<span style="vertical-align:top">        morphSpriteBatch.<span style="color: #0000FF;">Begin</span><span style="color: #000000;">(</span>SpriteBlendMode.<span style="color: #0000FF;">None</span>,</span>
<span style="vertical-align:top">                               SpriteSortMode.<span style="color: #0000FF;">Immediate</span>,</span>
<span style="vertical-align:top">                               SaveStateMode.<span style="color: #0000FF;">None</span><span style="color: #000000;">)</span><span style="color: #008000;">;</span></span>
<span style="vertical-align:top"> </span>
<span style="vertical-align:top">        <span style="color: #008080; font-style: italic;">// передаем новую карту высот для расчета карты нормалей</span></span>
<span style="vertical-align:top">        morphEffect.<span style="color: #0000FF;">Parameters</span><span style="color: #000000;">[</span><span style="color: #666666;">"textureMap1"</span><span style="color: #000000;">]</span>.<span style="color: #0000FF;">SetValue</span><span style="color: #000000;">(</span></span>
<span style="vertical-align:top">                                                morphRenderTarget.<span style="color: #0000FF;">GetTexture</span><span style="color: #000000;">(</span><span style="color: #000000;">)</span><span style="color: #000000;">)</span><span style="color: #008000;">;</span></span>
<span style="vertical-align:top"> </span>
<span style="vertical-align:top">        <span style="color: #008080; font-style: italic;">// переключаем технику для расчета нормалей</span></span>
<span style="vertical-align:top">        morphEffect.<span style="color: #0000FF;">CurrentTechnique</span> <span style="color: #008000;">=</span> morphEffect.<span style="color: #0000FF;">Techniques</span><span style="color: #000000;">[</span><span style="color: #666666;">"ComputeNormals"</span><span style="color: #000000;">]</span><span style="color: #008000;">;</span></span>
<span style="vertical-align:top"> </span>
<span style="vertical-align:top">        <span style="color: #008080; font-style: italic;">//отрисовка</span></span>
<span style="vertical-align:top">        morphEffect.<span style="color: #0000FF;">Begin</span><span style="color: #000000;">(</span><span style="color: #000000;">)</span><span style="color: #008000;">;</span></span>
<span style="vertical-align:top">        morphEffect.<span style="color: #0000FF;">CurrentTechnique</span>.<span style="color: #0000FF;">Passes</span><span style="color: #000000;">[</span><span style="color: #FF0000;">0</span><span style="color: #000000;">]</span>.<span style="color: #0000FF;">Begin</span><span style="color: #000000;">(</span><span style="color: #000000;">)</span><span style="color: #008000;">;</span></span>
<span style="vertical-align:top">        morphSpriteBatch.<span style="color: #0000FF;">Draw</span><span style="color: #000000;">(</span>morphRenderTarget.<span style="color: #0000FF;">GetTexture</span><span style="color: #000000;">(</span><span style="color: #000000;">)</span>,</span>
<span style="vertical-align:top">                              <a href="http://www.google.com/search?q=new+msdn.microsoft.com"><span style="color: #008000;">new</span></a> Rectangle<span style="color: #000000;">(</span><span style="color: #FF0000;">0</span>, <span style="color: #FF0000;">0</span>, <span style="color: #FF0000;">256</span>, <span style="color: #FF0000;">256</span><span style="color: #000000;">)</span>,</span>
<span style="vertical-align:top">                              Color.<span style="color: #0000FF;">White</span><span style="color: #000000;">)</span><span style="color: #008000;">;</span></span>
<span style="vertical-align:top"> </span>
<span style="vertical-align:top">        morphEffect.<span style="color: #0000FF;">CurrentTechnique</span>.<span style="color: #0000FF;">Passes</span><span style="color: #000000;">[</span><span style="color: #FF0000;">0</span><span style="color: #000000;">]</span>.<span style="color: #0000FF;">End</span><span style="color: #000000;">(</span><span style="color: #000000;">)</span><span style="color: #008000;">;</span></span>
<span style="vertical-align:top">        morphEffect.<span style="color: #0000FF;">End</span><span style="color: #000000;">(</span><span style="color: #000000;">)</span><span style="color: #008000;">;</span></span>
<span style="vertical-align:top">        morphSpriteBatch.<span style="color: #0000FF;">End</span><span style="color: #000000;">(</span><span style="color: #000000;">)</span><span style="color: #008000;">;</span></span>
<span style="vertical-align:top"> </span>
<span style="vertical-align:top">        graphics.<span style="color: #0000FF;">GraphicsDevice</span>.<span style="color: #0000FF;">ResolveRenderTarget</span><span style="color: #000000;">(</span><span style="color: #FF0000;">0</span><span style="color: #000000;">)</span><span style="color: #008000;">;</span></span>
<span style="vertical-align:top"> </span>
<span style="vertical-align:top">        graphics.<span style="color: #0000FF;">GraphicsDevice</span>.<span style="color: #0000FF;">SetRenderTarget</span><span style="color: #000000;">(</span><span style="color: #FF0000;">0</span>, oldRT<span style="color: #000000;">)</span><span style="color: #008000;">;</span></span>
<span style="vertical-align:top">        graphics.<span style="color: #0000FF;">GraphicsDevice</span>.<span style="color: #0000FF;">DepthStencilBuffer</span> <span style="color: #008000;">=</span> oldDS<span style="color: #008000;">;</span></span>
<span style="vertical-align:top">    <span style="color: #000000;">}</span></span>
<span style="vertical-align:top">    <span style="color: #000000;">[</span>...<span style="color: #000000;">]</span></span>
<span style="vertical-align:top">    <span style="color: #0600FF;">protected</span> <span style="color: #0600FF;">override</span> <span style="color: #0600FF;">void</span> Draw<span style="color: #000000;">(</span>GameTime gameTime<span style="color: #000000;">)</span></span>
<span style="vertical-align:top">    <span style="color: #000000;">{</span></span>
<span style="vertical-align:top">        graphics.<span style="color: #0000FF;">GraphicsDevice</span>.<span style="color: #0000FF;">Clear</span><span style="color: #000000;">(</span>Color.<span style="color: #0000FF;">CornflowerBlue</span><span style="color: #000000;">)</span><span style="color: #008000;">;</span></span>
<span style="vertical-align:top"> </span>
<span style="vertical-align:top">        Render2TextureMorph<span style="color: #000000;">(</span><span style="color: #000000;">(</span><span style="color: #FF0000;">float</span><span style="color: #000000;">)</span>Math.<span style="color: #0000FF;">Sin</span><span style="color: #000000;">(</span></span>
<span style="vertical-align:top">                            gameTime.<span style="color: #0000FF;">TotalGameTime</span>.<span style="color: #0000FF;">TotalSeconds</span><span style="color: #000000;">)</span></span>
<span style="vertical-align:top">                            <span style="color: #008000;">*</span> 0.5f <span style="color: #008000;">+</span> 0.5f<span style="color: #000000;">)</span><span style="color: #008000;">;</span></span>
<span style="vertical-align:top"> </span>
<span style="vertical-align:top">        Render2TextureNormalCompute<span style="color: #000000;">(</span><span style="color: #000000;">)</span><span style="color: #008000;">;</span></span>
<span style="vertical-align:top"> </span>
<span style="vertical-align:top">        <span style="color: #000000;">[</span>...<span style="color: #000000;">]</span></span>
<span style="vertical-align:top"> </span>
<span style="vertical-align:top">        gridEffect.<span style="color: #0000FF;">Parameters</span><span style="color: #000000;">[</span><span style="color: #666666;">"normalMap"</span><span style="color: #000000;">]</span>.<span style="color: #0000FF;">SetValue</span><span style="color: #000000;">(</span></span>
<span style="vertical-align:top">                                    normalRenderTarget.<span style="color: #0000FF;">GetTexture</span><span style="color: #000000;">(</span><span style="color: #000000;">)</span><span style="color: #000000;">)</span><span style="color: #008000;">;</span></span>
<span style="vertical-align:top"> </span>
<span style="vertical-align:top">        <span style="color: #000000;">[</span>...<span style="color: #000000;">]</span></span>
<span style="vertical-align:top">    <span style="color: #000000;">}</span></span></pre>
</div>
</div>
</div>
<p><span style="white-space:pre"></span>И, в конце концов, у вас должно получиться, что-то вроде этого:</p>
<p><img src="XnaDev.ru%20-%20XNA%20%D0%BD%D0%BE%D0%B2%D0%BE%D1%81%D1%82%D0%B8%20%D1%83%D1%80%D0%BE%D0%BA%D0%B8%20%D1%81%D1%82%D0%B0%D1%82%D1%8C%D0%B8%20%28xna.ru%29_files/normals.PNG" border="0" height="450" width="600"></p>
<p><span style="white-space: pre;"></span>Чтобы еще больше улучшить 
картинку, карту нормалей можно «смешать» с каким-нибудь шумом для 
эффекта небольшого бампа на поверхности.</p>
<p><span style="white-space: pre;"></span>В завершении второй части 
краткие итоги. Мы рассмотрели реализацию динамического изменения 
ландшафта. Выяснили, что использование отрисовки в текстуру 
(Render-To-Texture) может значительно поднять производительность и 
открывает дополнительные возможности по реализации специфичных эффектов.
 Так же мы рассмотрели, как можно рассчитать карту нормалей в реальном 
времени на основе карты высот. В последующих частях мы оставим в покое 
реализацию ландшафтов и рассмотрим другие интересные эффекты.</p>
<p><span style="white-space: pre;"></span>Полный код этой главы можно скачать тут: <a href="http://www.xnadev.ru/_Content/Tutorials/VTF/Chapter2.zip" target="_blank">Chapter2.rar</a></p>
<p></p>
<p><span style="white-space: pre;"></span><span style="font-weight: bold;">III. Системы частиц</span></p>
<p><span style="white-space: pre;"></span>В данной главе мы рассмотрим 
реализацию системы частиц, в которых обновление и анимация выполняется 
полностью на GPU, а точнее в пиксельном шейдере.<br>Реализацию кода 
данной главы можно начать писать как в новом проекте, так и в проекте 
предыдущей главы. В бонусном разделе будет рассмотрена комбинация 
реализаций системы частиц и отрисовки ландшафта, но пока необходимости в
 предыдущем коде нет. Если вы решили начать с нового проекта, то 
добавьте в проект компонент камеры и создайте две папки Textures и 
Shaders.<br><span style="white-space: pre;"></span>Реализация 
основывается на двух целях визуализации определенного размера. В 
текстурах связанных с этими целями визуализации хранится информация для 
системы частиц. Каждый пиксель текстуры содержит информацию об одной 
частице: первая хранит информацию скорости частицы, другая 
местоположение в пространстве. Текстуры обновляются методом Render To 
Texture, затем, когда данные о частице будет записана в текстуру, 
извлекается информация о позиции частицы через VTF. Кроме информации о 
координатах частицы, в 4 компоненте вектора (w) содержаться данные о 
времени жизни частицы. Когда время жизни частицы достигает определенного
 значения, она «умирает» и пиксель может использоваться для генерации 
новой частицы. Обновление данных координат и скорости частицы в 
текстурах происходит в пиксельном шейдере, примерно по тому же сценарию,
 как мы делали морфинг в предыдущей части.<br><span style="white-space: pre;"></span>Для
 начала, пожалуйста, добавьте файл flare.dds в папку Textures нашего 
проекта и установите процессор Texture(mipmapped) processor. Далее, 
открываем Game1.cs и добавляем следующие поля:</p>
<div class="rj_insertcode">
<div class="rj_insertcode_csharp">
<div class="csharp" style="background: #f8f8f8; width: 100%; border-collapse: collapse; border: #054b6e 1px solid;">
<pre style="margin:0; background:none; vertical-align:top; padding: 0px 4px; font-size: 12px;"><span style="vertical-align:top">    <span style="color: #008080; font-style: italic;">// Используется для генерации набора рандомных значений,</span></span>
<span style="vertical-align:top">    <span style="color: #008080; font-style: italic;">// будет использоваться в различных шейдерах</span></span>
<span style="vertical-align:top">    Texture2D randomTexture<span style="color: #008000;">;</span></span>
<span style="vertical-align:top"> </span>
<span style="vertical-align:top">    <span style="color: #008080; font-style: italic;">// Текстура для рисования частиц</span></span>
<span style="vertical-align:top">    Texture2D particleTexture<span style="color: #008000;">;</span></span>
<span style="vertical-align:top"> </span>
<span style="vertical-align:top">    <span style="color: #008080; font-style: italic;">// Цель визуализации, в которую будут писаться данные координат частиц</span></span>
<span style="vertical-align:top">    RenderTarget2D positionRT<span style="color: #008000;">;</span></span>
<span style="vertical-align:top"> </span>
<span style="vertical-align:top">    <span style="color: #008080; font-style: italic;">// Цель визуализации, в которую будут писаться данные скорости частиц</span></span>
<span style="vertical-align:top">    RenderTarget2D velocityRT<span style="color: #008000;">;</span></span>
<span style="vertical-align:top"> </span>
<span style="vertical-align:top">    <span style="color: #008080; font-style: italic;">// Временная цель визуализации,</span></span>
<span style="vertical-align:top">    <span style="color: #008080; font-style: italic;">// необходима, когда идет запись в другие RT</span></span>
<span style="vertical-align:top">    RenderTarget2D temporaryRT<span style="color: #008000;">;</span></span>
<span style="vertical-align:top"> </span>
<span style="vertical-align:top">    <span style="color: #008080; font-style: italic;">// Буфер глубины,</span></span>
<span style="vertical-align:top">    <span style="color: #008080; font-style: italic;">// используется при обновлении системы частиц</span></span>
<span style="vertical-align:top">    DepthStencilBuffer simulationDepthBuffer<span style="color: #008000;">;</span></span>
<span style="vertical-align:top"> </span>
<span style="vertical-align:top">    <span style="color: #008080; font-style: italic;">// Вершинный буфер, который содержит вершины системы частиц</span></span>
<span style="vertical-align:top">    VertexBuffer particlesVB<span style="color: #008000;">;</span></span>
<span style="vertical-align:top"> </span>
<span style="vertical-align:top">    <span style="color: #008080; font-style: italic;">// Эффект для отрисовки частиц</span></span>
<span style="vertical-align:top">    Effect renderParticleEffect<span style="color: #008000;">;</span></span>
<span style="vertical-align:top"> </span>
<span style="vertical-align:top">    <span style="color: #008080; font-style: italic;">// Эффект для обновления физики (местоположение, скорость)</span></span>
<span style="vertical-align:top">    Effect physicsEffect<span style="color: #008000;">;</span></span>
<span style="vertical-align:top"> </span>
<span style="vertical-align:top">    <span style="color: #008080; font-style: italic;">// Sprite batch используется при 2D отрисовке</span></span>
<span style="vertical-align:top">    SpriteBatch spriteBatch<span style="color: #008000;">;</span></span>
<span style="vertical-align:top"> </span>
<span style="vertical-align:top">    <span style="color: #008080; font-style: italic;">// Если true данные о физике будут сохраняться.</span></span>
<span style="vertical-align:top">    <span style="color: #008080; font-style: italic;">// Если false текстуры скорости и координат</span></span>
<span style="vertical-align:top">    <span style="color: #008080; font-style: italic;">// будут «скинуты» в изначальное состояние</span></span>
<span style="vertical-align:top">    Boolean isPhysicsReset<span style="color: #008000;">;</span></span>
<span style="vertical-align:top"> </span>
<span style="vertical-align:top">    <span style="color: #008080; font-style: italic;">// Разрешение целей визуализации.</span></span>
<span style="vertical-align:top">    <span style="color: #008080; font-style: italic;">// Количество частиц будет particleCount * particleCount.</span></span>
<span style="vertical-align:top">    <span style="color: #FF0000;">int</span> particleCount <span style="color: #008000;">=</span> <span style="color: #FF0000;">512</span><span style="color: #008000;">;</span></span></pre>
</div>
</div>
</div>
<p><span style="white-space: pre;"></span>Полей довольно много, немного 
комментариев чего для чего. Цель визуализации randomTexture будет 
заполняться случайными значениями, которые будут использоваться при 
симуляции. Цель визуализации temporaryRT необходима при обновлении 
координат и скоростей частиц, так как XNA не умеет одновременно писать и
 читать данные из текстуры. К примеру, когда происходит пересчет 
координат на основе старых данных, то новое значение записывается во 
временную цель визуализации, которая впоследствии копируется на место 
исходных значений. Вершинный буфер содержит все данные о вершинах, 
которые соответствуют количеству частиц. Если необходимо мы можем 
создать несколько вершинных буферов, для нескольких независимых систем 
частиц, которые будут хранить различные части данных о координатах и 
скоростях частиц. Обновление будет происходить одновременно, но мы не 
сможем отрисовать эти системы, используя отсечение по пирамиде камеры. В
 качестве разминки, можете сами написать данную реализацию. Так же нам 
необходимы два эффекта (шейдера): первый используется для отрисовки 
частиц, он просто читает координаты вершин в вершинный шейдер, второй 
целиком и полностью занимается обновлением координат и скоростей. И, 
наконец, переменная particleCount отвечает за размер целей визуализации,
 ее величина должна быть относительно 2 (делиться на 2 без остатка), 
итого у нас будет particleCount * particleCount частиц.</p>
<p><span style="white-space: pre;"></span>В функции LoadGraphicsContent мы инициализируем наши переменные:</p>
<div class="rj_insertcode">
<div class="rj_insertcode_csharp">
<div class="csharp" style="background: #f8f8f8; width: 100%; border-collapse: collapse; border: #054b6e 1px solid;">
<pre style="margin:0; background:none; vertical-align:top; padding: 0px 4px; font-size: 12px;"><span style="vertical-align:top">    particleTexture <span style="color: #008000;">=</span> content.<span style="color: #0000FF;">Load</span><span style="color: #008000;">&lt;</span>Texture2D<span style="color: #008000;">&gt;</span><span style="color: #000000;">(</span><span style="color: #666666;">"Textures<span style="color: #008080; font-weight: bold;">\</span>flare"</span><span style="color: #000000;">)</span><span style="color: #008000;">;</span></span>
<span style="vertical-align:top">    spriteBatch <span style="color: #008000;">=</span> <a href="http://www.google.com/search?q=new+msdn.microsoft.com"><span style="color: #008000;">new</span></a> SpriteBatch<span style="color: #000000;">(</span>graphics.<span style="color: #0000FF;">GraphicsDevice</span><span style="color: #000000;">)</span><span style="color: #008000;">;</span></span>
<span style="vertical-align:top"> </span>
<span style="vertical-align:top">    temporaryRT <span style="color: #008000;">=</span> <a href="http://www.google.com/search?q=new+msdn.microsoft.com"><span style="color: #008000;">new</span></a> RenderTarget2D<span style="color: #000000;">(</span>graphics.<span style="color: #0000FF;">GraphicsDevice</span>,</span>
<span style="vertical-align:top">                                     particleCount,</span>
<span style="vertical-align:top">                                     particleCount,</span>
<span style="vertical-align:top">                                     <span style="color: #FF0000;">1</span>,</span>
<span style="vertical-align:top">                                     SurfaceFormat.<span style="color: #0000FF;">Vector4</span>,</span>
<span style="vertical-align:top">                                     MultiSampleType.<span style="color: #0000FF;">None</span>,</span>
<span style="vertical-align:top">                                     <span style="color: #FF0000;">0</span><span style="color: #000000;">)</span><span style="color: #008000;">;</span></span>
<span style="vertical-align:top"> </span>
<span style="vertical-align:top">    positionRT <span style="color: #008000;">=</span> <a href="http://www.google.com/search?q=new+msdn.microsoft.com"><span style="color: #008000;">new</span></a> RenderTarget2D<span style="color: #000000;">(</span>graphics.<span style="color: #0000FF;">GraphicsDevice</span>,</span>
<span style="vertical-align:top">                                    particleCount,</span>
<span style="vertical-align:top">                                    particleCount,</span>
<span style="vertical-align:top">                                    <span style="color: #FF0000;">1</span>,</span>
<span style="vertical-align:top">                                    SurfaceFormat.<span style="color: #0000FF;">Vector4</span>,</span>
<span style="vertical-align:top">                                    MultiSampleType.<span style="color: #0000FF;">None</span>,</span>
<span style="vertical-align:top">                                    <span style="color: #FF0000;">0</span><span style="color: #000000;">)</span><span style="color: #008000;">;</span></span>
<span style="vertical-align:top"> </span>
<span style="vertical-align:top">    velocityRT <span style="color: #008000;">=</span> <a href="http://www.google.com/search?q=new+msdn.microsoft.com"><span style="color: #008000;">new</span></a> RenderTarget2D<span style="color: #000000;">(</span>graphics.<span style="color: #0000FF;">GraphicsDevice</span>,</span>
<span style="vertical-align:top">                                    particleCount,</span>
<span style="vertical-align:top">                                    particleCount,</span>
<span style="vertical-align:top">                                    <span style="color: #FF0000;">1</span>,</span>
<span style="vertical-align:top">                                    SurfaceFormat.<span style="color: #0000FF;">Vector4</span>,</span>
<span style="vertical-align:top">                                    MultiSampleType.<span style="color: #0000FF;">None</span>,</span>
<span style="vertical-align:top">                                    <span style="color: #FF0000;">0</span><span style="color: #000000;">)</span><span style="color: #008000;">;</span></span>
<span style="vertical-align:top"> </span>
<span style="vertical-align:top">    simulationDepthBuffer <span style="color: #008000;">=</span> <a href="http://www.google.com/search?q=new+msdn.microsoft.com"><span style="color: #008000;">new</span></a> DepthStencilBuffer<span style="color: #000000;">(</span></span>
<span style="vertical-align:top">                                    graphics.<span style="color: #0000FF;">GraphicsDevice</span>,</span>
<span style="vertical-align:top">                                    particleCount,</span>
<span style="vertical-align:top">                                    particleCount,</span>
<span style="vertical-align:top">                        graphics.<span style="color: #0000FF;">GraphicsDevice</span>.<span style="color: #0000FF;">DepthStencilBuffer</span>.<span style="color: #0000FF;">Format</span><span style="color: #000000;">)</span><span style="color: #008000;">;</span></span>
<span style="vertical-align:top"> </span>
<span style="vertical-align:top">    isPhysicsReset <span style="color: #008000;">=</span> false<span style="color: #008000;">;</span></span></pre>
</div>
</div>
</div>
<p>&nbsp;</p>
<p><span style="white-space:pre"></span>SurfaceFormat для целей 
визуализации указан Vector4, на моей видеокарте (GeForce 7600) Vector4 
единственный поддерживаемый формат для VTF (HalfVector4 не 
поддерживается, а Single содержит только одно значение, а нам нужно как 
минимум 3, чтобы записать информацию о координатах частицы). Если вы 
планируете, запуск на XBOX 360, то вам необходимо использовать 
HalfVector4, так как Vector4 генерирует ошибку времени исполнения, 
говоря, что данный формат не поддерживается. Данные физики необходимо 
сбрасывать при перестройке целей визуализации, так что isPhysicsReset 
устанавливаем в false.</p>
<p><span style="white-space:pre"></span>Далее добавляем код инициализации вершинного буфера:</p>
<p>&nbsp;</p>
<div class="rj_insertcode">
<div class="rj_insertcode_csharp">
<div class="csharp" style="background: #f8f8f8; width: 100%; border-collapse: collapse; border: #054b6e 1px solid;">
<pre style="margin:0; background:none; vertical-align:top; padding: 0px 4px; font-size: 12px;"><span style="vertical-align:top">    VertexPositionColor<span style="color: #000000;">[</span><span style="color: #000000;">]</span> vertices <span style="color: #008000;">=</span> <a href="http://www.google.com/search?q=new+msdn.microsoft.com"><span style="color: #008000;">new</span></a> VertexPositionColor<span style="color: #000000;">[</span>particleCount <span style="color: #008000;">*</span> particleCount<span style="color: #000000;">]</span><span style="color: #008000;">;</span></span>
<span style="vertical-align:top"> </span>
<span style="vertical-align:top"> </span>
<span style="vertical-align:top"> </span>
<span style="vertical-align:top">    Random rand <span style="color: #008000;">=</span> <a href="http://www.google.com/search?q=new+msdn.microsoft.com"><span style="color: #008000;">new</span></a> Random<span style="color: #000000;">(</span><span style="color: #000000;">)</span><span style="color: #008000;">;</span></span>
<span style="vertical-align:top"> </span>
<span style="vertical-align:top">    <span style="color: #0600FF;">for</span> <span style="color: #000000;">(</span><span style="color: #FF0000;">int</span> i <span style="color: #008000;">=</span> <span style="color: #FF0000;">0</span><span style="color: #008000;">;</span> i <span style="color: #008000;">&lt;</span> particleCount<span style="color: #008000;">;</span> i<span style="color: #008000;">++</span><span style="color: #000000;">)</span></span>
<span style="vertical-align:top"> </span>
<span style="vertical-align:top">    <span style="color: #000000;">{</span></span>
<span style="vertical-align:top"> </span>
<span style="vertical-align:top">        <span style="color: #0600FF;">for</span> <span style="color: #000000;">(</span><span style="color: #FF0000;">int</span> j <span style="color: #008000;">=</span> <span style="color: #FF0000;">0</span><span style="color: #008000;">;</span> j <span style="color: #008000;">&lt;</span> particleCount<span style="color: #008000;">;</span> j<span style="color: #008000;">++</span><span style="color: #000000;">)</span></span>
<span style="vertical-align:top"> </span>
<span style="vertical-align:top">        <span style="color: #000000;">{</span></span>
<span style="vertical-align:top"> </span>
<span style="vertical-align:top">            VertexPositionColor vert <span style="color: #008000;">=</span> <a href="http://www.google.com/search?q=new+msdn.microsoft.com"><span style="color: #008000;">new</span></a> VertexPositionColor<span style="color: #000000;">(</span><span style="color: #000000;">)</span><span style="color: #008000;">;</span></span>
<span style="vertical-align:top"> </span>
<span style="vertical-align:top">            vert.<span style="color: #0000FF;">Color</span> <span style="color: #008000;">=</span> <a href="http://www.google.com/search?q=new+msdn.microsoft.com"><span style="color: #008000;">new</span></a> Color<span style="color: #000000;">(</span><span style="color: #FF0000;">150</span>, <span style="color: #FF0000;">150</span>, <span style="color: #000000;">(</span><span style="color: #FF0000;">byte</span><span style="color: #000000;">)</span><span style="color: #000000;">(</span><span style="color: #FF0000;">200</span> <span style="color: #008000;">+</span> rand.<span style="color: #0000FF;">Next</span><span style="color: #000000;">(</span><span style="color: #FF0000;">50</span><span style="color: #000000;">)</span><span style="color: #000000;">)</span><span style="color: #000000;">)</span><span style="color: #008000;">;</span></span>
<span style="vertical-align:top"> </span>
<span style="vertical-align:top">            vert.<span style="color: #0000FF;">Position</span> <span style="color: #008000;">=</span> <a href="http://www.google.com/search?q=new+msdn.microsoft.com"><span style="color: #008000;">new</span></a> Vector3<span style="color: #000000;">(</span><span style="color: #000000;">)</span><span style="color: #008000;">;</span></span>
<span style="vertical-align:top"> </span>
<span style="vertical-align:top">            vert.<span style="color: #0000FF;">Position</span>.<span style="color: #0000FF;">X</span> <span style="color: #008000;">=</span> <span style="color: #000000;">(</span><span style="color: #FF0000;">float</span><span style="color: #000000;">)</span>i <span style="color: #008000;">/</span> <span style="color: #000000;">(</span><span style="color: #FF0000;">float</span><span style="color: #000000;">)</span>particleCount<span style="color: #008000;">;</span></span>
<span style="vertical-align:top"> </span>
<span style="vertical-align:top">            vert.<span style="color: #0000FF;">Position</span>.<span style="color: #0000FF;">Y</span> <span style="color: #008000;">=</span> <span style="color: #000000;">(</span><span style="color: #FF0000;">float</span><span style="color: #000000;">)</span>j <span style="color: #008000;">/</span> <span style="color: #000000;">(</span><span style="color: #FF0000;">float</span><span style="color: #000000;">)</span>particleCount<span style="color: #008000;">;</span></span>
<span style="vertical-align:top"> </span>
<span style="vertical-align:top">            vertices<span style="color: #000000;">[</span>i <span style="color: #008000;">*</span> particleCount <span style="color: #008000;">+</span> j<span style="color: #000000;">]</span> <span style="color: #008000;">=</span> vert<span style="color: #008000;">;</span></span>
<span style="vertical-align:top"> </span>
<span style="vertical-align:top">        <span style="color: #000000;">}</span></span>
<span style="vertical-align:top"> </span>
<span style="vertical-align:top">    <span style="color: #000000;">}</span></span>
<span style="vertical-align:top"> </span>
<span style="vertical-align:top"> </span>
<span style="vertical-align:top"> </span>
<span style="vertical-align:top">    particlesVB <span style="color: #008000;">=</span> <a href="http://www.google.com/search?q=new+msdn.microsoft.com"><span style="color: #008000;">new</span></a> VertexBuffer<span style="color: #000000;">(</span>graphics.<span style="color: #0000FF;">GraphicsDevice</span>,</span>
<span style="vertical-align:top"> </span>
<span style="vertical-align:top">                                   <a href="http://www.google.com/search?q=typeof+msdn.microsoft.com"><span style="color: #008000;">typeof</span></a><span style="color: #000000;">(</span>VertexPositionColor<span style="color: #000000;">)</span>,</span>
<span style="vertical-align:top"> </span>
<span style="vertical-align:top">                                   particleCount <span style="color: #008000;">*</span> particleCount,</span>
<span style="vertical-align:top"> </span>
<span style="vertical-align:top">                                   ResourceUsage.<span style="color: #0000FF;">Points</span><span style="color: #000000;">)</span><span style="color: #008000;">;</span></span>
<span style="vertical-align:top"> </span>
<span style="vertical-align:top">    particlesVB.<span style="color: #0000FF;">SetData</span><span style="color: #008000;">&lt;</span>VertexPositionColor<span style="color: #008000;">&gt;</span><span style="color: #000000;">(</span>vertices<span style="color: #000000;">)</span><span style="color: #008000;">;</span></span></pre>
</div>
</div>
</div>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p><span style="white-space:pre"></span>Мы будем использовать технику называемую <a href="http://www.riemers.net/eng/Tutorials/DirectX/Csharp/Series2/tut13.php" target="_blank">Point Sprites</a>,
 таким образом, для одной частицы нужна только одна вершина. Для каждой 
частицы мы установили случайный цвет, в данном примере я выбрал 
случайное значение бело-синего цвета. Вместо координат в пространстве 
для вершин, мы установили текстурные координаты, которые будут 
заменяться реальными координатами при считывании из текстуры. Как вы 
могли заметить мы не устанавливали значение Position.Z, так как данных 
для этого значения еще нет. Мы вообще не можем установить это значение 
сразу, если нам понадобится два прохода для получения данных, к примеру,
 выборка данных из двух различных текстур или при установке сортировки 
для эффекта мерцания и т.п. Вообще есть много применений где можно 
использовать данный подход, но в данном уроке мы просто оставляем это 
значение не заполненным. Вершинный буфер создается с флагом 
ResourceUsage.Points и данные вершин просто копируются в него.</p>
<p><span style="white-space:pre"></span>Далее мы создаем randomTexture и
 заполняем случайными значениями в диапазоне от -0,5 до 0,5, таким 
образом что значения X, Y и Z определяют куб с центром в начале 
координат. Размер текстуры выбирается произвольный, по вашему желанию.</p>
<p>&nbsp;</p>
<div class="rj_insertcode">
<div class="rj_insertcode_csharp">
<div class="csharp" style="background: #f8f8f8; width: 100%; border-collapse: collapse; border: #054b6e 1px solid;">
<pre style="margin:0; background:none; vertical-align:top; padding: 0px 4px; font-size: 12px;"><span style="vertical-align:top">    randomTexture <span style="color: #008000;">=</span> <a href="http://www.google.com/search?q=new+msdn.microsoft.com"><span style="color: #008000;">new</span></a> Texture2D<span style="color: #000000;">(</span>graphics.<span style="color: #0000FF;">GraphicsDevice</span>,</span>
<span style="vertical-align:top"> </span>
<span style="vertical-align:top">                       <span style="color: #FF0000;">128</span>,</span>
<span style="vertical-align:top"> </span>
<span style="vertical-align:top">                       <span style="color: #FF0000;">128</span>,</span>
<span style="vertical-align:top"> </span>
<span style="vertical-align:top">                       <span style="color: #FF0000;">1</span>,</span>
<span style="vertical-align:top"> </span>
<span style="vertical-align:top">                       ResourceUsage.<span style="color: #0000FF;">None</span>,</span>
<span style="vertical-align:top"> </span>
<span style="vertical-align:top">                       SurfaceFormat.<span style="color: #0000FF;">Vector4</span><span style="color: #000000;">)</span><span style="color: #008000;">;</span></span>
<span style="vertical-align:top"> </span>
<span style="vertical-align:top"> </span>
<span style="vertical-align:top"> </span>
<span style="vertical-align:top">    Vector4<span style="color: #000000;">[</span><span style="color: #000000;">]</span> pointsarray <span style="color: #008000;">=</span> <a href="http://www.google.com/search?q=new+msdn.microsoft.com"><span style="color: #008000;">new</span></a> Vector4<span style="color: #000000;">[</span><span style="color: #FF0000;">128</span> <span style="color: #008000;">*</span> <span style="color: #FF0000;">128</span><span style="color: #000000;">]</span><span style="color: #008000;">;</span></span>
<span style="vertical-align:top"> </span>
<span style="vertical-align:top">    <span style="color: #0600FF;">for</span> <span style="color: #000000;">(</span><span style="color: #FF0000;">int</span> i <span style="color: #008000;">=</span> <span style="color: #FF0000;">0</span><span style="color: #008000;">;</span> i <span style="color: #008000;">&lt;</span> <span style="color: #FF0000;">128</span> <span style="color: #008000;">*</span> <span style="color: #FF0000;">128</span><span style="color: #008000;">;</span> i<span style="color: #008000;">++</span><span style="color: #000000;">)</span></span>
<span style="vertical-align:top"> </span>
<span style="vertical-align:top">    <span style="color: #000000;">{</span></span>
<span style="vertical-align:top"> </span>
<span style="vertical-align:top">        pointsarray<span style="color: #000000;">[</span>i<span style="color: #000000;">]</span> <span style="color: #008000;">=</span> <a href="http://www.google.com/search?q=new+msdn.microsoft.com"><span style="color: #008000;">new</span></a> Vector4<span style="color: #000000;">(</span><span style="color: #000000;">)</span><span style="color: #008000;">;</span></span>
<span style="vertical-align:top"> </span>
<span style="vertical-align:top">        pointsarray<span style="color: #000000;">[</span>i<span style="color: #000000;">]</span>.<span style="color: #0000FF;">X</span> <span style="color: #008000;">=</span> <span style="color: #000000;">(</span><span style="color: #FF0000;">float</span><span style="color: #000000;">)</span>rand.<span style="color: #0000FF;">NextDouble</span><span style="color: #000000;">(</span><span style="color: #000000;">)</span> <span style="color: #008000;">-</span> 0.5f<span style="color: #008000;">;</span></span>
<span style="vertical-align:top"> </span>
<span style="vertical-align:top">        pointsarray<span style="color: #000000;">[</span>i<span style="color: #000000;">]</span>.<span style="color: #0000FF;">Y</span> <span style="color: #008000;">=</span> <span style="color: #000000;">(</span><span style="color: #FF0000;">float</span><span style="color: #000000;">)</span>rand.<span style="color: #0000FF;">NextDouble</span><span style="color: #000000;">(</span><span style="color: #000000;">)</span> <span style="color: #008000;">-</span> 0.5f<span style="color: #008000;">;</span></span>
<span style="vertical-align:top"> </span>
<span style="vertical-align:top">        pointsarray<span style="color: #000000;">[</span>i<span style="color: #000000;">]</span>.<span style="color: #0000FF;">Z</span> <span style="color: #008000;">=</span> <span style="color: #000000;">(</span><span style="color: #FF0000;">float</span><span style="color: #000000;">)</span>rand.<span style="color: #0000FF;">NextDouble</span><span style="color: #000000;">(</span><span style="color: #000000;">)</span> <span style="color: #008000;">-</span> 0.5f<span style="color: #008000;">;</span></span>
<span style="vertical-align:top"> </span>
<span style="vertical-align:top">        pointsarray<span style="color: #000000;">[</span>i<span style="color: #000000;">]</span>.<span style="color: #0000FF;">W</span> <span style="color: #008000;">=</span> <span style="color: #000000;">(</span><span style="color: #FF0000;">float</span><span style="color: #000000;">)</span>rand.<span style="color: #0000FF;">NextDouble</span><span style="color: #000000;">(</span><span style="color: #000000;">)</span> <span style="color: #008000;">-</span> 0.5f<span style="color: #008000;">;</span></span>
<span style="vertical-align:top"> </span>
<span style="vertical-align:top">    <span style="color: #000000;">}</span></span>
<span style="vertical-align:top"> </span>
<span style="vertical-align:top"> </span>
<span style="vertical-align:top"> </span>
<span style="vertical-align:top">    randomTexture.<span style="color: #0000FF;">SetData</span><span style="color: #008000;">&lt;</span>Vector4<span style="color: #008000;">&gt;</span><span style="color: #000000;">(</span>pointsarray<span style="color: #000000;">)</span><span style="color: #008000;">;</span></span></pre>
</div>
</div>
</div>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p><span style="white-space:pre"></span>Теперь давайте немного попишем 
шейдеры. Создайте новый файл с именем Particle.fx в папке Shaders. Нам 
необходимы стандартные матрицы, затем добавьте текстуры, одну для 
рисования частиц и еще одну из которой мы будем читать координаты 
частиц.</p>
<p>&nbsp;</p>
<div class="rj_insertcode">
<div class="rj_insertcode_hlsl">
<div class="hlsl" style="background: #f8f8f8; width: 100%; border-collapse: collapse; border: #054b6e 1px solid;">
<pre style="margin:0; background:none; vertical-align:top; padding: 0px 4px; font-size: 12px;"><span style="vertical-align:top">    <span style="color: #000066; font-weight: bold;">float4x4</span> view<span style="color: #000066;">;</span></span>
<span style="vertical-align:top"> </span>
<span style="vertical-align:top">    <span style="color: #000066; font-weight: bold;">float4x4</span> proj<span style="color: #000066;">;</span></span>
<span style="vertical-align:top"> </span>
<span style="vertical-align:top">    <span style="color: #000066; font-weight: bold;">float4x4</span> world<span style="color: #000066;">;</span></span>
<span style="vertical-align:top"> </span>
<span style="vertical-align:top"> </span>
<span style="vertical-align:top"> </span>
<span style="vertical-align:top">    <span style="color: #000066; font-weight: bold;">float</span> sizeModifier <span style="color: #000066;">:</span> PARTICLE_SIZE <span style="color: #000066;">=</span> 3<span style="color: #000066;">.</span>5f<span style="color: #000066;">;</span></span>
<span style="vertical-align:top"> </span>
<span style="vertical-align:top"> </span>
<span style="vertical-align:top"> </span>
<span style="vertical-align:top">    <span style="color: #666666; font-style: italic;">// Текстура для отрисовки сцены</span></span>
<span style="vertical-align:top"> </span>
<span style="vertical-align:top">    texture textureMap <span style="color: #000066;">:</span> DiffuseMap<span style="color: #000066;">;</span> </span>
<span style="vertical-align:top"> </span>
<span style="vertical-align:top">    sampler textureSampler <span style="color: #000066;">=</span> sampler_state</span>
<span style="vertical-align:top"> </span>
<span style="vertical-align:top">    <span style="color: #000066;">{</span></span>
<span style="vertical-align:top"> </span>
<span style="vertical-align:top">        Texture <span style="color: #000066;">=</span> <span style="color: #000066;">&lt;</span>textureMap<span style="color: #000066;">&gt;;</span></span>
<span style="vertical-align:top"> </span>
<span style="vertical-align:top"> </span>
<span style="vertical-align:top"> </span>
<span style="vertical-align:top">        AddressU  <span style="color: #000066;">=</span> CLAMP<span style="color: #000066;">;</span></span>
<span style="vertical-align:top"> </span>
<span style="vertical-align:top">        AddressV  <span style="color: #000066;">=</span> CLAMP<span style="color: #000066;">;</span></span>
<span style="vertical-align:top"> </span>
<span style="vertical-align:top"> </span>
<span style="vertical-align:top"> </span>
<span style="vertical-align:top">        MIPFILTER <span style="color: #000066;">=</span> LINEAR<span style="color: #000066;">;</span></span>
<span style="vertical-align:top"> </span>
<span style="vertical-align:top">        MINFILTER <span style="color: #000066;">=</span> LINEAR<span style="color: #000066;">;</span></span>
<span style="vertical-align:top"> </span>
<span style="vertical-align:top">        MAGFILTER <span style="color: #000066;">=</span> LINEAR<span style="color: #000066;">;</span></span>
<span style="vertical-align:top"> </span>
<span style="vertical-align:top">    <span style="color: #000066;">}</span><span style="color: #000066;">;</span></span>
<span style="vertical-align:top"> </span>
<span style="vertical-align:top"> </span>
<span style="vertical-align:top"> </span>
<span style="vertical-align:top">    <span style="color: #666666; font-style: italic;">// Текстура для хранения координат, используется в VTF</span></span>
<span style="vertical-align:top"> </span>
<span style="vertical-align:top">    texture positionMap<span style="color: #000066;">;</span></span>
<span style="vertical-align:top"> </span>
<span style="vertical-align:top">    sampler positionSampler <span style="color: #000066;">=</span> sampler_state</span>
<span style="vertical-align:top"> </span>
<span style="vertical-align:top">    <span style="color: #000066;">{</span></span>
<span style="vertical-align:top"> </span>
<span style="vertical-align:top">        Texture   <span style="color: #000066;">=</span> <span style="color: #000066;">&lt;</span>positionMap<span style="color: #000066;">&gt;;</span></span>
<span style="vertical-align:top"> </span>
<span style="vertical-align:top"> </span>
<span style="vertical-align:top"> </span>
<span style="vertical-align:top">        MipFilter <span style="color: #000066;">=</span> None<span style="color: #000066;">;</span></span>
<span style="vertical-align:top"> </span>
<span style="vertical-align:top">        MinFilter <span style="color: #000066;">=</span> Point<span style="color: #000066;">;</span></span>
<span style="vertical-align:top"> </span>
<span style="vertical-align:top">        MagFilter <span style="color: #000066;">=</span> Point<span style="color: #000066;">;</span></span>
<span style="vertical-align:top"> </span>
<span style="vertical-align:top"> </span>
<span style="vertical-align:top"> </span>
<span style="vertical-align:top">        AddressU  <span style="color: #000066;">=</span> Clamp<span style="color: #000066;">;</span></span>
<span style="vertical-align:top"> </span>
<span style="vertical-align:top">        AddressV  <span style="color: #000066;">=</span> Clamp<span style="color: #000066;">;</span></span>
<span style="vertical-align:top"> </span>
<span style="vertical-align:top">    <span style="color: #000066;">}</span><span style="color: #000066;">;</span></span></pre>
</div>
</div>
</div>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p><span style="white-space:pre"></span>Переменная sizeModifier отвечает
 за размер частиц, после того как мы напишем весь код, можете поиграться
 с этим значением и подобрать размер частиц, который больше по вкусу. 
Далее добавляем входные и выходные структуры.</p>
<p>&nbsp;</p>
<div class="rj_insertcode">
<div class="rj_insertcode_hlsl">
<div class="hlsl" style="background: #f8f8f8; width: 100%; border-collapse: collapse; border: #054b6e 1px solid;">
<pre style="margin:0; background:none; vertical-align:top; padding: 0px 4px; font-size: 12px;"><span style="vertical-align:top">    <span style="color: #000066; font-weight: bold;">struct</span> VS_INPUT</span>
<span style="vertical-align:top"> </span>
<span style="vertical-align:top">    <span style="color: #000066;">{</span></span>
<span style="vertical-align:top"> </span>
<span style="vertical-align:top">        <span style="color: #000066; font-weight: bold;">float4</span> vertexData  <span style="color: #000066;">:</span> <span style="color: #551111;">POSITION</span><span style="color: #000066;">;</span></span>
<span style="vertical-align:top"> </span>
<span style="vertical-align:top">        <span style="color: #000066; font-weight: bold;">float4</span> color       <span style="color: #000066;">:</span> COLOR0<span style="color: #000066;">;</span></span>
<span style="vertical-align:top"> </span>
<span style="vertical-align:top">    <span style="color: #000066;">}</span><span style="color: #000066;">;</span></span>
<span style="vertical-align:top"> </span>
<span style="vertical-align:top"> </span>
<span style="vertical-align:top"> </span>
<span style="vertical-align:top">    <span style="color: #000066; font-weight: bold;">struct</span> VS_OUTPUT</span>
<span style="vertical-align:top"> </span>
<span style="vertical-align:top">    <span style="color: #000066;">{</span></span>
<span style="vertical-align:top"> </span>
<span style="vertical-align:top">        <span style="color: #000066; font-weight: bold;">float4</span> position    <span style="color: #000066;">:</span> <span style="color: #551111;">POSITION</span><span style="color: #000066;">;</span></span>
<span style="vertical-align:top"> </span>
<span style="vertical-align:top">        <span style="color: #000066; font-weight: bold;">float4</span> color       <span style="color: #000066;">:</span> COLOR0<span style="color: #000066;">;</span></span>
<span style="vertical-align:top"> </span>
<span style="vertical-align:top">        <span style="color: #000066; font-weight: bold;">float</span> Size         <span style="color: #000066;">:</span> PSIZE0<span style="color: #000066;">;</span></span>
<span style="vertical-align:top"> </span>
<span style="vertical-align:top">    <span style="color: #000066;">}</span><span style="color: #000066;">;</span></span>
<span style="vertical-align:top"> </span>
<span style="vertical-align:top"> </span>
<span style="vertical-align:top"> </span>
<span style="vertical-align:top">    <span style="color: #000066; font-weight: bold;">struct</span> PS_INPUT</span>
<span style="vertical-align:top"> </span>
<span style="vertical-align:top">    <span style="color: #000066;">{</span></span>
<span style="vertical-align:top"> </span>
<span style="vertical-align:top">        <span style="color: #009900;">#ifdef XBOX</span></span>
<span style="vertical-align:top"> </span>
<span style="vertical-align:top">            <span style="color: #000066; font-weight: bold;">float4</span> textureCoordinate <span style="color: #000066;">:</span> SPRITETEXCOORD<span style="color: #000066;">;</span></span>
<span style="vertical-align:top"> </span>
<span style="vertical-align:top">        <span style="color: #009900;">#else</span></span>
<span style="vertical-align:top"> </span>
<span style="vertical-align:top">            <span style="color: #000066; font-weight: bold;">float2</span> textureCoordinate <span style="color: #000066;">:</span> <span style="color: #551111;">TEXCOORD0</span><span style="color: #000066;">;</span></span>
<span style="vertical-align:top"> </span>
<span style="vertical-align:top">        <span style="color: #009900;">#endif</span></span>
<span style="vertical-align:top"> </span>
<span style="vertical-align:top"> </span>
<span style="vertical-align:top"> </span>
<span style="vertical-align:top">        <span style="color: #000066; font-weight: bold;">float4</span> Color <span style="color: #000066;">:</span> COLOR0<span style="color: #000066;">;</span></span>
<span style="vertical-align:top"> </span>
<span style="vertical-align:top">    <span style="color: #000066;">}</span><span style="color: #000066;">;</span></span></pre>
</div>
</div>
</div>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p><span style="white-space:pre"></span>Нам необходим блок #ifdef, так 
как реализация Point Sprites на XBOX 360 немного отличается от 
реализации Windows. Дале в вершинном шейдере мы рассчитываем 
worldViewProjection матрицу, извлекаем данные координат частиц и 
трансформируем их. Мы рассчитываем размер частиц на основе матрицы 
проекции и высоты экрана, чтобы размер частиц не зависел, от разрешения 
экрана.</p>
<p>&nbsp;</p>
<div class="rj_insertcode">
<div class="rj_insertcode_hlsl">
<div class="hlsl" style="background: #f8f8f8; width: 100%; border-collapse: collapse; border: #054b6e 1px solid;">
<pre style="margin:0; background:none; vertical-align:top; padding: 0px 4px; font-size: 12px;"><span style="vertical-align:top">    <span style="color: #000066; font-weight: bold;">float</span> screenHeight <span style="color: #000066;">=</span> <span style="color: #0000ff;">600</span><span style="color: #000066;">;</span></span>
<span style="vertical-align:top"> </span>
<span style="vertical-align:top">    VS_OUTPUT Transform<span style="color: #000066;">(</span>VS_INPUT In<span style="color: #000066;">)</span></span>
<span style="vertical-align:top">    <span style="color: #000066;">{</span></span>
<span style="vertical-align:top">        VS_OUTPUT Out <span style="color: #000066;">=</span> <span style="color: #000066;">(</span>VS_OUTPUT<span style="color: #000066;">)</span><span style="color: #0000ff;">0</span><span style="color: #000066;">;</span></span>
<span style="vertical-align:top"> </span>
<span style="vertical-align:top"> </span>
<span style="vertical-align:top">        <span style="color: #000066; font-weight: bold;">float4x4</span> worldView      <span style="color: #000066;">=</span> mul<span style="color: #000066;">(</span>world<span style="color: #000066;">,</span> view<span style="color: #000066;">)</span><span style="color: #000066;">;</span></span>
<span style="vertical-align:top">        <span style="color: #000066; font-weight: bold;">float4x4</span> WorldViewProj  <span style="color: #000066;">=</span> mul<span style="color: #000066;">(</span>worldView<span style="color: #000066;">,</span> proj<span style="color: #000066;">)</span><span style="color: #000066;">;</span></span>
<span style="vertical-align:top"> </span>
<span style="vertical-align:top"> </span>
<span style="vertical-align:top">        <span style="color: #666666; font-style: italic;">// Преобразовываем координаты из локальной</span></span>
<span style="vertical-align:top">        <span style="color: #666666; font-style: italic;">// системы координат в однородную</span></span>
<span style="vertical-align:top">        <span style="color: #000066; font-weight: bold;">float4</span> realPosition <span style="color: #000066;">=</span> tex2Dlod <span style="color: #000066;">(</span> positionSampler<span style="color: #000066;">,</span></span>
<span style="vertical-align:top">                                         <span style="color: #000066; font-weight: bold;">float4</span><span style="color: #000066;">(</span>In<span style="color: #000066;">.</span><span style="color: #006600;">vertexData</span><span style="color: #000066;">.</span><span style="color: #006600;">x</span><span style="color: #000066;">,</span></span>
<span style="vertical-align:top">                                                In<span style="color: #000066;">.</span><span style="color: #006600;">vertexData</span><span style="color: #000066;">.</span><span style="color: #006600;">y</span><span style="color: #000066;">,</span></span>
<span style="vertical-align:top">                                                <span style="color: #0000ff;">0</span><span style="color: #000066;">,</span></span>
<span style="vertical-align:top">                                                <span style="color: #0000ff;">0</span><span style="color: #000066;">)</span><span style="color: #000066;">)</span><span style="color: #000066;">;</span></span>
<span style="vertical-align:top"> </span>
<span style="vertical-align:top">        Out<span style="color: #000066;">.</span><span style="color: #006600;">color</span> <span style="color: #000066;">=</span> In<span style="color: #000066;">.</span><span style="color: #006600;">color</span><span style="color: #000066;">;</span></span>
<span style="vertical-align:top"> </span>
<span style="vertical-align:top">        <span style="color: #666666; font-style: italic;">// Устанавливаем это значение в 1, т.к. значение считанное</span></span>
<span style="vertical-align:top">        <span style="color: #666666; font-style: italic;">// из текстуры содержит данные о времени жизни частицы,</span></span>
<span style="vertical-align:top">        <span style="color: #666666; font-style: italic;">// которые в данный момент нас не интересуют</span></span>
<span style="vertical-align:top">        realPosition<span style="color: #000066;">.</span><span style="color: #006600;">w</span> <span style="color: #000066;">=</span> <span style="color: #0000ff;">1</span><span style="color: #000066;">;</span></span>
<span style="vertical-align:top"> </span>
<span style="vertical-align:top">        Out<span style="color: #000066;">.</span><span style="color: #006600;">position</span> <span style="color: #000066;">=</span> mul<span style="color: #000066;">(</span> realPosition <span style="color: #000066;">,</span> WorldViewProj<span style="color: #000066;">)</span><span style="color: #000066;">;</span></span>
<span style="vertical-align:top"> </span>
<span style="vertical-align:top">        Out<span style="color: #000066;">.</span><span style="color: #006600;">Size</span> <span style="color: #000066;">=</span> sizeModifier <span style="color: #000066;">*</span></span>
<span style="vertical-align:top">                   proj<span style="color: #000066;">.</span><span style="color: #006600;">_m11</span> <span style="color: #000066;">/</span></span>
<span style="vertical-align:top">                   Out<span style="color: #000066;">.</span><span style="color: #006600;">position</span><span style="color: #000066;">.</span><span style="color: #006600;">w</span> <span style="color: #000066;">*</span></span>
<span style="vertical-align:top">                   screenHeight <span style="color: #000066;">/</span></span>
<span style="vertical-align:top">                   <span style="color: #0000ff;">2</span><span style="color: #000066;">;</span></span>
<span style="vertical-align:top"> </span>
<span style="vertical-align:top">        <span style="color: #000000; font-weight: bold;">return</span> Out<span style="color: #000066;">;</span></span>
<span style="vertical-align:top">    <span style="color: #000066;">}</span></span></pre>
</div>
</div>
</div>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p><span style="white-space:pre"></span>И, наконец, пиксельный шейдер 
отрисовывает частицу с определенным цветом. Можно использовать данные о 
времени жизни частицы для изменения ее цвета, к примеру, затухание через
 альфа канал или использовать одномерную текстуру, для раскрашивания 
частицы.</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<div class="rj_insertcode">
<div class="rj_insertcode_hlsl">
<div class="hlsl" style="background: #f8f8f8; width: 100%; border-collapse: collapse; border: #054b6e 1px solid;">
<pre style="margin:0; background:none; vertical-align:top; padding: 0px 4px; font-size: 12px;"><span style="vertical-align:top">    <span style="color: #000066; font-weight: bold;">float4</span> ApplyTexture<span style="color: #000066;">(</span>PS_INPUT <span style="color: #333399; font-weight: bold;">input</span><span style="color: #000066;">)</span> <span style="color: #000066;">:</span> <span style="color: #551111;">COLOR</span></span>
<span style="vertical-align:top">    <span style="color: #000066;">{</span></span>
<span style="vertical-align:top">         <span style="color: #000066; font-weight: bold;">float2</span> textureCoordinate<span style="color: #000066;">;</span></span>
<span style="vertical-align:top"> </span>
<span style="vertical-align:top">    <span style="color: #009900;">#ifdef XBOX</span></span>
<span style="vertical-align:top">        textureCoordinate <span style="color: #000066;">=</span> <span style="color: #993333; font-weight: bold;">abs</span><span style="color: #000066;">(</span><span style="color: #333399; font-weight: bold;">input</span><span style="color: #000066;">.</span><span style="color: #006600;">textureCoordinate</span><span style="color: #000066;">.</span><span style="color: #006600;">zw</span><span style="color: #000066;">)</span><span style="color: #000066;">;</span></span>
<span style="vertical-align:top">    <span style="color: #009900;">#else</span></span>
<span style="vertical-align:top">        textureCoordinate <span style="color: #000066;">=</span> <span style="color: #333399; font-weight: bold;">input</span><span style="color: #000066;">.</span><span style="color: #006600;">textureCoordinate</span><span style="color: #000066;">.</span><span style="color: #006600;">xy</span><span style="color: #000066;">;</span></span>
<span style="vertical-align:top">    <span style="color: #009900;">#endif</span></span>
<span style="vertical-align:top"> </span>
<span style="vertical-align:top">         <span style="color: #000066; font-weight: bold;">float4</span> col<span style="color: #000066;">=</span><span style="color: #993333; font-weight: bold;">tex2D</span><span style="color: #000066;">(</span>textureSampler<span style="color: #000066;">,</span></span>
<span style="vertical-align:top">                          textureCoordinate<span style="color: #000066;">)</span> <span style="color: #000066;">*</span> <span style="color: #333399; font-weight: bold;">input</span><span style="color: #000066;">.</span><span style="color: #006600;">Color</span><span style="color: #000066;">;</span></span>
<span style="vertical-align:top"> </span>
<span style="vertical-align:top">         <span style="color: #000000; font-weight: bold;">return</span> col<span style="color: #000066;">;</span></span>
<span style="vertical-align:top">    <span style="color: #000066;">}</span></span>
<span style="vertical-align:top"> </span>
<span style="vertical-align:top">    <span style="color: #333399; font-weight: bold;">technique</span> TransformAndTexture</span>
<span style="vertical-align:top">    <span style="color: #000066;">{</span></span>
<span style="vertical-align:top">        <span style="color: #333399; font-weight: bold;">pass</span> P0</span>
<span style="vertical-align:top">        <span style="color: #000066;">{</span></span>
<span style="vertical-align:top">            vertexShader <span style="color: #000066;">=</span> compile vs_3_0 Transform<span style="color: #000066;">(</span><span style="color: #000066;">)</span><span style="color: #000066;">;</span></span>
<span style="vertical-align:top">            pixelShader  <span style="color: #000066;">=</span> compile ps_3_0 ApplyTexture<span style="color: #000066;">(</span><span style="color: #000066;">)</span><span style="color: #000066;">;</span></span>
<span style="vertical-align:top">        <span style="color: #000066;">}</span></span>
<span style="vertical-align:top">    <span style="color: #000066;">}</span></span></pre>
</div>
</div>
</div>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p><span style="white-space:pre"></span>Теперь в папке Shaders создадим 
еще один файл шейдера ParticlePhysics.fx. На этот раз нам нужно четыре 
текстуры в шейдере. Временная текстура (temporaryMap) нужна при 
копировании данных из одной цели визуализации в другую. Текстуры 
positionMap и velocityMap содержат данные координат и скоростей частиц, 
randomMap содержит случайные данные, которые мы генерировали ранее.</p>
<p>&nbsp;</p>
<div class="rj_insertcode">
<div class="rj_insertcode_hlsl">
<div class="hlsl" style="background: #f8f8f8; width: 100%; border-collapse: collapse; border: #054b6e 1px solid;">
<pre style="margin:0; background:none; vertical-align:top; padding: 0px 4px; font-size: 12px;"><span style="vertical-align:top">    texture temporaryMap<span style="color: #000066;">;</span></span>
<span style="vertical-align:top">    sampler temporarySampler <span style="color: #000066;">:</span> register<span style="color: #000066;">(</span>s0<span style="color: #000066;">)</span>  <span style="color: #000066;">=</span> sampler_state</span>
<span style="vertical-align:top">    <span style="color: #000066;">{</span></span>
<span style="vertical-align:top">        Texture   <span style="color: #000066;">=</span> <span style="color: #000066;">&lt;</span>temporaryMap<span style="color: #000066;">&gt;;</span></span>
<span style="vertical-align:top"> </span>
<span style="vertical-align:top">        MipFilter <span style="color: #000066;">=</span> None<span style="color: #000066;">;</span></span>
<span style="vertical-align:top">        MinFilter <span style="color: #000066;">=</span> Point<span style="color: #000066;">;</span></span>
<span style="vertical-align:top">        MagFilter <span style="color: #000066;">=</span> Point<span style="color: #000066;">;</span></span>
<span style="vertical-align:top"> </span>
<span style="vertical-align:top">        AddressU  <span style="color: #000066;">=</span> Clamp<span style="color: #000066;">;</span></span>
<span style="vertical-align:top">        AddressV  <span style="color: #000066;">=</span> Clamp<span style="color: #000066;">;</span></span>
<span style="vertical-align:top">    <span style="color: #000066;">}</span><span style="color: #000066;">;</span></span>
<span style="vertical-align:top"> </span>
<span style="vertical-align:top">    texture positionMap<span style="color: #000066;">;</span></span>
<span style="vertical-align:top">    sampler positionSampler  <span style="color: #000066;">=</span> sampler_state</span>
<span style="vertical-align:top">    <span style="color: #000066;">{</span></span>
<span style="vertical-align:top">        Texture   <span style="color: #000066;">=</span> <span style="color: #000066;">&lt;</span>positionMap<span style="color: #000066;">&gt;;</span></span>
<span style="vertical-align:top"> </span>
<span style="vertical-align:top">        MipFilter <span style="color: #000066;">=</span> None<span style="color: #000066;">;</span></span>
<span style="vertical-align:top">        MinFilter <span style="color: #000066;">=</span> Point<span style="color: #000066;">;</span></span>
<span style="vertical-align:top">        MagFilter <span style="color: #000066;">=</span> Point<span style="color: #000066;">;</span></span>
<span style="vertical-align:top"> </span>
<span style="vertical-align:top">        AddressU  <span style="color: #000066;">=</span> Clamp<span style="color: #000066;">;</span></span>
<span style="vertical-align:top">        AddressV  <span style="color: #000066;">=</span> Clamp<span style="color: #000066;">;</span></span>
<span style="vertical-align:top">    <span style="color: #000066;">}</span><span style="color: #000066;">;</span></span>
<span style="vertical-align:top"> </span>
<span style="vertical-align:top">    texture velocityMap<span style="color: #000066;">;</span></span>
<span style="vertical-align:top">    sampler velocitySampler <span style="color: #000066;">=</span> sampler_state</span>
<span style="vertical-align:top">    <span style="color: #000066;">{</span></span>
<span style="vertical-align:top">        Texture   <span style="color: #000066;">=</span> <span style="color: #000066;">&lt;</span>velocityMap<span style="color: #000066;">&gt;;</span></span>
<span style="vertical-align:top"> </span>
<span style="vertical-align:top">        MipFilter <span style="color: #000066;">=</span> None<span style="color: #000066;">;</span></span>
<span style="vertical-align:top">        MinFilter <span style="color: #000066;">=</span> Point<span style="color: #000066;">;</span></span>
<span style="vertical-align:top">        MagFilter <span style="color: #000066;">=</span> Point<span style="color: #000066;">;</span></span>
<span style="vertical-align:top"> </span>
<span style="vertical-align:top">        AddressU  <span style="color: #000066;">=</span> Clamp<span style="color: #000066;">;</span></span>
<span style="vertical-align:top">        AddressV  <span style="color: #000066;">=</span> Clamp<span style="color: #000066;">;</span></span>
<span style="vertical-align:top">    <span style="color: #000066;">}</span><span style="color: #000066;">;</span></span>
<span style="vertical-align:top"> </span>
<span style="vertical-align:top">    texture randomMap<span style="color: #000066;">;</span></span>
<span style="vertical-align:top">    sampler randomSampler <span style="color: #000066;">:</span> register<span style="color: #000066;">(</span>s0<span style="color: #000066;">)</span> <span style="color: #000066;">=</span> sampler_state</span>
<span style="vertical-align:top">    <span style="color: #000066;">{</span></span>
<span style="vertical-align:top">        Texture   <span style="color: #000066;">=</span> <span style="color: #000066;">&lt;</span>randomMap<span style="color: #000066;">&gt;;</span></span>
<span style="vertical-align:top"> </span>
<span style="vertical-align:top">        MipFilter <span style="color: #000066;">=</span> None<span style="color: #000066;">;</span></span>
<span style="vertical-align:top">        MinFilter <span style="color: #000066;">=</span> Point<span style="color: #000066;">;</span></span>
<span style="vertical-align:top">        MagFilter <span style="color: #000066;">=</span> Point<span style="color: #000066;">;</span></span>
<span style="vertical-align:top"> </span>
<span style="vertical-align:top">        AddressU  <span style="color: #000066;">=</span> wrap<span style="color: #000066;">;</span></span>
<span style="vertical-align:top">        AddressV  <span style="color: #000066;">=</span> wrap<span style="color: #000066;">;</span></span>
<span style="vertical-align:top">    <span style="color: #000066;">}</span><span style="color: #000066;">;</span></span></pre>
</div>
</div>
</div>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p><span style="white-space:pre"></span>Нам нужна переменная, которая 
будет хранить максимальное время жизни частицы. Если помните, текстура 
содержащая данные о координатах имеет по 4 значения float для каждой 
частицы, три – это пространственные координаты, а четверное значение – 
время жизни частицы. Сброс значений осуществляется в двух пиксельных 
шейдерах, они устанавливают позицию в новое исходное положение, время 
жизни задается случайно в диапазоне от 0 до maxLife, а начальная 
скорость в 0. Странное значение в шейдере ResetPositionPS (10.2484) 
случайная величина, взятая от фонаря, введена для того, чтобы немного 
внести непредсказуемости и хаоса в нашу системы частиц.</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<div class="rj_insertcode">
<div class="rj_insertcode_hlsl">
<div class="hlsl" style="background: #f8f8f8; width: 100%; border-collapse: collapse; border: #054b6e 1px solid;">
<pre style="margin:0; background:none; vertical-align:top; padding: 0px 4px; font-size: 12px;"><span style="vertical-align:top">    <span style="color: #000066; font-weight: bold;">float</span> maxLife <span style="color: #000066;">=</span> 5<span style="color: #000066;">.</span>0f<span style="color: #000066;">;</span></span>
<span style="vertical-align:top"> </span>
<span style="vertical-align:top">    <span style="color: #000066; font-weight: bold;">float3</span> generateNewPosition<span style="color: #000066;">(</span><span style="color: #000066; font-weight: bold;">float2</span> uv<span style="color: #000066;">)</span></span>
<span style="vertical-align:top">    <span style="color: #000066;">{</span></span>
<span style="vertical-align:top">            <span style="color: #000066; font-weight: bold;">float4</span> rand <span style="color: #000066;">=</span>  <span style="color: #993333; font-weight: bold;">tex2D</span><span style="color: #000066;">(</span>randomSampler<span style="color: #000066;">,</span> uv<span style="color: #000066;">)</span><span style="color: #000066;">;</span></span>
<span style="vertical-align:top"> </span>
<span style="vertical-align:top">            <span style="color: #000000; font-weight: bold;">return</span> <span style="color: #000066; font-weight: bold;">float3</span><span style="color: #000066;">(</span>rand<span style="color: #000066;">.</span><span style="color: #006600;">x</span> <span style="color: #000066;">*</span> <span style="color: #0000ff;">1024</span><span style="color: #000066;">,</span> <span style="color: #0000ff;">250</span><span style="color: #000066;">,</span> rand<span style="color: #000066;">.</span><span style="color: #006600;">y</span> <span style="color: #000066;">*</span> <span style="color: #0000ff;">1024</span><span style="color: #000066;">)</span><span style="color: #000066;">;</span></span>
<span style="vertical-align:top">    <span style="color: #000066;">}</span></span>
<span style="vertical-align:top"> </span>
<span style="vertical-align:top">    <span style="color: #000066; font-weight: bold;">float4</span> ResetPositionsPS<span style="color: #000066;">(</span><span style="color: #333399; font-weight: bold;">in</span> <span style="color: #000066; font-weight: bold;">float2</span> uv <span style="color: #000066;">:</span> <span style="color: #551111;">TEXCOORD0</span><span style="color: #000066;">)</span> <span style="color: #000066;">:</span> <span style="color: #551111;">COLOR</span></span>
<span style="vertical-align:top">    <span style="color: #000066;">{</span></span>
<span style="vertical-align:top">            <span style="color: #000000; font-weight: bold;">return</span> <span style="color: #000066; font-weight: bold;">float4</span><span style="color: #000066;">(</span>generateNewPosition<span style="color: #000066;">(</span>uv<span style="color: #000066;">)</span><span style="color: #000066;">,</span> </span>
<span style="vertical-align:top">                          maxLife <span style="color: #000066;">*</span> frac<span style="color: #000066;">(</span> <span style="color: #993333; font-weight: bold;">tex2D</span><span style="color: #000066;">(</span> randomSampler<span style="color: #000066;">,</span></span>
<span style="vertical-align:top">                                                 <span style="color: #0000ff;">10.2484</span> <span style="color: #000066;">*</span> uv<span style="color: #000066;">)</span><span style="color: #000066;">.</span><span style="color: #006600;">w</span><span style="color: #000066;">)</span><span style="color: #000066;">)</span><span style="color: #000066;">;</span></span>
<span style="vertical-align:top">    <span style="color: #000066;">}</span></span>
<span style="vertical-align:top"> </span>
<span style="vertical-align:top">    <span style="color: #000066; font-weight: bold;">float4</span> ResetVelocitiesPS<span style="color: #000066;">(</span><span style="color: #333399; font-weight: bold;">in</span> <span style="color: #000066; font-weight: bold;">float2</span> uv <span style="color: #000066;">:</span> <span style="color: #551111;">TEXCOORD0</span><span style="color: #000066;">)</span> <span style="color: #000066;">:</span> <span style="color: #551111;">COLOR</span></span>
<span style="vertical-align:top">    <span style="color: #000066;">{</span></span>
<span style="vertical-align:top">            <span style="color: #000000; font-weight: bold;">return</span> <span style="color: #000066; font-weight: bold;">float4</span><span style="color: #000066;">(</span><span style="color: #0000ff;">0</span><span style="color: #000066;">,</span><span style="color: #0000ff;">0</span><span style="color: #000066;">,</span><span style="color: #0000ff;">0</span><span style="color: #000066;">,</span><span style="color: #0000ff;">0</span><span style="color: #000066;">)</span><span style="color: #000066;">;</span></span>
<span style="vertical-align:top">    <span style="color: #000066;">}</span></span>
<span style="vertical-align:top"> </span>
<span style="vertical-align:top">    <span style="color: #333399; font-weight: bold;">technique</span> ResetPositions</span>
<span style="vertical-align:top">    <span style="color: #000066;">{</span></span>
<span style="vertical-align:top">        <span style="color: #333399; font-weight: bold;">pass</span> P0</span>
<span style="vertical-align:top">        <span style="color: #000066;">{</span></span>
<span style="vertical-align:top">            pixelShader  <span style="color: #000066;">=</span> compile ps_3_0 ResetPositionsPS<span style="color: #000066;">(</span><span style="color: #000066;">)</span><span style="color: #000066;">;</span></span>
<span style="vertical-align:top">        <span style="color: #000066;">}</span></span>
<span style="vertical-align:top">    <span style="color: #000066;">}</span></span>
<span style="vertical-align:top"> </span>
<span style="vertical-align:top">    <span style="color: #333399; font-weight: bold;">technique</span> ResetVelocities</span>
<span style="vertical-align:top">    <span style="color: #000066;">{</span></span>
<span style="vertical-align:top">        <span style="color: #333399; font-weight: bold;">pass</span> P0</span>
<span style="vertical-align:top">        <span style="color: #000066;">{</span></span>
<span style="vertical-align:top">            pixelShader  <span style="color: #000066;">=</span> compile ps_3_0 ResetVelocitiesPS<span style="color: #000066;">(</span><span style="color: #000066;">)</span><span style="color: #000066;">;</span></span>
<span style="vertical-align:top">        <span style="color: #000066;">}</span></span>
<span style="vertical-align:top">    <span style="color: #000066;">}</span></span></pre>
</div>
</div>
</div>
<p><span style="white-space: pre;"></span>В функции generateNewPosition,
 мы установили высоту 250, так как реализовываем эффект «падения 
частиц». Реализация этой функции может быть переписана, как вашей душе 
угодно, к примеру, если мы заменим реализацию на следующую, то система 
частиц будет описана сферой.</p>
<p>&nbsp;</p>
<div class="rj_insertcode">
<div class="rj_insertcode_hlsl">
<div class="hlsl" style="background: #f8f8f8; width: 100%; border-collapse: collapse; border: #054b6e 1px solid;">
<pre style="margin:0; background:none; vertical-align:top; padding: 0px 4px; font-size: 12px;"><span style="vertical-align:top">    <span style="color: #000066; font-weight: bold;">float3</span> generateNewPosition<span style="color: #000066;">(</span><span style="color: #000066; font-weight: bold;">float2</span> uv<span style="color: #000066;">)</span></span>
<span style="vertical-align:top">    <span style="color: #000066;">{</span></span>
<span style="vertical-align:top">        <span style="color: #000066; font-weight: bold;">float3</span> rand <span style="color: #000066;">=</span> <span style="color: #993333; font-weight: bold;">tex2D</span><span style="color: #000066;">(</span>randomSampler<span style="color: #000066;">,</span> uv<span style="color: #000066;">)</span><span style="color: #000066;">;</span></span>
<span style="vertical-align:top"> </span>
<span style="vertical-align:top">        rand <span style="color: #000066;">=</span> <span style="color: #993333; font-weight: bold;">normalize</span><span style="color: #000066;">(</span>rand<span style="color: #000066;">)</span><span style="color: #000066;">;</span></span>
<span style="vertical-align:top"> </span>
<span style="vertical-align:top">        <span style="color: #000000; font-weight: bold;">return</span> <span style="color: #000066; font-weight: bold;">float3</span><span style="color: #000066;">(</span>rand<span style="color: #000066;">.</span><span style="color: #006600;">x</span> <span style="color: #000066;">*</span> <span style="color: #0000ff;">128</span><span style="color: #000066;">,</span></span>
<span style="vertical-align:top">                      rand<span style="color: #000066;">.</span><span style="color: #006600;">y</span> <span style="color: #000066;">*</span> <span style="color: #0000ff;">128</span><span style="color: #000066;">,</span></span>
<span style="vertical-align:top">                      rand<span style="color: #000066;">.</span><span style="color: #006600;">z</span> <span style="color: #000066;">*</span> <span style="color: #0000ff;">128</span><span style="color: #000066;">)</span><span style="color: #000066;">;</span></span>
<span style="vertical-align:top">    <span style="color: #000066;">}</span></span></pre>
</div>
</div>
</div>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p><span style="white-space: pre;"></span>В нашем случае мы остановимся на реализации «плоскости».</p>
<p><span style="white-space: pre;"></span>Как упоминалось ранее, нам 
необходим функционал, позволяющий передавать данные между несколькими 
целями визуализации, как раз этим у нас будет заниматься следующий 
пиксельный шейдер.</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<div class="rj_insertcode">
<div class="rj_insertcode_hlsl">
<div class="hlsl" style="background: #f8f8f8; width: 100%; border-collapse: collapse; border: #054b6e 1px solid;">
<pre style="margin:0; background:none; vertical-align:top; padding: 0px 4px; font-size: 12px;"><span style="vertical-align:top">    <span style="color: #000066; font-weight: bold;">float4</span> CopyTexturePS<span style="color: #000066;">(</span><span style="color: #333399; font-weight: bold;">in</span> <span style="color: #000066; font-weight: bold;">float2</span> uv <span style="color: #000066;">:</span> <span style="color: #551111;">TEXCOORD0</span><span style="color: #000066;">)</span> <span style="color: #000066;">:</span> <span style="color: #551111;">COLOR</span></span>
<span style="vertical-align:top">    <span style="color: #000066;">{</span></span>
<span style="vertical-align:top">        <span style="color: #000000; font-weight: bold;">return</span> <span style="color: #993333; font-weight: bold;">tex2D</span><span style="color: #000066;">(</span>temporarySampler<span style="color: #000066;">,</span>uv<span style="color: #000066;">)</span><span style="color: #000066;">;</span></span>
<span style="vertical-align:top">    <span style="color: #000066;">}</span></span>
<span style="vertical-align:top"> </span>
<span style="vertical-align:top">    <span style="color: #333399; font-weight: bold;">technique</span> CopyTexture</span>
<span style="vertical-align:top">    <span style="color: #000066;">{</span></span>
<span style="vertical-align:top">        <span style="color: #333399; font-weight: bold;">pass</span> P0</span>
<span style="vertical-align:top">        <span style="color: #000066;">{</span></span>
<span style="vertical-align:top">            pixelShader <span style="color: #000066;">=</span> compile ps_3_0 CopyTexturePS<span style="color: #000066;">(</span><span style="color: #000066;">)</span><span style="color: #000066;">;</span></span>
<span style="vertical-align:top">        <span style="color: #000066;">}</span></span>
<span style="vertical-align:top">    <span style="color: #000066;">}</span></span></pre>
</div>
</div>
</div>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p><span style="white-space: pre;"></span>Для того чтобы анимация частиц
 у нас не зависела от частоты кадров, функция обновления должна быть в 
курсе о прошедшем времени с момента последнего обновления. Код 
обновления координат:</p>
<p>&nbsp;</p>
<div class="rj_insertcode">
<div class="rj_insertcode_hlsl">
<div class="hlsl" style="background: #f8f8f8; width: 100%; border-collapse: collapse; border: #054b6e 1px solid;">
<pre style="margin:0; background:none; vertical-align:top; padding: 0px 4px; font-size: 12px;"><span style="vertical-align:top">    <span style="color: #000066; font-weight: bold;">float</span> elapsedTime <span style="color: #000066;">=</span> 0<span style="color: #000066;">.</span>0f<span style="color: #000066;">;</span></span>
<span style="vertical-align:top"> </span>
<span style="vertical-align:top">    <span style="color: #000066; font-weight: bold;">float4</span> UpdatePositionsPS<span style="color: #000066;">(</span><span style="color: #333399; font-weight: bold;">in</span> <span style="color: #000066; font-weight: bold;">float2</span> uv <span style="color: #000066;">:</span> <span style="color: #551111;">TEXCOORD0</span><span style="color: #000066;">)</span> <span style="color: #000066;">:</span> <span style="color: #551111;">COLOR</span></span>
<span style="vertical-align:top">    <span style="color: #000066;">{</span></span>
<span style="vertical-align:top">        <span style="color: #000066; font-weight: bold;">float4</span> pos <span style="color: #000066;">=</span> <span style="color: #993333; font-weight: bold;">tex2D</span><span style="color: #000066;">(</span>positionSampler<span style="color: #000066;">,</span> uv<span style="color: #000066;">)</span><span style="color: #000066;">;</span></span>
<span style="vertical-align:top"> </span>
<span style="vertical-align:top">        <span style="color: #666666; font-style: italic;">// проверка, жива частица или нет</span></span>
<span style="vertical-align:top">        <span style="color: #000000; font-weight: bold;">if</span> <span style="color: #000066;">(</span>pos<span style="color: #000066;">.</span><span style="color: #006600;">w</span> <span style="color: #000066;">&gt;=</span> maxLife<span style="color: #000066;">)</span></span>
<span style="vertical-align:top">        <span style="color: #000066;">{</span></span>
<span style="vertical-align:top">            <span style="color: #666666; font-style: italic;">// если частица умерла, мы должны ее воскресить</span></span>
<span style="vertical-align:top">            <span style="color: #666666; font-style: italic;">// рестартуем время жизни</span></span>
<span style="vertical-align:top">            pos<span style="color: #000066;">.</span><span style="color: #006600;">w</span> <span style="color: #000066;">=</span> <span style="color: #0000ff;">0</span><span style="color: #000066;">;</span></span>
<span style="vertical-align:top"> </span>
<span style="vertical-align:top">            <span style="color: #666666; font-style: italic;">// рассчитываем новое местоположение</span></span>
<span style="vertical-align:top">            pos<span style="color: #000066;">.</span><span style="color: #006600;">xyz</span> <span style="color: #000066;">=</span> generateNewPosition<span style="color: #000066;">(</span>uv<span style="color: #000066;">)</span><span style="color: #000066;">;</span></span>
<span style="vertical-align:top">        <span style="color: #000066;">}</span></span>
<span style="vertical-align:top">        <span style="color: #000000; font-weight: bold;">else</span></span>
<span style="vertical-align:top">        <span style="color: #000066;">{</span></span>
<span style="vertical-align:top">            <span style="color: #666666; font-style: italic;">// обновляем координаты частицы и время жизни</span></span>
<span style="vertical-align:top">            <span style="color: #000066; font-weight: bold;">float4</span> velocity <span style="color: #000066;">=</span> <span style="color: #993333; font-weight: bold;">tex2D</span><span style="color: #000066;">(</span>velocitySampler<span style="color: #000066;">,</span> uv<span style="color: #000066;">)</span><span style="color: #000066;">;</span></span>
<span style="vertical-align:top"> </span>
<span style="vertical-align:top">            pos<span style="color: #000066;">.</span><span style="color: #006600;">xyz</span> <span style="color: #000066;">+=</span> elapsedTime <span style="color: #000066;">*</span> velocity<span style="color: #000066;">;</span></span>
<span style="vertical-align:top"> </span>
<span style="vertical-align:top">            pos<span style="color: #000066;">.</span><span style="color: #006600;">w</span> <span style="color: #000066;">+=</span> elapsedTime<span style="color: #000066;">;</span></span>
<span style="vertical-align:top">        <span style="color: #000066;">}</span></span>
<span style="vertical-align:top">        <span style="color: #000000; font-weight: bold;">return</span> pos<span style="color: #000066;">;</span></span>
<span style="vertical-align:top">    <span style="color: #000066;">}</span></span></pre>
</div>
</div>
</div>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p><span style="white-space: pre;"></span>В процессе обновления сначала 
мы сравниваем, не превышает ли время жизни частицы максимально 
допустимое значение, если превышает, то обнуляем его и генерируем новое 
местоположение для частицы. Если время жизни превышает максимальное 
значение, устанавливаем новую случайную скорость, короче обновлять 
скорости можете, как пожелаете. В этом месте вы можете переписывать код 
под ваше собственное поведение частиц, для реализации различных 
эффектов. К примеру, в этом месте можно реализовать столкновения 
(collisions) или действие различных сил (гравитация, генератор частиц, 
ветер), передаваемых через параметры шейдера. Далее будет рассмотрен 
пример реализации.</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<div class="rj_insertcode">
<div class="rj_insertcode_hlsl">
<div class="hlsl" style="background: #f8f8f8; width: 100%; border-collapse: collapse; border: #054b6e 1px solid;">
<pre style="margin: 0; background: none; vertical-align: top; padding: 0px 4px; font-size: 12px;"><span style="vertical-align: top;">    <span style="color: #000066; font-weight: bold;">float4</span> UpdateVelocitiesPS<span style="color: #000066;">(</span><span style="color: #333399; font-weight: bold;">in</span> <span style="color: #000066; font-weight: bold;">float2</span> uv <span style="color: #000066;">:</span> <span style="color: #551111;">TEXCOORD0</span><span style="color: #000066;">)</span> <span style="color: #000066;">:</span> <span style="color: #551111;">COLOR</span></span>
<span style="vertical-align: top;">    <span style="color: #000066;">{</span></span>
<span style="vertical-align: top;">        <span style="color: #000066; font-weight: bold;">float4</span> velocity <span style="color: #000066;">=</span> <span style="color: #993333; font-weight: bold;">tex2D</span><span style="color: #000066;">(</span>velocitySampler<span style="color: #000066;">,</span> uv<span style="color: #000066;">)</span><span style="color: #000066;">;</span></span>
<span style="vertical-align: top;">  </span>
<span style="vertical-align: top;">        <span style="color: #000066; font-weight: bold;">float4</span> pos      <span style="color: #000066;">=</span> <span style="color: #993333; font-weight: bold;">tex2D</span><span style="color: #000066;">(</span>positionSampler<span style="color: #000066;">,</span> uv<span style="color: #000066;">)</span><span style="color: #000066;">;</span></span>
<span style="vertical-align: top;">        <span style="color: #000000; font-weight: bold;">if</span> <span style="color: #000066;">(</span>pos<span style="color: #000066;">.</span><span style="color: #006600;">w</span> <span style="color: #000066;">&gt;=</span> maxLife<span style="color: #000066;">)</span></span>
<span style="vertical-align: top;">        <span style="color: #000066;">{</span></span>
<span style="vertical-align: top;">            <span style="color: #666666; font-style: italic;">//сбор скорости по псевдослучайному значению</span></span>
<span style="vertical-align: top;">            <span style="color: #000066; font-weight: bold;">float4</span> rand  <span style="color: #000066;">=</span> <span style="color: #993333; font-weight: bold;">tex2D</span><span style="color: #000066;">(</span>randomSampler<span style="color: #000066;">,</span></span>
<span style="vertical-align: top;">                                 uv<span style="color: #000066;">)</span><span style="color: #000066;">;</span></span>
<span style="vertical-align: top;"> </span>
<span style="vertical-align: top;">            <span style="color: #000066; font-weight: bold;">float4</span> rand2 <span style="color: #000066;">=</span> <span style="color: #993333; font-weight: bold;">tex2D</span><span style="color: #000066;">(</span>randomSampler<span style="color: #000066;">,</span></span>
<span style="vertical-align: top;">                                 uv <span style="color: #000066;">+</span> <span style="color: #000066; font-weight: bold;">float2</span><span style="color: #000066;">(</span>rand<span style="color: #000066;">.</span><span style="color: #006600;">y</span><span style="color: #000066;">,</span>rand<span style="color: #000066;">.</span><span style="color: #006600;">w</span><span style="color: #000066;">)</span><span style="color: #000066;">)</span><span style="color: #000066;">;</span></span>
<span style="vertical-align: top;"> </span>
<span style="vertical-align: top;">            velocity<span style="color: #000066;">.</span><span style="color: #006600;">xyz</span> <span style="color: #000066;">=</span> rand2<span style="color: #000066;">.</span><span style="color: #006600;">xyz</span> <span style="color: #000066;">*</span> <span style="color: #0000ff;">8</span> <span style="color: #000066;">+</span> <span style="color: #0000ff;">10.0</span> <span style="color: #000066;">*</span> rand<span style="color: #000066;">.</span><span style="color: #006600;">xyz</span><span style="color: #000066;">;</span></span>
<span style="vertical-align: top;">        <span style="color: #000066;">}</span></span>
<span style="vertical-align: top;">        <span style="color: #000000; font-weight: bold;">else</span></span>
<span style="vertical-align: top;">        <span style="color: #000066;">{</span></span>
<span style="vertical-align: top;">            <span style="color: #666666; font-style: italic;">//гравитационное ускорение</span></span>
<span style="vertical-align: top;">            <span style="color: #666666; font-style: italic;">//подлежит модификации для ваших собственных эффектов</span></span>
<span style="vertical-align: top;">            velocity<span style="color: #000066;">.</span><span style="color: #006600;">y</span> <span style="color: #000066;">-=</span> <span style="color: #0000ff;">20.0</span> <span style="color: #000066;">*</span> elapsedTime<span style="color: #000066;">;</span></span>
<span style="vertical-align: top;">        <span style="color: #000066;">}</span></span>
<span style="vertical-align: top;">        <span style="color: #000000; font-weight: bold;">return</span> velocity<span style="color: #000066;">;</span></span>
<span style="vertical-align: top;">    <span style="color: #000066;">}</span></span></pre>
</div>
</div>
</div>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p><span style="white-space: pre;"></span>Все что нам остается сделать, это добавить техники и закончить с написанием HLSL.</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<div class="rj_insertcode">
<div class="rj_insertcode_hlsl">
<div class="hlsl" style="background: #f8f8f8; width: 100%; border-collapse: collapse; border: #054b6e 1px solid;">
<pre style="margin:0; background:none; vertical-align:top; padding: 0px 4px; font-size: 12px;"><span style="vertical-align:top">    <span style="color: #333399; font-weight: bold;">technique</span> UpdatePositions</span>
<span style="vertical-align:top">    <span style="color: #000066;">{</span></span>
<span style="vertical-align:top">        <span style="color: #333399; font-weight: bold;">pass</span> P0</span>
<span style="vertical-align:top">        <span style="color: #000066;">{</span></span>
<span style="vertical-align:top">            pixelShader <span style="color: #000066;">=</span> compile ps_3_0 UpdatePositionsPS<span style="color: #000066;">(</span><span style="color: #000066;">)</span><span style="color: #000066;">;</span></span>
<span style="vertical-align:top">        <span style="color: #000066;">}</span></span>
<span style="vertical-align:top">    <span style="color: #000066;">}</span></span>
<span style="vertical-align:top"> </span>
<span style="vertical-align:top">    <span style="color: #333399; font-weight: bold;">technique</span> UpdateVelocities</span>
<span style="vertical-align:top">    <span style="color: #000066;">{</span></span>
<span style="vertical-align:top">        <span style="color: #333399; font-weight: bold;">pass</span> P0</span>
<span style="vertical-align:top">        <span style="color: #000066;">{</span></span>
<span style="vertical-align:top">            pixelShader <span style="color: #000066;">=</span> compile ps_3_0 UpdateVelocitiesPS<span style="color: #000066;">(</span><span style="color: #000066;">)</span><span style="color: #000066;">;</span></span>
<span style="vertical-align:top">        <span style="color: #000066;">}</span></span>
<span style="vertical-align:top">    <span style="color: #000066;">}</span></span></pre>
</div>
</div>
</div>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p><span style="white-space: pre;"></span>Возвращаемся к написаю C# кода. Давайте загрузим шейдеры в соответствующие переменные.</p>
<p>&nbsp;</p>
<div class="rj_insertcode">
<div class="rj_insertcode_csharp">
<div class="csharp" style="background: #f8f8f8; width: 100%; border-collapse: collapse; border: #054b6e 1px solid;">
<pre style="margin:0; background:none; vertical-align:top; padding: 0px 4px; font-size: 12px;"><span style="vertical-align:top">    <span style="color: #0600FF;">protected</span> <span style="color: #0600FF;">override</span> <span style="color: #0600FF;">void</span> LoadGraphicsContent<span style="color: #000000;">(</span><span style="color: #FF0000;">bool</span> loadAllContent<span style="color: #000000;">)</span></span>
<span style="vertical-align:top">    <span style="color: #000000;">{</span></span>
<span style="vertical-align:top">        <span style="color: #000000;">[</span>...<span style="color: #000000;">]</span></span>
<span style="vertical-align:top"> </span>
<span style="vertical-align:top">        physicsEffect <span style="color: #008000;">=</span> content.<span style="color: #0000FF;">Load</span><span style="color: #008000;">&lt;</span>Effect<span style="color: #008000;">&gt;</span><span style="color: #000000;">(</span><span style="color: #666666;">"Shaders<span style="color: #008080; font-weight: bold;">\\</span>ParticlePhysics"</span><span style="color: #000000;">)</span><span style="color: #008000;">;</span></span>
<span style="vertical-align:top">        renderParticleEffect <span style="color: #008000;">=</span> content.<span style="color: #0000FF;">Load</span><span style="color: #008000;">&lt;</span>Effect<span style="color: #008000;">&gt;</span><span style="color: #000000;">(</span><span style="color: #666666;">"Shaders<span style="color: #008080; font-weight: bold;">\\</span>Particle"</span><span style="color: #000000;">)</span><span style="color: #008000;">;</span></span>
<span style="vertical-align:top">    <span style="color: #000000;">}</span></span></pre>
</div>
</div>
</div>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p><span style="white-space: pre;"></span>Так как мы очень часть будем 
использовать техники шейдера ParticlePhysics.fx то вынесем их вызов в 
отдельный метод. В качестве параметров будем передавать имя используемой
 техники и цель визуализации, в которую необходимо записать результат. 
Мы переключаем технику, записываем данные во временную цель 
визуализации, затем используя технику «CopyTexture» передаем данные в 
необходимую цель визуализации. Если необходимо сбросить данные физики 
(флаг isPhysicsReset установлен в значение false), мы не можем вызывать 
метод positionRT.GetTexture(), так как это приведет к генерации ошибки, к
 примеру, если была потеря графического устройства, в этом случае цель 
визуализации просто очищается.</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<div class="rj_insertcode">
<div class="rj_insertcode_csharp">
<div class="csharp" style="background: #f8f8f8; width: 100%; border-collapse: collapse; border: #054b6e 1px solid;">
<pre style="margin:0; background:none; vertical-align:top; padding: 0px 4px; font-size: 12px;"><span style="vertical-align:top">        <span style="color: #0600FF;">private</span> <span style="color: #0600FF;">void</span> DoPhysicsPass<span style="color: #000000;">(</span><span style="color: #FF0000;">string</span> technique, RenderTarget2D resultTarget<span style="color: #000000;">)</span></span>
<span style="vertical-align:top">        <span style="color: #000000;">{</span></span>
<span style="vertical-align:top">            RenderTarget2D oldRT <span style="color: #008000;">=</span> graphics.<span style="color: #0000FF;">GraphicsDevice</span>.<span style="color: #0000FF;">GetRenderTarget</span><span style="color: #000000;">(</span><span style="color: #FF0000;">0</span><span style="color: #000000;">)</span> <span style="color: #0600FF;">as</span> RenderTarget2D<span style="color: #008000;">;</span></span>
<span style="vertical-align:top">            DepthStencilBuffer oldDS <span style="color: #008000;">=</span> graphics.<span style="color: #0000FF;">GraphicsDevice</span>.<span style="color: #0000FF;">DepthStencilBuffer</span><span style="color: #008000;">;</span></span>
<span style="vertical-align:top"> </span>
<span style="vertical-align:top">            graphics.<span style="color: #0000FF;">GraphicsDevice</span>.<span style="color: #0000FF;">DepthStencilBuffer</span> <span style="color: #008000;">=</span> simulationDepthBuffer<span style="color: #008000;">;</span></span>
<span style="vertical-align:top">            graphics.<span style="color: #0000FF;">GraphicsDevice</span>.<span style="color: #0000FF;">SetRenderTarget</span><span style="color: #000000;">(</span><span style="color: #FF0000;">0</span>, temporaryRT<span style="color: #000000;">)</span><span style="color: #008000;">;</span></span>
<span style="vertical-align:top"> </span>
<span style="vertical-align:top">            graphics.<span style="color: #0000FF;">GraphicsDevice</span>.<span style="color: #0000FF;">Clear</span><span style="color: #000000;">(</span>ClearOptions.<span style="color: #0000FF;">Target</span> <span style="color: #008000;">|</span> ClearOptions.<span style="color: #0000FF;">DepthBuffer</span>,</span>
<span style="vertical-align:top">                              Color.<span style="color: #0000FF;">White</span>, <span style="color: #FF0000;">1</span>, <span style="color: #FF0000;">0</span><span style="color: #000000;">)</span><span style="color: #008000;">;</span></span>
<span style="vertical-align:top">            spriteBatch.<span style="color: #0000FF;">Begin</span><span style="color: #000000;">(</span>SpriteBlendMode.<span style="color: #0000FF;">None</span>, SpriteSortMode.<span style="color: #0000FF;">Immediate</span>, SaveStateMode.<span style="color: #0000FF;">None</span><span style="color: #000000;">)</span><span style="color: #008000;">;</span></span>
<span style="vertical-align:top">            physicsEffect.<span style="color: #0000FF;">CurrentTechnique</span> <span style="color: #008000;">=</span> physicsEffect.<span style="color: #0000FF;">Techniques</span><span style="color: #000000;">[</span>technique<span style="color: #000000;">]</span><span style="color: #008000;">;</span></span>
<span style="vertical-align:top">            physicsEffect.<span style="color: #0000FF;">Begin</span><span style="color: #000000;">(</span><span style="color: #000000;">)</span><span style="color: #008000;">;</span></span>
<span style="vertical-align:top"> </span>
<span style="vertical-align:top">            <span style="color: #0600FF;">if</span> <span style="color: #000000;">(</span>isPhysicsReset<span style="color: #000000;">)</span></span>
<span style="vertical-align:top">            <span style="color: #000000;">{</span></span>
<span style="vertical-align:top">                physicsEffect.<span style="color: #0000FF;">Parameters</span><span style="color: #000000;">[</span><span style="color: #666666;">"positionMap"</span><span style="color: #000000;">]</span>.<span style="color: #0000FF;">SetValue</span><span style="color: #000000;">(</span>positionRT.<span style="color: #0000FF;">GetTexture</span><span style="color: #000000;">(</span><span style="color: #000000;">)</span><span style="color: #000000;">)</span><span style="color: #008000;">;</span></span>
<span style="vertical-align:top"> </span>
<span style="vertical-align:top">                physicsEffect.<span style="color: #0000FF;">Parameters</span><span style="color: #000000;">[</span><span style="color: #666666;">"velocityMap"</span><span style="color: #000000;">]</span>.<span style="color: #0000FF;">SetValue</span><span style="color: #000000;">(</span>velocityRT.<span style="color: #0000FF;">GetTexture</span><span style="color: #000000;">(</span><span style="color: #000000;">)</span><span style="color: #000000;">)</span><span style="color: #008000;">;</span></span>
<span style="vertical-align:top">            <span style="color: #000000;">}</span></span>
<span style="vertical-align:top"> </span>
<span style="vertical-align:top">            physicsEffect.<span style="color: #0000FF;">CurrentTechnique</span>.<span style="color: #0000FF;">Passes</span><span style="color: #000000;">[</span><span style="color: #FF0000;">0</span><span style="color: #000000;">]</span>.<span style="color: #0000FF;">Begin</span><span style="color: #000000;">(</span><span style="color: #000000;">)</span><span style="color: #008000;">;</span></span>
<span style="vertical-align:top"> </span>
<span style="vertical-align:top">            spriteBatch.<span style="color: #0000FF;">Draw</span><span style="color: #000000;">(</span>randomTexture,</span>
<span style="vertical-align:top">                                <a href="http://www.google.com/search?q=new+msdn.microsoft.com"><span style="color: #008000;">new</span></a> Rectangle<span style="color: #000000;">(</span><span style="color: #FF0000;">0</span>, <span style="color: #FF0000;">0</span>, particleCount,particleCount<span style="color: #000000;">)</span>,</span>
<span style="vertical-align:top">                                Color.<span style="color: #0000FF;">White</span><span style="color: #000000;">)</span><span style="color: #008000;">;</span></span>
<span style="vertical-align:top"> </span>
<span style="vertical-align:top">            physicsEffect.<span style="color: #0000FF;">CurrentTechnique</span>.<span style="color: #0000FF;">Passes</span><span style="color: #000000;">[</span><span style="color: #FF0000;">0</span><span style="color: #000000;">]</span>.<span style="color: #0000FF;">End</span><span style="color: #000000;">(</span><span style="color: #000000;">)</span><span style="color: #008000;">;</span></span>
<span style="vertical-align:top">            physicsEffect.<span style="color: #0000FF;">End</span><span style="color: #000000;">(</span><span style="color: #000000;">)</span><span style="color: #008000;">;</span></span>
<span style="vertical-align:top"> </span>
<span style="vertical-align:top">            spriteBatch.<span style="color: #0000FF;">End</span><span style="color: #000000;">(</span><span style="color: #000000;">)</span><span style="color: #008000;">;</span></span>
<span style="vertical-align:top"> </span>
<span style="vertical-align:top">            graphics.<span style="color: #0000FF;">GraphicsDevice</span>.<span style="color: #0000FF;">ResolveRenderTarget</span><span style="color: #000000;">(</span><span style="color: #FF0000;">0</span><span style="color: #000000;">)</span><span style="color: #008000;">;</span></span>
<span style="vertical-align:top">            graphics.<span style="color: #0000FF;">GraphicsDevice</span>.<span style="color: #0000FF;">SetRenderTarget</span><span style="color: #000000;">(</span><span style="color: #FF0000;">0</span>, resultTarget<span style="color: #000000;">)</span><span style="color: #008000;">;</span></span>
<span style="vertical-align:top">            spriteBatch.<span style="color: #0000FF;">Begin</span><span style="color: #000000;">(</span>SpriteBlendMode.<span style="color: #0000FF;">None</span>, SpriteSortMode.<span style="color: #0000FF;">Immediate</span>, SaveStateMode.<span style="color: #0000FF;">None</span><span style="color: #000000;">)</span><span style="color: #008000;">;</span></span>
<span style="vertical-align:top">            physicsEffect.<span style="color: #0000FF;">CurrentTechnique</span> <span style="color: #008000;">=</span> physicsEffect.<span style="color: #0000FF;">Techniques</span><span style="color: #000000;">[</span><span style="color: #666666;">"CopyTexture"</span><span style="color: #000000;">]</span><span style="color: #008000;">;</span></span>
<span style="vertical-align:top">            physicsEffect.<span style="color: #0000FF;">Begin</span><span style="color: #000000;">(</span><span style="color: #000000;">)</span><span style="color: #008000;">;</span></span>
<span style="vertical-align:top">            physicsEffect.<span style="color: #0000FF;">CurrentTechnique</span>.<span style="color: #0000FF;">Passes</span><span style="color: #000000;">[</span><span style="color: #FF0000;">0</span><span style="color: #000000;">]</span>.<span style="color: #0000FF;">Begin</span><span style="color: #000000;">(</span><span style="color: #000000;">)</span><span style="color: #008000;">;</span></span>
<span style="vertical-align:top"> </span>
<span style="vertical-align:top">            spriteBatch.<span style="color: #0000FF;">Draw</span><span style="color: #000000;">(</span>temporaryRT.<span style="color: #0000FF;">GetTexture</span><span style="color: #000000;">(</span><span style="color: #000000;">)</span>,</span>
<span style="vertical-align:top">                             <a href="http://www.google.com/search?q=new+msdn.microsoft.com"><span style="color: #008000;">new</span></a> Rectangle<span style="color: #000000;">(</span><span style="color: #FF0000;">0</span>, <span style="color: #FF0000;">0</span>, particleCount, particleCount<span style="color: #000000;">)</span>,</span>
<span style="vertical-align:top">                             Color.<span style="color: #0000FF;">White</span><span style="color: #000000;">)</span><span style="color: #008000;">;</span></span>
<span style="vertical-align:top"> </span>
<span style="vertical-align:top">            physicsEffect.<span style="color: #0000FF;">CurrentTechnique</span>.<span style="color: #0000FF;">Passes</span><span style="color: #000000;">[</span><span style="color: #FF0000;">0</span><span style="color: #000000;">]</span>.<span style="color: #0000FF;">End</span><span style="color: #000000;">(</span><span style="color: #000000;">)</span><span style="color: #008000;">;</span></span>
<span style="vertical-align:top">            physicsEffect.<span style="color: #0000FF;">End</span><span style="color: #000000;">(</span><span style="color: #000000;">)</span><span style="color: #008000;">;</span></span>
<span style="vertical-align:top"> </span>
<span style="vertical-align:top">            spriteBatch.<span style="color: #0000FF;">End</span><span style="color: #000000;">(</span><span style="color: #000000;">)</span><span style="color: #008000;">;</span></span>
<span style="vertical-align:top">            graphics.<span style="color: #0000FF;">GraphicsDevice</span>.<span style="color: #0000FF;">ResolveRenderTarget</span><span style="color: #000000;">(</span><span style="color: #FF0000;">0</span><span style="color: #000000;">)</span><span style="color: #008000;">;</span></span>
<span style="vertical-align:top">            graphics.<span style="color: #0000FF;">GraphicsDevice</span>.<span style="color: #0000FF;">SetRenderTarget</span><span style="color: #000000;">(</span><span style="color: #FF0000;">0</span>, oldRT<span style="color: #000000;">)</span><span style="color: #008000;">;</span></span>
<span style="vertical-align:top">            graphics.<span style="color: #0000FF;">GraphicsDevice</span>.<span style="color: #0000FF;">DepthStencilBuffer</span> <span style="color: #008000;">=</span> oldDS<span style="color: #008000;">;</span></span>
<span style="vertical-align:top">        <span style="color: #000000;">}</span></span></pre>
</div>
</div>
</div>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p><span style="white-space: pre;"></span>К примеру, если мы ходим 
использовать технику «UpdateVelocities» и результат обновления скоростей
 частиц записать в цель визуализации velocityRT, то вызов будет 
выглядеть следующим образом: DoPhysicsPass("UpdateVelocities", 
velocityRT).</p>
<p><span style="white-space: pre;"></span>Далее пишем метод симуляции 
системы частиц SimulateParticles, который в качестве параметра будет 
принимать игровое время. Если необходимо очистить данные физики, мы 
вызываем техники ResetPositions и ResetVelocities. На каждом кадре мы 
обновляем данные скоростей, а затем данные позиций частиц.</p>
<p>&nbsp;</p>
<div class="rj_insertcode">
<div class="rj_insertcode_csharp">
<div class="csharp" style="background: #f8f8f8; width: 100%; border-collapse: collapse; border: #054b6e 1px solid;">
<pre style="margin:0; background:none; vertical-align:top; padding: 0px 4px; font-size: 12px;"><span style="vertical-align:top">    <span style="color: #0600FF;">private</span> <span style="color: #0600FF;">void</span> SimulateParticles<span style="color: #000000;">(</span>GameTime gameTime<span style="color: #000000;">)</span></span>
<span style="vertical-align:top">    <span style="color: #000000;">{</span></span>
<span style="vertical-align:top">        physicsEffect.<span style="color: #0000FF;">Parameters</span><span style="color: #000000;">[</span><span style="color: #666666;">"elapsedTime"</span><span style="color: #000000;">]</span>.<span style="color: #0000FF;">SetValue</span><span style="color: #000000;">(</span></span>
<span style="vertical-align:top">            <span style="color: #000000;">(</span><span style="color: #FF0000;">float</span><span style="color: #000000;">)</span>gameTime.<span style="color: #0000FF;">ElapsedGameTime</span>.<span style="color: #0000FF;">TotalSeconds</span><span style="color: #000000;">)</span><span style="color: #008000;">;</span></span>
<span style="vertical-align:top"> </span>
<span style="vertical-align:top">        <span style="color: #0600FF;">if</span> <span style="color: #000000;">(</span><span style="color: #008000;">!</span>isPhysicsReset<span style="color: #000000;">)</span></span>
<span style="vertical-align:top">        <span style="color: #000000;">{</span></span>
<span style="vertical-align:top">            DoPhysicsPass<span style="color: #000000;">(</span><span style="color: #666666;">"ResetPositions"</span>, positionRT<span style="color: #000000;">)</span><span style="color: #008000;">;</span></span>
<span style="vertical-align:top">            DoPhysicsPass<span style="color: #000000;">(</span><span style="color: #666666;">"ResetVelocities"</span>, velocityRT<span style="color: #000000;">)</span><span style="color: #008000;">;</span></span>
<span style="vertical-align:top">            isPhysicsReset <span style="color: #008000;">=</span> true<span style="color: #008000;">;</span></span>
<span style="vertical-align:top">        <span style="color: #000000;">}</span></span>
<span style="vertical-align:top"> </span>
<span style="vertical-align:top">        DoPhysicsPass<span style="color: #000000;">(</span><span style="color: #666666;">"UpdateVelocities"</span>, velocityRT<span style="color: #000000;">)</span><span style="color: #008000;">;</span></span>
<span style="vertical-align:top">        DoPhysicsPass<span style="color: #000000;">(</span><span style="color: #666666;">"UpdatePositions"</span>, positionRT<span style="color: #000000;">)</span><span style="color: #008000;">;</span></span>
<span style="vertical-align:top">    <span style="color: #000000;">}</span></span></pre>
</div>
</div>
</div>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p><span style="white-space: pre;"></span>Теперь нам необходимо вызвать 
эту функцию и отрисовать систему частиц в методе Draw(). Мы используем 
additive blending (добавочное смешивание) и отключаем запись в буфер 
глубина, чтобы у нас не было проблем с отрисовкой частиц. По этой самой 
причине вся остальная геометрия сцены должна отрисовываться ДО системы 
частиц, чтобы информация о глубине записалась в буфер глубины и частицы,
 попадающие за другую геометрию, не рисовались.</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<div class="rj_insertcode">
<div class="rj_insertcode_csharp">
<div class="csharp" style="background: #f8f8f8; width: 100%; border-collapse: collapse; border: #054b6e 1px solid;">
<pre style="margin:0; background:none; vertical-align:top; padding: 0px 4px; font-size: 12px;"><span style="vertical-align:top"><span style="color: #0600FF;">protected</span> <span style="color: #0600FF;">override</span> <span style="color: #0600FF;">void</span> Draw<span style="color: #000000;">(</span>GameTime gameTime<span style="color: #000000;">)</span></span>
<span style="vertical-align:top"><span style="color: #000000;">{</span></span>
<span style="vertical-align:top">    graphics.<span style="color: #0000FF;">GraphicsDevice</span>.<span style="color: #0000FF;">Clear</span><span style="color: #000000;">(</span>Color.<span style="color: #0000FF;">Black</span><span style="color: #000000;">)</span><span style="color: #008000;">;</span></span>
<span style="vertical-align:top"> </span>
<span style="vertical-align:top">    SimulateParticles<span style="color: #000000;">(</span>gameTime<span style="color: #000000;">)</span><span style="color: #008000;">;</span></span>
<span style="vertical-align:top"> </span>
<span style="vertical-align:top">    <span style="color: #000000;">[</span>...<span style="color: #000000;">]</span><span style="color: #008080; font-style: italic;">// тут прочий код отрисовки</span></span>
<span style="vertical-align:top"> </span>
<span style="vertical-align:top">    <span style="color: #008080; font-style: italic;">// устанавливанием значения параметров шейдера</span></span>
<span style="vertical-align:top">    renderParticleEffect.<span style="color: #0000FF;">Parameters</span><span style="color: #000000;">[</span><span style="color: #666666;">"world"</span><span style="color: #000000;">]</span>.<span style="color: #0000FF;">SetValue</span><span style="color: #000000;">(</span>Matrix.<span style="color: #0000FF;">Identity</span><span style="color: #000000;">)</span><span style="color: #008000;">;</span></span>
<span style="vertical-align:top">    renderParticleEffect.<span style="color: #0000FF;">Parameters</span><span style="color: #000000;">[</span><span style="color: #666666;">"view"</span><span style="color: #000000;">]</span>.<span style="color: #0000FF;">SetValue</span><span style="color: #000000;">(</span>camera.<span style="color: #0000FF;">View</span><span style="color: #000000;">)</span><span style="color: #008000;">;</span></span>
<span style="vertical-align:top">    renderParticleEffect.<span style="color: #0000FF;">Parameters</span><span style="color: #000000;">[</span><span style="color: #666666;">"proj"</span><span style="color: #000000;">]</span>.<span style="color: #0000FF;">SetValue</span><span style="color: #000000;">(</span>camera.<span style="color: #0000FF;">Projection</span><span style="color: #000000;">)</span><span style="color: #008000;">;</span></span>
<span style="vertical-align:top">    renderParticleEffect.<span style="color: #0000FF;">Parameters</span><span style="color: #000000;">[</span><span style="color: #666666;">"textureMap"</span><span style="color: #000000;">]</span>.<span style="color: #0000FF;">SetValue</span><span style="color: #000000;">(</span>particleTexture<span style="color: #000000;">)</span><span style="color: #008000;">;</span></span>
<span style="vertical-align:top">    renderParticleEffect.<span style="color: #0000FF;">Parameters</span><span style="color: #000000;">[</span><span style="color: #666666;">"positionMap"</span><span style="color: #000000;">]</span>.<span style="color: #0000FF;">SetValue</span><span style="color: #000000;">(</span>positionRT.<span style="color: #0000FF;">GetTexture</span><span style="color: #000000;">(</span><span style="color: #000000;">)</span><span style="color: #000000;">)</span><span style="color: #008000;">;</span></span>
<span style="vertical-align:top">    renderParticleEffect.<span style="color: #0000FF;">CommitChanges</span><span style="color: #000000;">(</span><span style="color: #000000;">)</span><span style="color: #008000;">;</span></span>
<span style="vertical-align:top"> </span>
<span style="vertical-align:top">    graphics.<span style="color: #0000FF;">GraphicsDevice</span>.<span style="color: #0000FF;">RenderState</span>.<span style="color: #0000FF;">AlphaBlendEnable</span> <span style="color: #008000;">=</span> true<span style="color: #008000;">;</span></span>
<span style="vertical-align:top">    graphics.<span style="color: #0000FF;">GraphicsDevice</span>.<span style="color: #0000FF;">RenderState</span>.<span style="color: #0000FF;">AlphaBlendOperation</span> <span style="color: #008000;">=</span> BlendFunction.<span style="color: #0000FF;">Add</span><span style="color: #008000;">;</span></span>
<span style="vertical-align:top">    graphics.<span style="color: #0000FF;">GraphicsDevice</span>.<span style="color: #0000FF;">RenderState</span>.<span style="color: #0000FF;">SourceBlend</span> <span style="color: #008000;">=</span> Blend.<span style="color: #0000FF;">SourceAlpha</span><span style="color: #008000;">;</span></span>
<span style="vertical-align:top">    graphics.<span style="color: #0000FF;">GraphicsDevice</span>.<span style="color: #0000FF;">RenderState</span>.<span style="color: #0000FF;">DestinationBlend</span> <span style="color: #008000;">=</span> Blend.<span style="color: #0000FF;">One</span><span style="color: #008000;">;</span></span>
<span style="vertical-align:top">    graphics.<span style="color: #0000FF;">GraphicsDevice</span>.<span style="color: #0000FF;">RenderState</span>.<span style="color: #0000FF;">DepthBufferWriteEnable</span> <span style="color: #008000;">=</span> false<span style="color: #008000;">;</span></span>
<span style="vertical-align:top">    graphics.<span style="color: #0000FF;">GraphicsDevice</span>.<span style="color: #0000FF;">RenderState</span>.<span style="color: #0000FF;">PointSpriteEnable</span> <span style="color: #008000;">=</span> true<span style="color: #008000;">;</span></span>
<span style="vertical-align:top"> </span>
<span style="vertical-align:top">    <span style="color: #0600FF;">using</span> <span style="color: #000000;">(</span>VertexDeclaration decl <span style="color: #008000;">=</span> <a href="http://www.google.com/search?q=new+msdn.microsoft.com"><span style="color: #008000;">new</span></a> VertexDeclaration<span style="color: #000000;">(</span>graphics.<span style="color: #0000FF;">GraphicsDevice</span>,</span>
<span style="vertical-align:top">                                VertexPositionColor.<span style="color: #0000FF;">VertexElements</span><span style="color: #000000;">)</span><span style="color: #000000;">)</span></span>
<span style="vertical-align:top">    <span style="color: #000000;">{</span></span>
<span style="vertical-align:top">        graphics.<span style="color: #0000FF;">GraphicsDevice</span>.<span style="color: #0000FF;">VertexDeclaration</span> <span style="color: #008000;">=</span> decl<span style="color: #008000;">;</span></span>
<span style="vertical-align:top">        renderParticleEffect.<span style="color: #0000FF;">Begin</span><span style="color: #000000;">(</span><span style="color: #000000;">)</span><span style="color: #008000;">;</span></span>
<span style="vertical-align:top">        renderParticleEffect.<span style="color: #0000FF;">CurrentTechnique</span>.<span style="color: #0000FF;">Passes</span><span style="color: #000000;">[</span><span style="color: #FF0000;">0</span><span style="color: #000000;">]</span>.<span style="color: #0000FF;">Begin</span><span style="color: #000000;">(</span><span style="color: #000000;">)</span><span style="color: #008000;">;</span></span>
<span style="vertical-align:top">        graphics.<span style="color: #0000FF;">GraphicsDevice</span>.<span style="color: #0000FF;">Vertices</span><span style="color: #000000;">[</span><span style="color: #FF0000;">0</span><span style="color: #000000;">]</span>.<span style="color: #0000FF;">SetSource</span><span style="color: #000000;">(</span>particlesVB,<span style="color: #FF0000;">0</span>,</span>
<span style="vertical-align:top">                                   VertexPositionColor.<span style="color: #0000FF;">SizeInBytes</span><span style="color: #000000;">)</span><span style="color: #008000;">;</span></span>
<span style="vertical-align:top"> </span>
<span style="vertical-align:top">        graphics.<span style="color: #0000FF;">GraphicsDevice</span>.<span style="color: #0000FF;">DrawPrimitives</span><span style="color: #000000;">(</span>PrimitiveType.<span style="color: #0000FF;">PointList</span>,<span style="color: #FF0000;">0</span>,</span>
<span style="vertical-align:top">                                   particleCount <span style="color: #008000;">*</span> particleCount<span style="color: #000000;">)</span><span style="color: #008000;">;</span></span>
<span style="vertical-align:top"> </span>
<span style="vertical-align:top">		renderParticleEffect.<span style="color: #0000FF;">CurrentTechnique</span>.<span style="color: #0000FF;">Passes</span><span style="color: #000000;">[</span><span style="color: #FF0000;">0</span><span style="color: #000000;">]</span>.<span style="color: #0000FF;">End</span><span style="color: #000000;">(</span><span style="color: #000000;">)</span><span style="color: #008000;">;</span></span>
<span style="vertical-align:top">        renderParticleEffect.<span style="color: #0000FF;">End</span><span style="color: #000000;">(</span><span style="color: #000000;">)</span><span style="color: #008000;">;</span></span>
<span style="vertical-align:top">    <span style="color: #000000;">}</span></span>
<span style="vertical-align:top"> </span>
<span style="vertical-align:top">    graphics.<span style="color: #0000FF;">GraphicsDevice</span>.<span style="color: #0000FF;">RenderState</span>.<span style="color: #0000FF;">PointSpriteEnable</span> <span style="color: #008000;">=</span> false<span style="color: #008000;">;</span></span>
<span style="vertical-align:top">    graphics.<span style="color: #0000FF;">GraphicsDevice</span>.<span style="color: #0000FF;">RenderState</span>.<span style="color: #0000FF;">AlphaBlendEnable</span> <span style="color: #008000;">=</span> false<span style="color: #008000;">;</span></span>
<span style="vertical-align:top">    graphics.<span style="color: #0000FF;">GraphicsDevice</span>.<span style="color: #0000FF;">RenderState</span>.<span style="color: #0000FF;">DepthBufferWriteEnable</span> <span style="color: #008000;">=</span> true<span style="color: #008000;">;</span></span>
<span style="vertical-align:top"> </span>
<span style="vertical-align:top">    <span style="color: #0600FF;">base</span>.<span style="color: #0000FF;">Draw</span><span style="color: #000000;">(</span>gameTime<span style="color: #000000;">)</span><span style="color: #008000;">;</span></span>
<span style="vertical-align:top"><span style="color: #000000;">}</span></span></pre>
</div>
</div>
</div>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>Если вы запустите программу сейчас, то увидите что-то наподобие этого:</p>
<p><img src="XnaDev.ru%20-%20XNA%20%D0%BD%D0%BE%D0%B2%D0%BE%D1%81%D1%82%D0%B8%20%D1%83%D1%80%D0%BE%D0%BA%D0%B8%20%D1%81%D1%82%D0%B0%D1%82%D1%8C%D0%B8%20%28xna.ru%29_files/particles.PNG" border="0" height="450" width="600"></p>
<p><span style="white-space: pre;"></span>Давайте добавим воздействие 
ветра на наши частицы. В шейдере ParticlePhysics.fx нам необходимо 
добавить несколько параметров которые будут описывать ветер, а затем 
используем их в пиксельном шейдере UpdateVelocitiesPS чтобы изменить 
скорость частиц.</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<div class="rj_insertcode">
<div class="rj_insertcode_csharp">
<div class="csharp" style="background: #f8f8f8; width: 100%; border-collapse: collapse; border: #054b6e 1px solid;">
<pre style="margin:0; background:none; vertical-align:top; padding: 0px 4px; font-size: 12px;"><span style="vertical-align:top">float4  windDirection<span style="color: #008000;">;</span></span>
<span style="vertical-align:top"><span style="color: #FF0000;">float</span> windStrength<span style="color: #008000;">;</span></span>
<span style="vertical-align:top"> </span>
<span style="vertical-align:top">float4 UpdateVelocitiesPS<span style="color: #000000;">(</span><span style="color: #0600FF;">in</span> float2 uv <span style="color: #008000;">:</span> TEXCOORD0<span style="color: #000000;">)</span> <span style="color: #008000;">:</span> COLOR</span>
<span style="vertical-align:top"><span style="color: #000000;">{</span></span>
<span style="vertical-align:top">    <span style="color: #000000;">[</span>...<span style="color: #000000;">]</span></span>
<span style="vertical-align:top"> </span>
<span style="vertical-align:top">    <span style="color: #0600FF;">if</span> <span style="color: #000000;">(</span>pos.<span style="color: #0000FF;">w</span> <span style="color: #008000;">&gt;=</span> maxLife<span style="color: #000000;">)</span></span>
<span style="vertical-align:top">    <span style="color: #000000;">{</span></span>
<span style="vertical-align:top">        <span style="color: #000000;">[</span>...<span style="color: #000000;">]</span></span>
<span style="vertical-align:top">    <span style="color: #000000;">}</span></span>
<span style="vertical-align:top">    <span style="color: #0600FF;">else</span></span>
<span style="vertical-align:top">    <span style="color: #000000;">{</span></span>
<span style="vertical-align:top">        <span style="color: #008080; font-style: italic;">//гравитация</span></span>
<span style="vertical-align:top">        velocity.<span style="color: #0000FF;">y</span>  <span style="color: #008000;">-=</span> <span style="color: #FF0000;">20.0</span> <span style="color: #008000;">*</span> elapsedTime<span style="color: #008000;">;</span></span>
<span style="vertical-align:top">        velocity    <span style="color: #008000;">+=</span> windDirection <span style="color: #008000;">*</span> windStrength <span style="color: #008000;">*</span> elapsedTime<span style="color: #008000;">;</span></span>
<span style="vertical-align:top">    <span style="color: #000000;">}</span></span>
<span style="vertical-align:top">    <span style="color: #0600FF;">return</span> velocity<span style="color: #008000;">;</span></span>
<span style="vertical-align:top"><span style="color: #000000;">}</span></span></pre>
</div>
</div>
</div>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p><span style="white-space: pre;"></span>В классе Game1.cs, в методе SimulateParticles добавте следующий код в начало метода:</p>
<p>&nbsp;</p>
<div class="rj_insertcode">
<div class="rj_insertcode_csharp">
<div class="csharp" style="background: #f8f8f8; width: 100%; border-collapse: collapse; border: #054b6e 1px solid;">
<pre style="margin:0; background:none; vertical-align:top; padding: 0px 4px; font-size: 12px;"><span style="vertical-align:top">            Vector2 leftStick <span style="color: #008000;">=</span> GamePad.<span style="color: #0000FF;">GetState</span><span style="color: #000000;">(</span>PlayerIndex.<span style="color: #0000FF;">One</span>,</span>
<span style="vertical-align:top">                    GamePadDeadZone.<span style="color: #0000FF;">Circular</span><span style="color: #000000;">)</span>.<span style="color: #0000FF;">ThumbSticks</span>.<span style="color: #0000FF;">Left</span><span style="color: #008000;">;</span></span>
<span style="vertical-align:top">            <span style="color: #0600FF;">if</span> <span style="color: #000000;">(</span>leftStick.<span style="color: #0000FF;">Length</span><span style="color: #000000;">(</span><span style="color: #000000;">)</span> <span style="color: #008000;">&gt;</span> 0.2f<span style="color: #000000;">)</span></span>
<span style="vertical-align:top">            <span style="color: #000000;">{</span></span>
<span style="vertical-align:top">                physicsEffect.<span style="color: #0000FF;">Parameters</span><span style="color: #000000;">[</span><span style="color: #666666;">"windStrength"</span><span style="color: #000000;">]</span>.<span style="color: #0000FF;">SetValue</span><span style="color: #000000;">(</span></span>
<span style="vertical-align:top">                    leftStick.<span style="color: #0000FF;">Length</span><span style="color: #000000;">(</span><span style="color: #000000;">)</span> <span style="color: #008000;">*</span> <span style="color: #FF0000;">50</span><span style="color: #000000;">)</span><span style="color: #008000;">;</span></span>
<span style="vertical-align:top"> </span>
<span style="vertical-align:top">					leftStick.<span style="color: #0000FF;">Normalize</span><span style="color: #000000;">(</span><span style="color: #000000;">)</span><span style="color: #008000;">;</span></span>
<span style="vertical-align:top"> </span>
<span style="vertical-align:top">                physicsEffect.<span style="color: #0000FF;">Parameters</span><span style="color: #000000;">[</span><span style="color: #666666;">"windDirection"</span><span style="color: #000000;">]</span>.<span style="color: #0000FF;">SetValue</span><span style="color: #000000;">(</span></span>
<span style="vertical-align:top">                    <a href="http://www.google.com/search?q=new+msdn.microsoft.com"><span style="color: #008000;">new</span></a> Vector4<span style="color: #000000;">(</span><span style="color: #008000;">-</span>leftStick.<span style="color: #0000FF;">X</span>, <span style="color: #FF0000;">0</span>, leftStick.<span style="color: #0000FF;">Y</span>, <span style="color: #FF0000;">0</span><span style="color: #000000;">)</span><span style="color: #000000;">)</span><span style="color: #008000;">;</span></span>
<span style="vertical-align:top">            <span style="color: #000000;">}</span></span>
<span style="vertical-align:top">            <span style="color: #0600FF;">else</span></span>
<span style="vertical-align:top">            <span style="color: #000000;">{</span></span>
<span style="vertical-align:top">                physicsEffect.<span style="color: #0000FF;">Parameters</span><span style="color: #000000;">[</span><span style="color: #666666;">"windStrength"</span><span style="color: #000000;">]</span>.<span style="color: #0000FF;">SetValue</span><span style="color: #000000;">(</span><span style="color: #FF0000;">0</span><span style="color: #000000;">)</span><span style="color: #008000;">;</span></span>
<span style="vertical-align:top">            <span style="color: #000000;">}</span></span></pre>
</div>
</div>
</div>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p><span style="white-space: pre;"></span><span style="font-style: italic;">Прим. переводчика</span>:
 немного дописал функциональность для изменения параметров ветра при 
помощи мыши. Добавил переменную уровня класса Vector2 mousePrevCoord = 
Vector2.Zero; и после кода инициализации вектора Vector2 leftStick = ...
 дописал:</p>
<p>&nbsp;</p>
<div class="rj_insertcode">
<div class="rj_insertcode_csharp">
<div class="csharp" style="background: #f8f8f8; width: 100%; border-collapse: collapse; border: #054b6e 1px solid;">
<pre style="margin:0; background:none; vertical-align:top; padding: 0px 4px; font-size: 12px;"><span style="vertical-align:top">    MouseState mouseState <span style="color: #008000;">=</span> Mouse.<span style="color: #0000FF;">GetState</span><span style="color: #000000;">(</span><span style="color: #000000;">)</span><span style="color: #008000;">;</span></span>
<span style="vertical-align:top">    Vector2 museCurrCoord <span style="color: #008000;">=</span> <a href="http://www.google.com/search?q=new+msdn.microsoft.com"><span style="color: #008000;">new</span></a> Vector2<span style="color: #000000;">(</span><span style="color: #000000;">(</span><span style="color: #FF0000;">float</span><span style="color: #000000;">)</span>mouseState.<span style="color: #0000FF;">X</span>, <span style="color: #000000;">(</span><span style="color: #FF0000;">float</span><span style="color: #000000;">)</span>mouseState.<span style="color: #0000FF;">Y</span><span style="color: #000000;">)</span><span style="color: #008000;">;</span></span>
<span style="vertical-align:top">    leftStick <span style="color: #008000;">=</span> museCurrCoord <span style="color: #008000;">-</span> mousePrevCoord<span style="color: #008000;">;</span></span>
<span style="vertical-align:top">    mousePrevCoord <span style="color: #008000;">=</span> museCurrCoord<span style="color: #008000;">;</span></span></pre>
</div>
</div>
</div>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p><span style="white-space: pre;"></span>Запустите приложение, когда вы
 двигаете левым стиком, «включается» ветер. Если подойти к реализации 
более глобально, вы должны симулировать ветер в начальной точке с 
затуханием и силой ветра, для эффектов типа заклинаний или быстро 
движущихся объектов. Данные в шейдер можно передавать посредством 
массивов. К примеру для определения столкновений, вы можете использовать
 окружающие сферы (bounding spheres) и передавать их в шейдер массивами 
(центр сферы и ее радиус) и уже в нем просчитывать столкновения и 
соответствующим образом изменять скорость. Пару мыслей я высказал в 
заключительной части.</p>
<p>&nbsp;</p>
<p><span style="white-space: pre;"></span><span style="font-style: italic;">Бонус: Проверка столкновений с ландшафтом</span></p>
<p><span style="white-space: pre;"></span>Давайте рассмотрим, каким 
образом можно определить столкновение частиц с ландшафтом и прекращать 
рисование частиц на поверхности. Мы просто комбинируем два проекта 
(рисование ландшафта и системы частиц). И, к нашему сожалению, 
наблюдаем, как частицы пролетают сквозь поверхность ландшафта. Чтобы 
избавиться от этого артефакта мы будем читать карту смещения для 
ландшафта в пиксельном шейдере, используемом для обновления данных 
скоростей и координат. Для статичного ландшафта все довольно просто: 
когда определяем столкновение, устанавливаем скорость в 0, для 
динамически изменяемого ландшафта, нам необходимо обновлять координаты в
 соответствии с морфингом.</p>
<p><span style="white-space: pre;"></span>Так как в конце прошлой части у
 нас был динамический ландшафт, мы будем производить модификации именно 
под эту реализацию ландшафта. Начнем мы с открытия файла шейдера 
ParticlePhysics.fx и добавления в него самплера для карты смещения.</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<div class="rj_insertcode">
<div class="rj_insertcode_hlsl">
<div class="hlsl" style="background: #f8f8f8; width: 100%; border-collapse: collapse; border: #054b6e 1px solid;">
<pre style="margin:0; background:none; vertical-align:top; padding: 0px 4px; font-size: 12px;"><span style="vertical-align:top">    texture displacementMap<span style="color: #000066;">;</span></span>
<span style="vertical-align:top">    sampler displacementSampler <span style="color: #000066;">=</span> sampler_state</span>
<span style="vertical-align:top">    <span style="color: #000066;">{</span></span>
<span style="vertical-align:top">        Texture   <span style="color: #000066;">=</span> <span style="color: #000066;">&lt;</span>displacementMap<span style="color: #000066;">&gt;;</span></span>
<span style="vertical-align:top"> </span>
<span style="vertical-align:top">        MIPFILTER <span style="color: #000066;">=</span> LINEAR<span style="color: #000066;">;</span></span>
<span style="vertical-align:top">        MINFILTER <span style="color: #000066;">=</span> LINEAR<span style="color: #000066;">;</span></span>
<span style="vertical-align:top">        MAGFILTER <span style="color: #000066;">=</span> LINEAR<span style="color: #000066;">;</span></span>
<span style="vertical-align:top"> </span>
<span style="vertical-align:top">        AddressU  <span style="color: #000066;">=</span> Clamp<span style="color: #000066;">;</span></span>
<span style="vertical-align:top">        AddressV  <span style="color: #000066;">=</span> Clamp<span style="color: #000066;">;</span></span>
<span style="vertical-align:top">    <span style="color: #000066;">}</span><span style="color: #000066;">;</span></span></pre>
</div>
</div>
</div>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p><span style="white-space: pre;"></span>Далее модифицируем код шейдеров UpdateVelocitiesPS и UpdatePositionsPS:</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<div class="rj_insertcode">
<div class="rj_insertcode_hlsl">
<div class="hlsl" style="background: #f8f8f8; width: 100%; border-collapse: collapse; border: #054b6e 1px solid;">
<pre style="margin:0; background:none; vertical-align:top; padding: 0px 4px; font-size: 12px;"><span style="vertical-align:top">    <span style="color: #000066; font-weight: bold;">float4</span> UpdatePositionsPS<span style="color: #000066;">(</span><span style="color: #333399; font-weight: bold;">in</span> <span style="color: #000066; font-weight: bold;">float2</span> uv <span style="color: #000066;">:</span> <span style="color: #551111;">TEXCOORD0</span><span style="color: #000066;">)</span> <span style="color: #000066;">:</span> <span style="color: #551111;">COLOR</span></span>
<span style="vertical-align:top">    <span style="color: #000066;">{</span></span>
<span style="vertical-align:top">         <span style="color: #000066; font-weight: bold;">float4</span> pos <span style="color: #000066;">=</span> <span style="color: #993333; font-weight: bold;">tex2D</span><span style="color: #000066;">(</span>positionSampler<span style="color: #000066;">,</span> uv<span style="color: #000066;">)</span><span style="color: #000066;">;</span></span>
<span style="vertical-align:top"> </span>
<span style="vertical-align:top">         <span style="color: #000000; font-weight: bold;">if</span> <span style="color: #000066;">(</span>pos<span style="color: #000066;">.</span><span style="color: #006600;">w</span> <span style="color: #000066;">&gt;=</span> maxLife<span style="color: #000066;">)</span></span>
<span style="vertical-align:top">         <span style="color: #000066;">{</span></span>
<span style="vertical-align:top">            <span style="color: #000066;">[</span><span style="color: #000066;">...</span><span style="color: #000066;">]</span></span>
<span style="vertical-align:top">         <span style="color: #000066;">}</span></span>
<span style="vertical-align:top">         <span style="color: #000000; font-weight: bold;">else</span></span>
<span style="vertical-align:top">         <span style="color: #000066;">{</span></span>
<span style="vertical-align:top">            <span style="color: #000066; font-weight: bold;">float2</span> displacementUV <span style="color: #000066;">=</span> <span style="color: #000066; font-weight: bold;">float2</span><span style="color: #000066;">(</span><span style="color: #000066;">(</span>pos<span style="color: #000066;">.</span><span style="color: #006600;">x</span> <span style="color: #000066;">/</span> <span style="color: #0000ff;">4</span> <span style="color: #000066;">+</span> <span style="color: #0000ff;">128</span><span style="color: #000066;">)</span> <span style="color: #000066;">/</span> <span style="color: #0000ff;">256</span><span style="color: #000066;">,</span></span>
<span style="vertical-align:top">                                           <span style="color: #000066;">(</span>pos<span style="color: #000066;">.</span><span style="color: #006600;">z</span> <span style="color: #000066;">/</span> <span style="color: #0000ff;">4</span> <span style="color: #000066;">+</span> <span style="color: #0000ff;">128</span><span style="color: #000066;">)</span> <span style="color: #000066;">/</span> <span style="color: #0000ff;">256</span> <span style="color: #000066;">)</span><span style="color: #000066;">;</span></span>
<span style="vertical-align:top"> </span>
<span style="vertical-align:top">            <span style="color: #000066; font-weight: bold;">float</span> height <span style="color: #000066;">=</span> <span style="color: #0000ff;">3</span> <span style="color: #000066;">+</span> <span style="color: #993333; font-weight: bold;">tex2D</span><span style="color: #000066;">(</span>displacementSampler<span style="color: #000066;">,</span></span>
<span style="vertical-align:top">                                     displacementUV<span style="color: #000066;">)</span><span style="color: #000066;">.</span><span style="color: #006600;">x</span> <span style="color: #000066;">*</span> <span style="color: #0000ff;">128</span><span style="color: #000066;">;</span></span>
<span style="vertical-align:top"> </span>
<span style="vertical-align:top">            <span style="color: #000000; font-weight: bold;">if</span> <span style="color: #000066;">(</span>pos<span style="color: #000066;">.</span><span style="color: #006600;">y</span> <span style="color: #000066;">&lt;</span> height<span style="color: #000066;">)</span></span>
<span style="vertical-align:top">            <span style="color: #000066;">{</span></span>
<span style="vertical-align:top">                pos<span style="color: #000066;">.</span><span style="color: #006600;">y</span> <span style="color: #000066;">=</span> height<span style="color: #000066;">;</span></span>
<span style="vertical-align:top">            <span style="color: #000066;">}</span></span>
<span style="vertical-align:top">            <span style="color: #000000; font-weight: bold;">else</span></span>
<span style="vertical-align:top">            <span style="color: #000066;">{</span></span>
<span style="vertical-align:top">                <span style="color: #666666; font-style: italic;">// Обновление местоположения частицы</span></span>
<span style="vertical-align:top">                <span style="color: #000066; font-weight: bold;">float4</span> velocity <span style="color: #000066;">=</span> <span style="color: #993333; font-weight: bold;">tex2D</span><span style="color: #000066;">(</span>velocitySampler<span style="color: #000066;">,</span> uv<span style="color: #000066;">)</span><span style="color: #000066;">;</span></span>
<span style="vertical-align:top"> </span>
<span style="vertical-align:top">                pos<span style="color: #000066;">.</span><span style="color: #006600;">xyz</span> <span style="color: #000066;">+=</span> elapsedTime <span style="color: #000066;">*</span> velocity<span style="color: #000066;">;</span></span>
<span style="vertical-align:top">            <span style="color: #000066;">}</span></span>
<span style="vertical-align:top"> </span>
<span style="vertical-align:top">            pos<span style="color: #000066;">.</span><span style="color: #006600;">w</span> <span style="color: #000066;">+=</span> elapsedTime<span style="color: #000066;">;</span></span>
<span style="vertical-align:top">        <span style="color: #000066;">}</span></span>
<span style="vertical-align:top"> </span>
<span style="vertical-align:top">        <span style="color: #000000; font-weight: bold;">return</span> pos<span style="color: #000066;">;</span></span>
<span style="vertical-align:top">    <span style="color: #000066;">}</span></span>
<span style="vertical-align:top"> </span>
<span style="vertical-align:top">    <span style="color: #000066; font-weight: bold;">float4</span> UpdateVelocitiesPS<span style="color: #000066;">(</span><span style="color: #333399; font-weight: bold;">in</span> <span style="color: #000066; font-weight: bold;">float2</span> uv <span style="color: #000066;">:</span> <span style="color: #551111;">TEXCOORD0</span><span style="color: #000066;">)</span> <span style="color: #000066;">:</span> <span style="color: #551111;">COLOR</span></span>
<span style="vertical-align:top">    <span style="color: #000066;">{</span></span>
<span style="vertical-align:top">        <span style="color: #000066;">[</span><span style="color: #000066;">...</span><span style="color: #000066;">]</span></span>
<span style="vertical-align:top"> </span>
<span style="vertical-align:top">        <span style="color: #000000; font-weight: bold;">if</span> <span style="color: #000066;">(</span>pos<span style="color: #000066;">.</span><span style="color: #006600;">w</span> <span style="color: #000066;">&gt;=</span> maxLife<span style="color: #000066;">)</span></span>
<span style="vertical-align:top">        <span style="color: #000066;">{</span></span>
<span style="vertical-align:top">            <span style="color: #000066;">[</span><span style="color: #000066;">...</span><span style="color: #000066;">]</span></span>
<span style="vertical-align:top">        <span style="color: #000066;">}</span></span>
<span style="vertical-align:top">        <span style="color: #000000; font-weight: bold;">else</span></span>
<span style="vertical-align:top">        <span style="color: #000066;">{</span></span>
<span style="vertical-align:top">            <span style="color: #000066; font-weight: bold;">float2</span> displacementUV <span style="color: #000066;">=</span> <span style="color: #000066; font-weight: bold;">float2</span><span style="color: #000066;">(</span> <span style="color: #000066;">(</span>pos<span style="color: #000066;">.</span><span style="color: #006600;">x</span> <span style="color: #000066;">/</span> <span style="color: #0000ff;">4</span> <span style="color: #000066;">+</span> <span style="color: #0000ff;">128</span><span style="color: #000066;">)</span> <span style="color: #000066;">/</span> <span style="color: #0000ff;">256</span><span style="color: #000066;">,</span></span>
<span style="vertical-align:top">                                            <span style="color: #000066;">(</span>pos<span style="color: #000066;">.</span><span style="color: #006600;">z</span> <span style="color: #000066;">/</span> <span style="color: #0000ff;">4</span> <span style="color: #000066;">+</span> <span style="color: #0000ff;">128</span><span style="color: #000066;">)</span> <span style="color: #000066;">/</span> <span style="color: #0000ff;">256</span> <span style="color: #000066;">)</span><span style="color: #000066;">;</span></span>
<span style="vertical-align:top"> </span>
<span style="vertical-align:top">            <span style="color: #000066; font-weight: bold;">float</span> height <span style="color: #000066;">=</span> <span style="color: #0000ff;">3</span> <span style="color: #000066;">+</span> <span style="color: #993333; font-weight: bold;">tex2D</span><span style="color: #000066;">(</span>displacementSampler<span style="color: #000066;">,</span></span>
<span style="vertical-align:top">                                     displacementUV<span style="color: #000066;">)</span><span style="color: #000066;">.</span><span style="color: #006600;">x</span> <span style="color: #000066;">*</span> <span style="color: #0000ff;">128</span><span style="color: #000066;">;</span></span>
<span style="vertical-align:top"> </span>
<span style="vertical-align:top">            <span style="color: #000000; font-weight: bold;">if</span> <span style="color: #000066;">(</span>pos<span style="color: #000066;">.</span><span style="color: #006600;">y</span> <span style="color: #000066;">&lt;=</span> height<span style="color: #000066;">)</span></span>
<span style="vertical-align:top">            <span style="color: #000066;">{</span></span>
<span style="vertical-align:top">                velocity <span style="color: #000066;">=</span> <span style="color: #0000ff;">0</span><span style="color: #000066;">;</span></span>
<span style="vertical-align:top">            <span style="color: #000066;">}</span></span>
<span style="vertical-align:top">            <span style="color: #000000; font-weight: bold;">else</span></span>
<span style="vertical-align:top">            <span style="color: #000066;">{</span></span>
<span style="vertical-align:top">                <span style="color: #666666; font-style: italic;">//гравитация</span></span>
<span style="vertical-align:top">                velocity<span style="color: #000066;">.</span><span style="color: #006600;">y</span> <span style="color: #000066;">-=</span> <span style="color: #0000ff;">20.0</span> <span style="color: #000066;">*</span> elapsedTime<span style="color: #000066;">;</span></span>
<span style="vertical-align:top">                velocity <span style="color: #000066;">+=</span> windDirection <span style="color: #000066;">*</span> windStrength <span style="color: #000066;">*</span> elapsedTime<span style="color: #000066;">;</span></span>
<span style="vertical-align:top">            <span style="color: #000066;">}</span></span>
<span style="vertical-align:top">        <span style="color: #000066;">}</span></span>
<span style="vertical-align:top">        <span style="color: #000000; font-weight: bold;">return</span> velocity<span style="color: #000066;">;</span></span>
<span style="vertical-align:top">    <span style="color: #000066;">}</span></span></pre>
</div>
</div>
</div>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p><span style="white-space: pre;"></span>Тут много хардкода. Значение 3
 плюсуемое при расчете высоты (height) это просто смещение, чтобы 
«держать» частицы немного выше поверхности ландшафта. Значение 128 на 
которое происходит умножение при расчете высоты совершенно случайно 
совпадает со значением maxHeight шейдера VTFDisplacement.fx. По идее эти
 значения надо сделать переменными и задавать из приложения. Теперь 
разберемся со странной операцией (pos.x/4 + 128)/256. Трансформация 
пространственных координат в текстурные координаты смещения. 4 – это 
значение Grid.CellSize, а 256 - Grid.Dimension. Это обратная формула 
которая используется для расчета координат в методе GenerateStructures, 
класса Grid.cs. Здесь я выбрал подход хардкода для удобства, но в 
реальном приложении эти значения должны задаваться через параметры 
шейдера.</p>
<p>&nbsp;</p>
<div class="rj_insertcode">
<div class="rj_insertcode_csharp">
<div class="csharp" style="background: #f8f8f8; width: 100%; border-collapse: collapse; border: #054b6e 1px solid;">
<pre style="margin:0; background:none; vertical-align:top; padding: 0px 4px; font-size: 12px;"><span style="vertical-align:top">vert.<span style="color: #0000FF;">Position</span> <span style="color: #008000;">=</span> <a href="http://www.google.com/search?q=new+msdn.microsoft.com"><span style="color: #008000;">new</span></a> Vector3<span style="color: #000000;">(</span><span style="color: #000000;">(</span>i <span style="color: #008000;">-</span> dimension <span style="color: #008000;">/</span> 2.0f<span style="color: #000000;">)</span> <span style="color: #008000;">*</span> cellSize, <span style="color: #FF0000;">0</span>,</span>
<span style="vertical-align:top">                                <span style="color: #000000;">(</span>j <span style="color: #008000;">-</span> dimension <span style="color: #008000;">/</span> 2.0f<span style="color: #000000;">)</span> <span style="color: #008000;">*</span> cellSize<span style="color: #000000;">)</span><span style="color: #008000;">;</span></span></pre>
</div>
</div>
</div>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p><span style="white-space: pre;"></span>И наконец, в приложении в классе Game1.cs мы должны дописать одну стоку кода в методе SimulateParticles:</p>
<p>&nbsp;</p>
<div class="rj_insertcode">
<div class="rj_insertcode_csharp">
<div class="csharp" style="background: #f8f8f8; width: 100%; border-collapse: collapse; border: #054b6e 1px solid;">
<pre style="margin:0; background:none; vertical-align:top; padding: 0px 4px; font-size: 12px;"><span style="vertical-align:top">physicsEffect.<span style="color: #0000FF;">Parameters</span><span style="color: #000000;">[</span><span style="color: #666666;">"displacementMap"</span><span style="color: #000000;">]</span>.<span style="color: #0000FF;">SetValue</span><span style="color: #000000;">(</span>morphRenderTarget.<span style="color: #0000FF;">GetTexture</span><span style="color: #000000;">(</span><span style="color: #000000;">)</span><span style="color: #000000;">)</span><span style="color: #008000;">;</span></span></pre>
</div>
</div>
</div>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>Задайте цвет очистки Color.SkyBlue и финальный результат должен выглядеть примерно следующим образом:</p>
<p><img src="XnaDev.ru%20-%20XNA%20%D0%BD%D0%BE%D0%B2%D0%BE%D1%81%D1%82%D0%B8%20%D1%83%D1%80%D0%BE%D0%BA%D0%B8%20%D1%81%D1%82%D0%B0%D1%82%D1%8C%D0%B8%20%28xna.ru%29_files/particlesCollision.PNG" border="0" height="450" width="600"></p>
<p>&nbsp;</p>
<p><span style="white-space: pre;"></span>Дейтвия в результате 
столкновения, конечно, можно изменить. Мы должны передать карту нормалей
 в шейдер ParticlePhysics.fx и реализовать более правдоподобную физику 
при столкновении частиц с ландшафтом, например отскок, скатывание частиц
 по склонам ландшафта, скапливание частиц в низинах и т.п. Но тут я 
хотел показать основные принципы реализации столкновений в вершинном 
шейдере, не углубляясь в нюансы реализации физики.</p>
<p><span style="white-space: pre;"></span>Эта часть сама длинная и 
надеюсь, что она получилась не слишком скучной. Мы рассмотрели 
реализацию хранения информации о частицах в двух текстурах и основные 
принципы отрисовки частиц при помощи VTF, так же мы добавили простейшую 
реализацию ветра и столкновений в систему частиц. Что можно было бы 
улучшить? Более реальное поведение физики, динамику системы частиц 
(генерация частиц с использованием эмиттеров и аттракторов и т.п.), 
несколько систем частиц, использующих общие текстуры. Вы свободны в 
изучении данного материала и если будет что-нибудь интересного, 
пожалуйста, дайте знать.</p>
<p>&nbsp;</p>
<p><span style="white-space: pre;"></span>Полный код этой главы можно скачать тут: <a href="http://www.xnadev.ru/_Content/Tutorials/VTF/Chapter3.zip" target="_blank">Chapter3.rar</a></p>
<p>&nbsp;</p>
<p></p>
<p><span style="white-space: pre;"></span><span style="font-weight: bold;">IV. Шаги на снегу</span></p>
<p>&nbsp;</p>
<p><span style="white-space: pre;"></span>В этой части мы не будем 
использовать как-либо новые технологии или подходы, мы будем 
использовать наработки предыдущих частей для реализации эффекта 
«оставление шагов на снегу». Снег будет сминаться под ногами персонажа и
 со временем выравниваться (скажем, при заносе следов снегом). Снег 
будет рисоваться с использованием карты смещения, точно так же как мы 
рисовали ландшафт. Чтобы добиться эффекта деформации поверхности, мы 
будем отрисовывать сцену в текстуру, которая будет использоваться в 
качестве карты смещения. В момент отрисовки в текстуру, виртуальная 
камера будет снимать сцену снизу, смотря вверх по оси Y. Мы будем 
использовать специальный шейдер который будет закрашивать пиксели, чем 
ближе к поверхности «земли», тем светлее, соответственно, чем дальше тем
 темнее. Это значит, что белые участки означают полную деформацию сетки,
 а темные – участки без деформации. Эта карта деформации будет 
вычитаться из карты смещения, которой мы рисуем снег. Далее, для 
симуляции заноса следов снегом, мы будем добавлять небольшие рандомные 
значения к карте смещения и со временем карта смещения будет 
«выравниваться», а за ней и поверхность снега.</p>
<p><span style="white-space: pre;"></span>Так как карта трансформации 
строится на лету, то нет особой разницы какой формы объект находится на 
сцене и нам нет необходимости писать реализацию под каждый объект. Все 
что нам необходимо, это отрисовать объекты специализированным шейдером и
 карта деформации будет соответствовать любой форме объектов сцены. Да 
данного урока я выбрал dude из примера Skinned Model sample, так как он 
уже анимирован и не имеет постоянной формы.</p>
<p><span style="white-space: pre;"></span>Перед тем как начнем писать 
код, нам необходимо подготовить новый проект. Подготовка проекта будет 
более глобальная по сравнению с предыдущими частями, вы можете либо 
следовать приведенной ниже инструкции или просто скачать уже 
подготовленный проект - <a href="http://www.xnadev.ru/_Content/Tutorials/VTF/Chapter4Startup.zip" target="_blank">Chapter4startup.zip</a>.</p>
<p><span style="white-space: pre;"></span>Создайте новый Windows проект 
(мы будем использовать SkinnedModel.dll и SkinnedModelPipeline.dll из 
примера Skinned Model Sample для Windows или соответствующие файлы для 
XBOX 360).</p>
<p>&nbsp;</p>
<ul>
<li>Добавьте в проект классы Camera.cs, Grid.cs и DudeEntity.cs. 
DudeEntity.cs – вспомогательный класс, который будет использоваться, 
чтобы заставить модель ходить по «кругу» через рандомные точки.</li>
<li>Добавьте в проект, в папку Content (папка обязательно должна иметь 
имя Content, так как SkinnedModelProcessor заточен именно под это 
наименование) файлы из архива DudeModel.zip (находится в архиве <a href="http://www.xnadev.ru/_Content/Tutorials/VTF/resources.zip" target="_blank">Resources.zip</a>).</li>
<li>Скопируйте SkinnedModel.dll и SkinnedModelPipeline.dll в папку проекта.</li>
<li>Добавьте ссылку на SkinnedModel.dll (Project-&gt;Add Reference-&gt;Browse).</li>
<li>В свойствах проекта на вкладке Content Pipeline добавьте ссылку на SkinnedModelPipeline.dll.</li>
<li>Добавьте в проект модель dude.fbx, переключите Content Processor на SkinnedModelProcessor.</li>
<li>Скопируйте файл noise.png в папку Content и добавьте в проект.</li>
</ul>
<p>&nbsp;</p>
<p><span style="white-space: pre;"></span>На данном этапе уже можно 
начинать писать код. Для начала мы добавим камеру и анимированную модель
 и заставим ее ходить по нашей сцене. Нам необходимо в класс Game1 
добавить несколько переменных, камера инициализируется в конструкторе 
класса. Затем в методе LoadGraphicsContent мы загружаем модель и 
инициализируем dudeEntity.</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<div class="rj_insertcode">
<div class="rj_insertcode_csharp">
<div class="csharp" style="background: #f8f8f8; width: 100%; border-collapse: collapse; border: #054b6e 1px solid;">
<pre style="margin:0; background:none; vertical-align:top; padding: 0px 4px; font-size: 12px;"><span style="vertical-align:top">    <span style="color: #000000;">[</span>...<span style="color: #000000;">]</span></span>
<span style="vertical-align:top"> </span>
<span style="vertical-align:top">    <span style="color: #0600FF;">using</span> <span style="color: #008080;">SkinnedModel</span><span style="color: #008000;">;</span></span>
<span style="vertical-align:top">    <span style="color: #0600FF;">using</span> <span style="color: #008080;">VTFTutorial</span><span style="color: #008000;">;</span></span>
<span style="vertical-align:top"> </span>
<span style="vertical-align:top">    <span style="color: #000000;">[</span>...<span style="color: #000000;">]</span></span>
<span style="vertical-align:top">    Camera camera<span style="color: #008000;">;</span></span>
<span style="vertical-align:top">    Model dudeModel<span style="color: #008000;">;</span></span>
<span style="vertical-align:top">    DudeEntity dudeEntity<span style="color: #008000;">;</span></span>
<span style="vertical-align:top"> </span>
<span style="vertical-align:top">    <span style="color: #0600FF;">public</span> Game1<span style="color: #000000;">(</span><span style="color: #000000;">)</span></span>
<span style="vertical-align:top">    <span style="color: #000000;">{</span></span>
<span style="vertical-align:top">        <span style="color: #000000;">[</span>...<span style="color: #000000;">]</span></span>
<span style="vertical-align:top"> </span>
<span style="vertical-align:top">        camera <span style="color: #008000;">=</span> <a href="http://www.google.com/search?q=new+msdn.microsoft.com"><span style="color: #008000;">new</span></a> Camera<span style="color: #000000;">(</span><span style="color: #0600FF;">this</span><span style="color: #000000;">)</span><span style="color: #008000;">;</span></span>
<span style="vertical-align:top">        Components.<span style="color: #0000FF;">Add</span><span style="color: #000000;">(</span>camera<span style="color: #000000;">)</span><span style="color: #008000;">;</span></span>
<span style="vertical-align:top"> </span>
<span style="vertical-align:top">    <span style="color: #000000;">}</span></span>
<span style="vertical-align:top"> </span>
<span style="vertical-align:top">    <span style="color: #000000;">[</span>...<span style="color: #000000;">]</span></span>
<span style="vertical-align:top">    <span style="color: #0600FF;">protected</span> <span style="color: #0600FF;">override</span> <span style="color: #0600FF;">void</span> LoadGraphicsContent<span style="color: #000000;">(</span><span style="color: #FF0000;">bool</span> loadAllContent<span style="color: #000000;">)</span></span>
<span style="vertical-align:top">    <span style="color: #000000;">{</span></span>
<span style="vertical-align:top">        <span style="color: #0600FF;">if</span> <span style="color: #000000;">(</span>loadAllContent<span style="color: #000000;">)</span></span>
<span style="vertical-align:top">        <span style="color: #000000;">{</span></span>
<span style="vertical-align:top">            dudeModel <span style="color: #008000;">=</span> content.<span style="color: #0000FF;">Load</span><span style="color: #008000;">&lt;</span>Model<span style="color: #008000;">&gt;</span><span style="color: #000000;">(</span><span style="color: #666666;">"Content<span style="color: #008080; font-weight: bold;">\\</span>dude"</span><span style="color: #000000;">)</span><span style="color: #008000;">;</span></span>
<span style="vertical-align:top">            dudeEntity <span style="color: #008000;">=</span> <a href="http://www.google.com/search?q=new+msdn.microsoft.com"><span style="color: #008000;">new</span></a> DudeEntity<span style="color: #000000;">(</span><span style="color: #000000;">)</span><span style="color: #008000;">;</span></span>
<span style="vertical-align:top">            dudeEntity.<span style="color: #0000FF;">Initialize</span><span style="color: #000000;">(</span>dudeModel.<span style="color: #0000FF;">Tag</span> <span style="color: #0600FF;">as</span> SkinningData<span style="color: #000000;">)</span><span style="color: #008000;">;</span></span>
<span style="vertical-align:top">        <span style="color: #000000;">}</span></span>
<span style="vertical-align:top">    <span style="color: #000000;">}</span></span></pre>
</div>
</div>
</div>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p><span style="white-space: pre;"></span>В методе Update обновляем 
данные модели и в методе Draw рисуем модель стандартным кодом отрисовки,
 с использованием матриц костей модели.</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<div class="rj_insertcode">
<div class="rj_insertcode_csharp">
<div class="csharp" style="background: #f8f8f8; width: 100%; border-collapse: collapse; border: #054b6e 1px solid;">
<pre style="margin:0; background:none; vertical-align:top; padding: 0px 4px; font-size: 12px;"><span style="vertical-align:top">    <span style="color: #0600FF;">protected</span> <span style="color: #0600FF;">override</span> <span style="color: #0600FF;">void</span> Update<span style="color: #000000;">(</span>GameTime gameTime<span style="color: #000000;">)</span></span>
<span style="vertical-align:top">    <span style="color: #000000;">{</span></span>
<span style="vertical-align:top">        <span style="color: #000000;">[</span>...<span style="color: #000000;">]</span></span>
<span style="vertical-align:top">        dudeEntity.<span style="color: #0000FF;">Update</span><span style="color: #000000;">(</span>gameTime<span style="color: #000000;">)</span><span style="color: #008000;">;</span></span>
<span style="vertical-align:top">        <span style="color: #0600FF;">base</span>.<span style="color: #0000FF;">Update</span><span style="color: #000000;">(</span>gameTime<span style="color: #000000;">)</span><span style="color: #008000;">;</span></span>
<span style="vertical-align:top">    <span style="color: #000000;">}</span></span>
<span style="vertical-align:top"> </span>
<span style="vertical-align:top">    <span style="color: #0600FF;">protected</span> <span style="color: #0600FF;">override</span> <span style="color: #0600FF;">void</span> Draw<span style="color: #000000;">(</span>GameTime gameTime<span style="color: #000000;">)</span></span>
<span style="vertical-align:top">    <span style="color: #000000;">{</span></span>
<span style="vertical-align:top">        graphics.<span style="color: #0000FF;">GraphicsDevice</span>.<span style="color: #0000FF;">Clear</span><span style="color: #000000;">(</span>Color.<span style="color: #0000FF;">CornflowerBlue</span><span style="color: #000000;">)</span><span style="color: #008000;">;</span></span>
<span style="vertical-align:top"> </span>
<span style="vertical-align:top">        graphics.<span style="color: #0000FF;">GraphicsDevice</span>.<span style="color: #0000FF;">RenderState</span>.<span style="color: #0000FF;">CullMode</span> <span style="color: #008000;">=</span> CullMode.<span style="color: #0000FF;">None</span><span style="color: #008000;">;</span></span>
<span style="vertical-align:top"> </span>
<span style="vertical-align:top">        Matrix<span style="color: #000000;">[</span><span style="color: #000000;">]</span> bones <span style="color: #008000;">=</span> dudeEntity.<span style="color: #0000FF;">AnimationPlayer</span>.<span style="color: #0000FF;">GetSkinTransforms</span><span style="color: #000000;">(</span><span style="color: #000000;">)</span><span style="color: #008000;">;</span></span>
<span style="vertical-align:top"> </span>
<span style="vertical-align:top">        <span style="color: #0600FF;">foreach</span> <span style="color: #000000;">(</span>ModelMesh mesh <span style="color: #0600FF;">in</span> dudeModel.<span style="color: #0000FF;">Meshes</span><span style="color: #000000;">)</span></span>
<span style="vertical-align:top">        <span style="color: #000000;">{</span></span>
<span style="vertical-align:top">            <span style="color: #0600FF;">foreach</span> <span style="color: #000000;">(</span>Effect effect <span style="color: #0600FF;">in</span> mesh.<span style="color: #0000FF;">Effects</span><span style="color: #000000;">)</span></span>
<span style="vertical-align:top">            <span style="color: #000000;">{</span></span>
<span style="vertical-align:top">                effect.<span style="color: #0000FF;">Parameters</span><span style="color: #000000;">[</span><span style="color: #666666;">"Bones"</span><span style="color: #000000;">]</span>.<span style="color: #0000FF;">SetValue</span><span style="color: #000000;">(</span> bones <span style="color: #000000;">)</span><span style="color: #008000;">;</span></span>
<span style="vertical-align:top">                effect.<span style="color: #0000FF;">Parameters</span><span style="color: #000000;">[</span><span style="color: #666666;">"View"</span><span style="color: #000000;">]</span>.<span style="color: #0000FF;">SetValue</span><span style="color: #000000;">(</span> camera.<span style="color: #0000FF;">View</span> <span style="color: #000000;">)</span><span style="color: #008000;">;</span></span>
<span style="vertical-align:top">                effect.<span style="color: #0000FF;">Parameters</span><span style="color: #000000;">[</span><span style="color: #666666;">"Projection"</span><span style="color: #000000;">]</span>.<span style="color: #0000FF;">SetValue</span><span style="color: #000000;">(</span> camera.<span style="color: #0000FF;">Projection</span> <span style="color: #000000;">)</span><span style="color: #008000;">;</span></span>
<span style="vertical-align:top">            <span style="color: #000000;">}</span></span>
<span style="vertical-align:top">            mesh.<span style="color: #0000FF;">Draw</span><span style="color: #000000;">(</span><span style="color: #000000;">)</span><span style="color: #008000;">;</span></span>
<span style="vertical-align:top">        <span style="color: #000000;">}</span></span>
<span style="vertical-align:top"> </span>
<span style="vertical-align:top">        <span style="color: #0600FF;">base</span>.<span style="color: #0000FF;">Draw</span><span style="color: #000000;">(</span>gameTime<span style="color: #000000;">)</span><span style="color: #008000;">;</span></span>
<span style="vertical-align:top">    <span style="color: #000000;">}</span></span></pre>
</div>
</div>
</div>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p><span style="white-space: pre;"></span>Если запустите программу, то вы должны увидеть, как персонаж ходит по сцене.</p>
<p>&nbsp;</p>
<p><span style="white-space: pre;"></span>Шейдер отвечающий за рисование
 снега теперь для вас должен быть абсолютно понятен и без объяснений. Мы
 читаем данные высот из карты смещения в вершинном шейдере. Пиксельный 
шейдер задает значения цвета на основе данных высоты, серый для 
«утоптанного» снега, белый для обычного. В качестве тренировки можете 
попытаться добавить нормали и реализовать освещение, так же как мы 
делали для ландшафта. Шейдер будем писать в файле VTFSnow.fx в папке 
Shaders.</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<div class="rj_insertcode">
<div class="rj_insertcode_hlsl">
<div class="hlsl" style="background: #f8f8f8; width: 100%; border-collapse: collapse; border: #054b6e 1px solid;">
<pre style="margin:0; background:none; vertical-align:top; padding: 0px 4px; font-size: 12px;"><span style="vertical-align:top">    <span style="color: #000066; font-weight: bold;">float4x4</span> view<span style="color: #000066;">;</span></span>
<span style="vertical-align:top">    <span style="color: #000066; font-weight: bold;">float4x4</span> proj<span style="color: #000066;">;</span></span>
<span style="vertical-align:top">    <span style="color: #000066; font-weight: bold;">float4x4</span> world<span style="color: #000066;">;</span></span>
<span style="vertical-align:top"> </span>
<span style="vertical-align:top">    texture displacementMap<span style="color: #000066;">;</span></span>
<span style="vertical-align:top">    sampler displacementSampler <span style="color: #000066;">=</span> sampler_state</span>
<span style="vertical-align:top">    <span style="color: #000066;">{</span></span>
<span style="vertical-align:top">        Texture   <span style="color: #000066;">=</span> <span style="color: #000066;">&lt;</span>displacementMap<span style="color: #000066;">&gt;;</span></span>
<span style="vertical-align:top">        MipFilter <span style="color: #000066;">=</span> None<span style="color: #000066;">;</span></span>
<span style="vertical-align:top">        MinFilter <span style="color: #000066;">=</span> Point<span style="color: #000066;">;</span></span>
<span style="vertical-align:top">        MagFilter <span style="color: #000066;">=</span> Point<span style="color: #000066;">;</span></span>
<span style="vertical-align:top">        AddressU  <span style="color: #000066;">=</span> Clamp<span style="color: #000066;">;</span></span>
<span style="vertical-align:top">        AddressV  <span style="color: #000066;">=</span> Clamp<span style="color: #000066;">;</span></span>
<span style="vertical-align:top">    <span style="color: #000066;">}</span><span style="color: #000066;">;</span></span>
<span style="vertical-align:top"> </span>
<span style="vertical-align:top">    <span style="color: #000066; font-weight: bold;">struct</span> VS_INPUT</span>
<span style="vertical-align:top">    <span style="color: #000066;">{</span></span>
<span style="vertical-align:top">        <span style="color: #000066; font-weight: bold;">float4</span> position <span style="color: #000066;">:</span> <span style="color: #551111;">POSITION</span><span style="color: #000066;">;</span></span>
<span style="vertical-align:top">        <span style="color: #000066; font-weight: bold;">float4</span> uv       <span style="color: #000066;">:</span> <span style="color: #551111;">TEXCOORD0</span><span style="color: #000066;">;</span></span>
<span style="vertical-align:top">    <span style="color: #000066;">}</span><span style="color: #000066;">;</span></span>
<span style="vertical-align:top"> </span>
<span style="vertical-align:top">    <span style="color: #000066; font-weight: bold;">struct</span> VS_OUTPUT</span>
<span style="vertical-align:top">    <span style="color: #000066;">{</span></span>
<span style="vertical-align:top">        <span style="color: #000066; font-weight: bold;">float4</span> position <span style="color: #000066;">:</span> <span style="color: #551111;">POSITION</span><span style="color: #000066;">;</span></span>
<span style="vertical-align:top">        <span style="color: #000066; font-weight: bold;">float4</span> pos      <span style="color: #000066;">:</span> <span style="color: #551111;">TEXCOORD1</span><span style="color: #000066;">;</span></span>
<span style="vertical-align:top">    <span style="color: #000066;">}</span><span style="color: #000066;">;</span></span>
<span style="vertical-align:top"> </span>
<span style="vertical-align:top">    <span style="color: #000066; font-weight: bold;">float</span> heightModifier <span style="color: #000066;">=</span> <span style="color: #0000ff;">32</span><span style="color: #000066;">;</span></span>
<span style="vertical-align:top"> </span>
<span style="vertical-align:top">    VS_OUTPUT Transform<span style="color: #000066;">(</span>VS_INPUT In<span style="color: #000066;">)</span></span>
<span style="vertical-align:top">    <span style="color: #000066;">{</span></span>
<span style="vertical-align:top">        VS_OUTPUT Out <span style="color: #000066;">=</span> <span style="color: #000066;">(</span>VS_OUTPUT<span style="color: #000066;">)</span><span style="color: #0000ff;">0</span><span style="color: #000066;">;</span></span>
<span style="vertical-align:top"> </span>
<span style="vertical-align:top">        <span style="color: #000066; font-weight: bold;">float4x4</span> viewProj <span style="color: #000066;">=</span> mul<span style="color: #000066;">(</span>view<span style="color: #000066;">,</span> proj<span style="color: #000066;">)</span><span style="color: #000066;">;</span></span>
<span style="vertical-align:top"> </span>
<span style="vertical-align:top">        <span style="color: #000066; font-weight: bold;">float4x4</span> worldViewProj<span style="color: #000066;">=</span> mul<span style="color: #000066;">(</span>world<span style="color: #000066;">,</span> viewProj<span style="color: #000066;">)</span><span style="color: #000066;">;</span></span>
<span style="vertical-align:top"> </span>
<span style="vertical-align:top">        <span style="color: #666666; font-style: italic;">//Читаем данные высоты из карты смещения</span></span>
<span style="vertical-align:top">        <span style="color: #000066; font-weight: bold;">float</span> height <span style="color: #000066;">=</span> tex2Dlod <span style="color: #000066;">(</span> displacementSampler<span style="color: #000066;">,</span> In<span style="color: #000066;">.</span><span style="color: #006600;">uv</span> <span style="color: #000066;">)</span><span style="color: #000066;">;</span></span>
<span style="vertical-align:top"> </span>
<span style="vertical-align:top">        In<span style="color: #000066;">.</span><span style="color: #006600;">position</span><span style="color: #000066;">.</span><span style="color: #006600;">y</span> <span style="color: #000066;">=</span> height<span style="color: #000066;">;</span></span>
<span style="vertical-align:top"> </span>
<span style="vertical-align:top">        Out<span style="color: #000066;">.</span><span style="color: #006600;">position</span> <span style="color: #000066;">=</span> mul<span style="color: #000066;">(</span> In<span style="color: #000066;">.</span><span style="color: #006600;">position</span> <span style="color: #000066;">,</span> worldViewProj<span style="color: #000066;">)</span><span style="color: #000066;">;</span></span>
<span style="vertical-align:top"> </span>
<span style="vertical-align:top">        Out<span style="color: #000066;">.</span><span style="color: #006600;">pos</span> <span style="color: #000066;">=</span> In<span style="color: #000066;">.</span><span style="color: #006600;">position</span><span style="color: #000066;">;</span></span>
<span style="vertical-align:top">        <span style="color: #000000; font-weight: bold;">return</span> Out<span style="color: #000066;">;</span></span>
<span style="vertical-align:top">    <span style="color: #000066;">}</span></span>
<span style="vertical-align:top"> </span>
<span style="vertical-align:top">    <span style="color: #000066; font-weight: bold;">float4</span> PixelShader<span style="color: #000066;">(</span><span style="color: #333399; font-weight: bold;">in</span> <span style="color: #000066; font-weight: bold;">float4</span> pos<span style="color: #000066;">:</span><span style="color: #551111;">TEXCOORD1</span><span style="color: #000066;">)</span> <span style="color: #000066;">:</span> <span style="color: #551111;">COLOR</span></span>
<span style="vertical-align:top">    <span style="color: #000066;">{</span></span>
<span style="vertical-align:top">        <span style="color: #000000; font-weight: bold;">return</span> 0<span style="color: #000066;">.</span>45f <span style="color: #000066;">+</span> pos<span style="color: #000066;">.</span><span style="color: #006600;">y</span> <span style="color: #000066;">/</span> heightModifier<span style="color: #000066;">;</span></span>
<span style="vertical-align:top">    <span style="color: #000066;">}</span>      </span>
<span style="vertical-align:top"> </span>
<span style="vertical-align:top">    <span style="color: #333399; font-weight: bold;">technique</span> GridDraw</span>
<span style="vertical-align:top">    <span style="color: #000066;">{</span></span>
<span style="vertical-align:top">        <span style="color: #333399; font-weight: bold;">pass</span> P0</span>
<span style="vertical-align:top">        <span style="color: #000066;">{</span></span>
<span style="vertical-align:top">            vertexShader <span style="color: #000066;">=</span> compile vs_3_0 Transform<span style="color: #000066;">(</span><span style="color: #000066;">)</span><span style="color: #000066;">;</span></span>
<span style="vertical-align:top">            pixelShader  <span style="color: #000066;">=</span> compile ps_3_0 PixelShader<span style="color: #000066;">(</span><span style="color: #000066;">)</span><span style="color: #000066;">;</span></span>
<span style="vertical-align:top">        <span style="color: #000066;">}</span></span>
<span style="vertical-align:top">    <span style="color: #000066;">}</span></span></pre>
</div>
</div>
</div>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p><span style="white-space: pre;"></span>Вернемся обратно к коду класса
 Game1.cs. Нам нужен экземпляр сетки Grid и Effect для ее отрисовки. 
Данный кусок кода очень сильно похож на тот, который мы реализовывали в 
самой первой части. (Я знаю, что скучно писать повторяющийся код, но 
поверьте мне, дальше будет гораздо интересней).</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<div class="rj_insertcode">
<div class="rj_insertcode_csharp">
<div class="csharp" style="background: #f8f8f8; width: 100%; border-collapse: collapse; border: #054b6e 1px solid;">
<pre style="margin:0; background:none; vertical-align:top; padding: 0px 4px; font-size: 12px;"><span style="vertical-align:top">    Grid grid<span style="color: #008000;">;</span></span>
<span style="vertical-align:top">    Effect gridEffect<span style="color: #008000;">;</span></span>
<span style="vertical-align:top"> </span>
<span style="vertical-align:top">    <span style="color: #0600FF;">public</span> Game1<span style="color: #000000;">(</span><span style="color: #000000;">)</span></span>
<span style="vertical-align:top">    <span style="color: #000000;">{</span></span>
<span style="vertical-align:top">        <span style="color: #000000;">[</span>...<span style="color: #000000;">]</span></span>
<span style="vertical-align:top">        grid <span style="color: #008000;">=</span> <a href="http://www.google.com/search?q=new+msdn.microsoft.com"><span style="color: #008000;">new</span></a> Grid<span style="color: #000000;">(</span><span style="color: #0600FF;">this</span><span style="color: #000000;">)</span><span style="color: #008000;">;</span></span>
<span style="vertical-align:top">        grid.<span style="color: #0000FF;">CellSize</span> <span style="color: #008000;">=</span> <span style="color: #FF0000;">4</span><span style="color: #008000;">;</span></span>
<span style="vertical-align:top">        grid.<span style="color: #0000FF;">Dimension</span> <span style="color: #008000;">=</span> <span style="color: #FF0000;">256</span><span style="color: #008000;">;</span></span>
<span style="vertical-align:top">    <span style="color: #000000;">}</span></span>
<span style="vertical-align:top"> </span>
<span style="vertical-align:top">    <span style="color: #0600FF;">protected</span> <span style="color: #0600FF;">override</span> <span style="color: #0600FF;">void</span> LoadGraphicsContent<span style="color: #000000;">(</span><span style="color: #FF0000;">bool</span> loadAllContent<span style="color: #000000;">)</span></span>
<span style="vertical-align:top">    <span style="color: #000000;">{</span></span>
<span style="vertical-align:top">        <span style="color: #0600FF;">if</span> <span style="color: #000000;">(</span>loadAllContent<span style="color: #000000;">)</span></span>
<span style="vertical-align:top">        <span style="color: #000000;">{</span></span>
<span style="vertical-align:top">            <span style="color: #000000;">[</span>...<span style="color: #000000;">]</span></span>
<span style="vertical-align:top">            gridEffect <span style="color: #008000;">=</span> content.<span style="color: #0000FF;">Load</span><span style="color: #008000;">&lt;</span>Effect<span style="color: #008000;">&gt;</span><span style="color: #000000;">(</span><span style="color: #666666;">"Shaders<span style="color: #008080; font-weight: bold;">\\</span>VTFSnow"</span><span style="color: #000000;">)</span><span style="color: #008000;">;</span></span>
<span style="vertical-align:top">            grid.<span style="color: #0000FF;">LoadGraphicsContent</span><span style="color: #000000;">(</span><span style="color: #000000;">)</span><span style="color: #008000;">;</span></span>
<span style="vertical-align:top">        <span style="color: #000000;">}</span></span>
<span style="vertical-align:top">    <span style="color: #000000;">}</span></span>
<span style="vertical-align:top"> </span>
<span style="vertical-align:top">    <span style="color: #0600FF;">protected</span> <span style="color: #0600FF;">override</span> <span style="color: #0600FF;">void</span> Draw<span style="color: #000000;">(</span>GameTime gameTime<span style="color: #000000;">)</span></span>
<span style="vertical-align:top">    <span style="color: #000000;">{</span></span>
<span style="vertical-align:top">        graphics.<span style="color: #0000FF;">GraphicsDevice</span>.<span style="color: #0000FF;">Clear</span><span style="color: #000000;">(</span>Color.<span style="color: #0000FF;">CornflowerBlue</span><span style="color: #000000;">)</span><span style="color: #008000;">;</span></span>
<span style="vertical-align:top">        graphics.<span style="color: #0000FF;">GraphicsDevice</span>.<span style="color: #0000FF;">RenderState</span>.<span style="color: #0000FF;">CullMode</span> <span style="color: #008000;">=</span> CullMode.<span style="color: #0000FF;">None</span><span style="color: #008000;">;</span></span>
<span style="vertical-align:top">        graphics.<span style="color: #0000FF;">GraphicsDevice</span>.<span style="color: #0000FF;">RenderState</span>.<span style="color: #0000FF;">DepthBufferEnable</span> <span style="color: #008000;">=</span> true<span style="color: #008000;">;</span></span>
<span style="vertical-align:top"> </span>
<span style="vertical-align:top">        gridEffect.<span style="color: #0000FF;">Parameters</span><span style="color: #000000;">[</span><span style="color: #666666;">"world"</span><span style="color: #000000;">]</span>.<span style="color: #0000FF;">SetValue</span><span style="color: #000000;">(</span>Matrix.<span style="color: #0000FF;">Identity</span><span style="color: #000000;">)</span><span style="color: #008000;">;</span></span>
<span style="vertical-align:top">        gridEffect.<span style="color: #0000FF;">Parameters</span><span style="color: #000000;">[</span><span style="color: #666666;">"view"</span><span style="color: #000000;">]</span>.<span style="color: #0000FF;">SetValue</span><span style="color: #000000;">(</span>camera.<span style="color: #0000FF;">View</span><span style="color: #000000;">)</span><span style="color: #008000;">;</span></span>
<span style="vertical-align:top">        gridEffect.<span style="color: #0000FF;">Parameters</span><span style="color: #000000;">[</span><span style="color: #666666;">"proj"</span><span style="color: #000000;">]</span>.<span style="color: #0000FF;">SetValue</span><span style="color: #000000;">(</span>camera.<span style="color: #0000FF;">Projection</span><span style="color: #000000;">)</span><span style="color: #008000;">;</span></span>
<span style="vertical-align:top"> </span>
<span style="vertical-align:top">        gridEffect.<span style="color: #0000FF;">Begin</span><span style="color: #000000;">(</span><span style="color: #000000;">)</span><span style="color: #008000;">;</span></span>
<span style="vertical-align:top"> </span>
<span style="vertical-align:top">        <span style="color: #0600FF;">foreach</span> <span style="color: #000000;">(</span>EffectPass pass <span style="color: #0600FF;">in</span> gridEffect.<span style="color: #0000FF;">CurrentTechnique</span>.<span style="color: #0000FF;">Passes</span><span style="color: #000000;">)</span></span>
<span style="vertical-align:top">        <span style="color: #000000;">{</span></span>
<span style="vertical-align:top">            pass.<span style="color: #0000FF;">Begin</span><span style="color: #000000;">(</span><span style="color: #000000;">)</span><span style="color: #008000;">;</span></span>
<span style="vertical-align:top">            grid.<span style="color: #0000FF;">Draw</span><span style="color: #000000;">(</span><span style="color: #000000;">)</span><span style="color: #008000;">;</span></span>
<span style="vertical-align:top">            pass.<span style="color: #0000FF;">End</span><span style="color: #000000;">(</span><span style="color: #000000;">)</span><span style="color: #008000;">;</span></span>
<span style="vertical-align:top">        <span style="color: #000000;">}</span></span>
<span style="vertical-align:top">        gridEffect.<span style="color: #0000FF;">End</span><span style="color: #000000;">(</span><span style="color: #000000;">)</span><span style="color: #008000;">;</span></span>
<span style="vertical-align:top">        <span style="color: #000000;">[</span>...<span style="color: #000000;">]</span>       </span>
<span style="vertical-align:top">    <span style="color: #000000;">}</span></span></pre>
</div>
</div>
</div>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p><span style="white-space: pre;"></span>Мы ничего не передаем в 
параметр displacementMap, так как пока что нечего передавать. А вот 
теперь начинается веселье. Мы добавляем кучу полей в класс Game1.cs и 
инициализируем их в методе LoadGraphicsContent. Шейдер будет 
инициализироваться чуть позже, после того, как мы его напишем.</p>
<p>&nbsp;</p>
<div class="rj_insertcode">
<div class="rj_insertcode_csharp">
<div class="csharp" style="background: #f8f8f8; width: 100%; border-collapse: collapse; border: #054b6e 1px solid;">
<pre style="margin:0; background:none; vertical-align:top; padding: 0px 4px; font-size: 12px;"><span style="vertical-align:top">    <span style="color: #008080; font-style: italic;">// Основной щейдер отрисоки снега</span></span>
<span style="vertical-align:top">    Effect snowEffect<span style="color: #008000;">;</span></span>
<span style="vertical-align:top"> </span>
<span style="vertical-align:top">    <span style="color: #008080; font-style: italic;">// Шейдер который, отрисовывает модель на карте трансформации</span></span>
<span style="vertical-align:top">    Effect skinnedModelSnowEffect<span style="color: #008000;">;</span></span>
<span style="vertical-align:top"> </span>
<span style="vertical-align:top">    <span style="color: #008080; font-style: italic;">// Временная цель визуализации</span></span>
<span style="vertical-align:top">    RenderTarget2D temporaryRT<span style="color: #008000;">;</span></span>
<span style="vertical-align:top"> </span>
<span style="vertical-align:top">    <span style="color: #008080; font-style: italic;">//Цель визуализации содержащяя displacementMap для снега</span></span>
<span style="vertical-align:top">    RenderTarget2D snowRT<span style="color: #008000;">;</span></span>
<span style="vertical-align:top"> </span>
<span style="vertical-align:top">    <span style="color: #008080; font-style: italic;">//Цель визуализации содержащая карту деформации для текущего кадра</span></span>
<span style="vertical-align:top">    RenderTarget2D deformationRT<span style="color: #008000;">;</span></span>
<span style="vertical-align:top"> </span>
<span style="vertical-align:top">    <span style="color: #008080; font-style: italic;">//Буфер глубины используется при обновлении карт деформации и смещения</span></span>
<span style="vertical-align:top">    DepthStencilBuffer snowDepth<span style="color: #008000;">;</span></span>
<span style="vertical-align:top"> </span>
<span style="vertical-align:top">    <span style="color: #008080; font-style: italic;">// флаг отвечающий за "сбрасывание состояния" снега</span></span>
<span style="vertical-align:top">    Boolean isSnowReset <span style="color: #008000;">=</span> false<span style="color: #008000;">;</span></span>
<span style="vertical-align:top"> </span>
<span style="vertical-align:top">    <span style="color: #008080; font-style: italic;">//Объект в комбинации с текстурой Noise </span></span>
<span style="vertical-align:top">    <span style="color: #008080; font-style: italic;">//используется для "восстановления" снежного покрова</span></span>
<span style="vertical-align:top">    Random random <span style="color: #008000;">=</span> <a href="http://www.google.com/search?q=new+msdn.microsoft.com"><span style="color: #008000;">new</span></a> Random<span style="color: #000000;">(</span><span style="color: #000000;">)</span><span style="color: #008000;">;</span></span>
<span style="vertical-align:top"> </span>
<span style="vertical-align:top">    Texture2D noiseTexture<span style="color: #008000;">;</span></span>
<span style="vertical-align:top">    SpriteBatch spriteBatch<span style="color: #008000;">;</span></span>
<span style="vertical-align:top"> </span>
<span style="vertical-align:top">    <span style="color: #0600FF;">protected</span> <span style="color: #0600FF;">override</span> <span style="color: #0600FF;">void</span> LoadGraphicsContent<span style="color: #000000;">(</span><span style="color: #FF0000;">bool</span> loadAllContent<span style="color: #000000;">)</span></span>
<span style="vertical-align:top">    <span style="color: #000000;">{</span></span>
<span style="vertical-align:top">        <span style="color: #0600FF;">if</span> <span style="color: #000000;">(</span>loadAllContent<span style="color: #000000;">)</span></span>
<span style="vertical-align:top">        <span style="color: #000000;">{</span></span>
<span style="vertical-align:top">            <span style="color: #000000;">[</span>...<span style="color: #000000;">]</span></span>
<span style="vertical-align:top">            spriteBatch <span style="color: #008000;">=</span> <a href="http://www.google.com/search?q=new+msdn.microsoft.com"><span style="color: #008000;">new</span></a> SpriteBatch<span style="color: #000000;">(</span>graphics.<span style="color: #0000FF;">GraphicsDevice</span><span style="color: #000000;">)</span><span style="color: #008000;">;</span></span>
<span style="vertical-align:top">            noiseTexture <span style="color: #008000;">=</span> content.<span style="color: #0000FF;">Load</span><span style="color: #008000;">&lt;</span>Texture2D<span style="color: #008000;">&gt;</span><span style="color: #000000;">(</span><span style="color: #666666;">"Content<span style="color: #008080; font-weight: bold;">\\</span>Noise"</span><span style="color: #000000;">)</span><span style="color: #008000;">;</span></span>
<span style="vertical-align:top">        <span style="color: #000000;">}</span></span>
<span style="vertical-align:top"> </span>
<span style="vertical-align:top">        snowDepth <span style="color: #008000;">=</span> <a href="http://www.google.com/search?q=new+msdn.microsoft.com"><span style="color: #008000;">new</span></a> DepthStencilBuffer<span style="color: #000000;">(</span>graphics.<span style="color: #0000FF;">GraphicsDevice</span>, <span style="color: #FF0000;">256</span>, <span style="color: #FF0000;">256</span>,</span>
<span style="vertical-align:top">                graphics.<span style="color: #0000FF;">GraphicsDevice</span>.<span style="color: #0000FF;">DepthStencilBuffer</span>.<span style="color: #0000FF;">Format</span><span style="color: #000000;">)</span><span style="color: #008000;">;</span></span>
<span style="vertical-align:top"> </span>
<span style="vertical-align:top">        snowRT <span style="color: #008000;">=</span> <a href="http://www.google.com/search?q=new+msdn.microsoft.com"><span style="color: #008000;">new</span></a> RenderTarget2D<span style="color: #000000;">(</span>graphics.<span style="color: #0000FF;">GraphicsDevice</span>, <span style="color: #FF0000;">256</span>, <span style="color: #FF0000;">256</span>, <span style="color: #FF0000;">1</span>,</span>
<span style="vertical-align:top">                    SurfaceFormat.<span style="color: #0000FF;">Single</span><span style="color: #000000;">)</span><span style="color: #008000;">;</span></span>
<span style="vertical-align:top">        temporaryRT <span style="color: #008000;">=</span> <a href="http://www.google.com/search?q=new+msdn.microsoft.com"><span style="color: #008000;">new</span></a> RenderTarget2D<span style="color: #000000;">(</span>graphics.<span style="color: #0000FF;">GraphicsDevice</span>, <span style="color: #FF0000;">256</span>, <span style="color: #FF0000;">256</span>, <span style="color: #FF0000;">1</span>,</span>
<span style="vertical-align:top">                    SurfaceFormat.<span style="color: #0000FF;">Single</span><span style="color: #000000;">)</span><span style="color: #008000;">;</span></span>
<span style="vertical-align:top">        deformationRT <span style="color: #008000;">=</span> <a href="http://www.google.com/search?q=new+msdn.microsoft.com"><span style="color: #008000;">new</span></a> RenderTarget2D<span style="color: #000000;">(</span>graphics.<span style="color: #0000FF;">GraphicsDevice</span>, <span style="color: #FF0000;">256</span>, <span style="color: #FF0000;">256</span>, <span style="color: #FF0000;">1</span>,</span>
<span style="vertical-align:top">                    SurfaceFormat.<span style="color: #0000FF;">Single</span><span style="color: #000000;">)</span><span style="color: #008000;">;</span></span>
<span style="vertical-align:top">        isSnowReset <span style="color: #008000;">=</span> false<span style="color: #008000;">;</span></span>
<span style="vertical-align:top">    <span style="color: #000000;">}</span></span></pre>
</div>
</div>
</div>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p><span style="font-weight: bold;"><span style="white-space: pre;"></span>Карта деформации</span></p>
<p>&nbsp;</p>
<p><span style="white-space: pre;"></span>Теперь мы будем формировать 
карту деформации. Как уже упоминалось ранее, мы будем отрисовывать 
объекты сцены из положения «снизу», при помощи ортогональной матрицы. 
Так как желательно чтобы деформация соответствовала анимации модели, за 
основу будет взят шейдер SkinnedModel.fx, но мы модифицируем пиксельный 
шейдер под наши нужды. В папке Shaders создайте новый файл шейдера с 
именем SkinnedModelSnow.fx.</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<div class="rj_insertcode">
<div class="rj_insertcode_hlsl">
<div class="hlsl" style="background: #f8f8f8; width: 100%; border-collapse: collapse; border: #054b6e 1px solid;">
<pre style="margin:0; background:none; vertical-align:top; padding: 0px 4px; font-size: 12px;"><span style="vertical-align:top">    <span style="color: #666666; font-style: italic;">// Максимальное количество костей которые мы можем использовать</span></span>
<span style="vertical-align:top">    <span style="color: #666666; font-style: italic;">// в шейдерной модели 2.0 за один проход.</span></span>
<span style="vertical-align:top">    <span style="color: #666666; font-style: italic;">// если меняете это значение обновите код класса SkinnedModelProcessor.cs</span></span>
<span style="vertical-align:top">    <span style="color: #009900;">#define MaxBones 59</span></span>
<span style="vertical-align:top">    <span style="color: #000066; font-weight: bold;">float4x4</span> View<span style="color: #000066;">;</span></span>
<span style="vertical-align:top">    <span style="color: #000066; font-weight: bold;">float4x4</span> Projection<span style="color: #000066;">;</span></span>
<span style="vertical-align:top">    <span style="color: #000066; font-weight: bold;">float4x4</span> Bones<span style="color: #000066;">[</span>MaxBones<span style="color: #000066;">]</span><span style="color: #000066;">;</span></span>
<span style="vertical-align:top"> </span>
<span style="vertical-align:top">    <span style="color: #000066; font-weight: bold;">struct</span> VS_INPUT</span>
<span style="vertical-align:top">    <span style="color: #000066;">{</span></span>
<span style="vertical-align:top">        <span style="color: #000066; font-weight: bold;">float4</span> Position <span style="color: #000066;">:</span> POSITION0<span style="color: #000066;">;</span></span>
<span style="vertical-align:top">        <span style="color: #000066; font-weight: bold;">float4</span> BoneIndices <span style="color: #000066;">:</span> BLENDINDICES0<span style="color: #000066;">;</span></span>
<span style="vertical-align:top">        <span style="color: #000066; font-weight: bold;">float4</span> BoneWeights <span style="color: #000066;">:</span> BLENDWEIGHT0<span style="color: #000066;">;</span></span>
<span style="vertical-align:top">    <span style="color: #000066;">}</span><span style="color: #000066;">;</span></span>
<span style="vertical-align:top"> </span>
<span style="vertical-align:top">    <span style="color: #000066; font-weight: bold;">struct</span> VS_OUTPUT</span>
<span style="vertical-align:top">    <span style="color: #000066;">{</span></span>
<span style="vertical-align:top">        <span style="color: #000066; font-weight: bold;">float4</span> Position <span style="color: #000066;">:</span> POSITION0<span style="color: #000066;">;</span></span>
<span style="vertical-align:top">        <span style="color: #000066; font-weight: bold;">float4</span> worldPos <span style="color: #000066;">:</span> <span style="color: #551111;">TEXCOORD1</span><span style="color: #000066;">;</span></span>
<span style="vertical-align:top">    <span style="color: #000066;">}</span><span style="color: #000066;">;</span></span>
<span style="vertical-align:top"> </span>
<span style="vertical-align:top">    VS_OUTPUT VertexShader<span style="color: #000066;">(</span>VS_INPUT <span style="color: #333399; font-weight: bold;">input</span><span style="color: #000066;">)</span></span>
<span style="vertical-align:top">    <span style="color: #000066;">{</span></span>
<span style="vertical-align:top">        VS_OUTPUT <span style="color: #333399; font-weight: bold;">output</span><span style="color: #000066;">;</span></span>
<span style="vertical-align:top"> </span>
<span style="vertical-align:top">        <span style="color: #666666; font-style: italic;">// Смешивание между весами матриц костей</span></span>
<span style="vertical-align:top">        <span style="color: #000066; font-weight: bold;">float4x4</span> skinTransform <span style="color: #000066;">=</span> <span style="color: #0000ff;">0</span><span style="color: #000066;">;</span></span>
<span style="vertical-align:top"> </span>
<span style="vertical-align:top">        skinTransform <span style="color: #000066;">+=</span> Bones<span style="color: #000066;">[</span><span style="color: #333399; font-weight: bold;">input</span><span style="color: #000066;">.</span><span style="color: #006600;">BoneIndices</span><span style="color: #000066;">.</span><span style="color: #006600;">x</span><span style="color: #000066;">]</span> <span style="color: #000066;">*</span> <span style="color: #333399; font-weight: bold;">input</span><span style="color: #000066;">.</span><span style="color: #006600;">BoneWeights</span><span style="color: #000066;">.</span><span style="color: #006600;">x</span><span style="color: #000066;">;</span></span>
<span style="vertical-align:top">        skinTransform <span style="color: #000066;">+=</span> Bones<span style="color: #000066;">[</span><span style="color: #333399; font-weight: bold;">input</span><span style="color: #000066;">.</span><span style="color: #006600;">BoneIndices</span><span style="color: #000066;">.</span><span style="color: #006600;">y</span><span style="color: #000066;">]</span> <span style="color: #000066;">*</span> <span style="color: #333399; font-weight: bold;">input</span><span style="color: #000066;">.</span><span style="color: #006600;">BoneWeights</span><span style="color: #000066;">.</span><span style="color: #006600;">y</span><span style="color: #000066;">;</span></span>
<span style="vertical-align:top">        skinTransform <span style="color: #000066;">+=</span> Bones<span style="color: #000066;">[</span><span style="color: #333399; font-weight: bold;">input</span><span style="color: #000066;">.</span><span style="color: #006600;">BoneIndices</span><span style="color: #000066;">.</span><span style="color: #006600;">z</span><span style="color: #000066;">]</span> <span style="color: #000066;">*</span> <span style="color: #333399; font-weight: bold;">input</span><span style="color: #000066;">.</span><span style="color: #006600;">BoneWeights</span><span style="color: #000066;">.</span><span style="color: #006600;">z</span><span style="color: #000066;">;</span></span>
<span style="vertical-align:top">        skinTransform <span style="color: #000066;">+=</span> Bones<span style="color: #000066;">[</span><span style="color: #333399; font-weight: bold;">input</span><span style="color: #000066;">.</span><span style="color: #006600;">BoneIndices</span><span style="color: #000066;">.</span><span style="color: #006600;">w</span><span style="color: #000066;">]</span> <span style="color: #000066;">*</span> <span style="color: #333399; font-weight: bold;">input</span><span style="color: #000066;">.</span><span style="color: #006600;">BoneWeights</span><span style="color: #000066;">.</span><span style="color: #006600;">w</span><span style="color: #000066;">;</span></span>
<span style="vertical-align:top"> </span>
<span style="vertical-align:top">        <span style="color: #000066; font-weight: bold;">float4</span> position <span style="color: #000066;">=</span> mul<span style="color: #000066;">(</span><span style="color: #333399; font-weight: bold;">input</span><span style="color: #000066;">.</span><span style="color: #006600;">Position</span><span style="color: #000066;">,</span> skinTransform<span style="color: #000066;">)</span><span style="color: #000066;">;</span></span>
<span style="vertical-align:top">        <span style="color: #333399; font-weight: bold;">output</span><span style="color: #000066;">.</span><span style="color: #006600;">Position</span> <span style="color: #000066;">=</span> mul<span style="color: #000066;">(</span>mul<span style="color: #000066;">(</span>position<span style="color: #000066;">,</span> View<span style="color: #000066;">)</span><span style="color: #000066;">,</span> Projection<span style="color: #000066;">)</span><span style="color: #000066;">;</span></span>
<span style="vertical-align:top">        <span style="color: #333399; font-weight: bold;">output</span><span style="color: #000066;">.</span><span style="color: #006600;">worldPos</span> <span style="color: #000066;">=</span> <span style="color: #333399; font-weight: bold;">output</span><span style="color: #000066;">.</span><span style="color: #006600;">Position</span><span style="color: #000066;">;</span></span>
<span style="vertical-align:top"> </span>
<span style="vertical-align:top">        <span style="color: #000000; font-weight: bold;">return</span> <span style="color: #333399; font-weight: bold;">output</span><span style="color: #000066;">;</span></span>
<span style="vertical-align:top">    <span style="color: #000066;">}</span></span>
<span style="vertical-align:top"> </span>
<span style="vertical-align:top">    <span style="color: #000066; font-weight: bold;">float4</span> PixelShader<span style="color: #000066;">(</span><span style="color: #000066; font-weight: bold;">float4</span> worldPos <span style="color: #000066;">:</span> <span style="color: #551111;">TEXCOORD1</span><span style="color: #000066;">)</span> <span style="color: #000066;">:</span> COLOR0</span>
<span style="vertical-align:top">    <span style="color: #000066;">{</span></span>
<span style="vertical-align:top">        <span style="color: #000066; font-weight: bold;">float</span> height <span style="color: #000066;">=</span> worldPos<span style="color: #000066;">.</span><span style="color: #006600;">y</span><span style="color: #000066;">;</span></span>
<span style="vertical-align:top">        <span style="color: #000000; font-weight: bold;">return</span> 1<span style="color: #000066;">.</span>0f <span style="color: #000066;">-</span> saturate<span style="color: #000066;">(</span>height <span style="color: #000066;">/</span> <span style="color: #0000ff;">32.0</span><span style="color: #000066;">)</span><span style="color: #000066;">;</span></span>
<span style="vertical-align:top">    <span style="color: #000066;">}</span></span>
<span style="vertical-align:top"> </span>
<span style="vertical-align:top">    <span style="color: #333399; font-weight: bold;">technique</span> SkinnedModelTechnique</span>
<span style="vertical-align:top">    <span style="color: #000066;">{</span></span>
<span style="vertical-align:top">        <span style="color: #333399; font-weight: bold;">pass</span> SkinnedModelPass</span>
<span style="vertical-align:top">        <span style="color: #000066;">{</span></span>
<span style="vertical-align:top">            VertexShader <span style="color: #000066;">=</span> compile vs_2_0 VertexShader<span style="color: #000066;">(</span><span style="color: #000066;">)</span><span style="color: #000066;">;</span></span>
<span style="vertical-align:top">            PixelShader <span style="color: #000066;">=</span> compile ps_2_0 PixelShader<span style="color: #000066;">(</span><span style="color: #000066;">)</span><span style="color: #000066;">;</span></span>
<span style="vertical-align:top">        <span style="color: #000066;">}</span></span>
<span style="vertical-align:top">    <span style="color: #000066;">}</span></span></pre>
</div>
</div>
</div>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p><span style="white-space: pre;"></span>Стоит обратить внимания на 
пиксельный шейдер. Мы ограничиваем высоту снега в 32 единицы, таким 
образом все что происходит на сцене выше 32f не оказывает никакого 
влияния на снег. Операцией saturate(height / 32) мы получаем значения в 
диапазоне от 0 до 1 для значений высоты, у которых изначальное значение 
между 0 и 32, все, что находится выше, устанавливается в значение 1. 
Затем мы вычитаем это значение из единицы, в итоге получается, что чем 
выше высота, тем ниже значение с постепенным уменьшением до 0 (все, что 
выше 32 будет иметь значение 0). Это основной принцип построения карты 
трансформации. Все объекты сцены, которые будут оказывать воздействия на
 снег, должны отрисовываться этим шейдером или отрисовываться подобно 
статичным объектам. Теперь загружаем шейдер в методе 
LoadGraphicsContent:</p>
<p>&nbsp;</p>
<div class="rj_insertcode">
<div class="rj_insertcode_csharp">
<div class="csharp" style="background: #f8f8f8; width: 100%; border-collapse: collapse; border: #054b6e 1px solid;">
<pre style="margin:0; background:none; vertical-align:top; padding: 0px 4px; font-size: 12px;"><span style="vertical-align:top">skinnedModelSnowEffect <span style="color: #008000;">=</span> content.<span style="color: #0000FF;">Load</span><span style="color: #008000;">&lt;</span>Effect<span style="color: #008000;">&gt;</span><span style="color: #000000;">(</span><span style="color: #666666;">"Shaders<span style="color: #008080; font-weight: bold;">\\</span>SkinnedModelSnow"</span><span style="color: #000000;">)</span><span style="color: #008000;">;</span></span></pre>
</div>
</div>
</div>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p><span style="white-space: pre;"></span>Далее нам надо написать метод,
 который сформирует нам карту деформации. Создадим метод 
RenderDeformationMap() в классе Game1.cs, в котором подготовим цели 
визуализации и установим необходимые состояния рендеринга.</p>
<p>&nbsp;</p>
<div class="rj_insertcode">
<div class="rj_insertcode_csharp">
<div class="csharp" style="background: #f8f8f8; width: 100%; border-collapse: collapse; border: #054b6e 1px solid;">
<pre style="margin:0; background:none; vertical-align:top; padding: 0px 4px; font-size: 12px;"><span style="vertical-align:top">    <span style="color: #0600FF;">void</span> RenderDeformationMap<span style="color: #000000;">(</span><span style="color: #000000;">)</span></span>
<span style="vertical-align:top">    <span style="color: #000000;">{</span></span>
<span style="vertical-align:top">        RenderTarget2D oldRT <span style="color: #008000;">=</span> graphics.<span style="color: #0000FF;">GraphicsDevice</span>.<span style="color: #0000FF;">GetRenderTarget</span><span style="color: #000000;">(</span><span style="color: #FF0000;">0</span><span style="color: #000000;">)</span></span>
<span style="vertical-align:top">            <span style="color: #0600FF;">as</span> RenderTarget2D<span style="color: #008000;">;</span></span>
<span style="vertical-align:top"> </span>
<span style="vertical-align:top">	DepthStencilBuffer oldDS <span style="color: #008000;">=</span> graphics.<span style="color: #0000FF;">GraphicsDevice</span>.<span style="color: #0000FF;">DepthStencilBuffer</span><span style="color: #008000;">;</span></span>
<span style="vertical-align:top">        graphics.<span style="color: #0000FF;">GraphicsDevice</span>.<span style="color: #0000FF;">SetRenderTarget</span><span style="color: #000000;">(</span><span style="color: #FF0000;">0</span>, deformationRT<span style="color: #000000;">)</span><span style="color: #008000;">;</span></span>
<span style="vertical-align:top">        graphics.<span style="color: #0000FF;">GraphicsDevice</span>.<span style="color: #0000FF;">DepthStencilBuffer</span> <span style="color: #008000;">=</span> snowDepth<span style="color: #008000;">;</span></span>
<span style="vertical-align:top">        graphics.<span style="color: #0000FF;">GraphicsDevice</span>.<span style="color: #0000FF;">RenderState</span>.<span style="color: #0000FF;">CullMode</span> <span style="color: #008000;">=</span> CullMode.<span style="color: #0000FF;">None</span><span style="color: #008000;">;</span></span>
<span style="vertical-align:top">        graphics.<span style="color: #0000FF;">GraphicsDevice</span>.<span style="color: #0000FF;">RenderState</span>.<span style="color: #0000FF;">FillMode</span> <span style="color: #008000;">=</span> FillMode.<span style="color: #0000FF;">Solid</span><span style="color: #008000;">;</span></span>
<span style="vertical-align:top">        graphics.<span style="color: #0000FF;">GraphicsDevice</span>.<span style="color: #0000FF;">RenderState</span>.<span style="color: #0000FF;">DepthBufferEnable</span> <span style="color: #008000;">=</span> true<span style="color: #008000;">;</span></span>
<span style="vertical-align:top"> </span>
<span style="vertical-align:top">        graphics.<span style="color: #0000FF;">GraphicsDevice</span>.<span style="color: #0000FF;">Clear</span><span style="color: #000000;">(</span>Color.<span style="color: #0000FF;">Black</span><span style="color: #000000;">)</span><span style="color: #008000;">;</span></span></pre>
</div>
</div>
</div>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p><span style="white-space: pre;"></span>Для матрицы проекции 
(projection) мы будем использовать ортогональную матрицу проекции. Так 
как наша сетка состоит из 256 ячеек и размер ячейки – 4, для того чтобы 
охватить всю поверхность мы должны получить изображение 1024 * 1024. Для
 матрицы вида, мы будем использовать матрицу которая «смотрит» вдоль 
положительной оси координат Y.</p>
<p>&nbsp;</p>
<div class="rj_insertcode">
<div class="rj_insertcode_csharp">
<div class="csharp" style="background: #f8f8f8; width: 100%; border-collapse: collapse; border: #054b6e 1px solid;">
<pre style="margin:0; background:none; vertical-align:top; padding: 0px 4px; font-size: 12px;"><span style="vertical-align:top">        Matrix orthoMatrix <span style="color: #008000;">=</span> Matrix.<span style="color: #0000FF;">CreateOrthographic</span><span style="color: #000000;">(</span><span style="color: #FF0000;">1024</span>, <span style="color: #FF0000;">1024</span>, <span style="color: #FF0000;">1</span>, <span style="color: #FF0000;">500</span><span style="color: #000000;">)</span><span style="color: #008000;">;</span></span>
<span style="vertical-align:top"> </span>
<span style="vertical-align:top">        Matrix viewMatrix <span style="color: #008000;">=</span> Matrix.<span style="color: #0000FF;">Identity</span><span style="color: #008000;">;</span></span>
<span style="vertical-align:top">        viewMatrix.<span style="color: #0000FF;">Forward</span> <span style="color: #008000;">=</span> Vector3.<span style="color: #0000FF;">Up</span><span style="color: #008000;">;</span></span>
<span style="vertical-align:top">        viewMatrix.<span style="color: #0000FF;">Right</span> <span style="color: #008000;">=</span> Vector3.<span style="color: #0000FF;">Right</span><span style="color: #008000;">;</span></span>
<span style="vertical-align:top">        viewMatrix.<span style="color: #0000FF;">Up</span> <span style="color: #008000;">=</span> Vector3.<span style="color: #0000FF;">Forward</span><span style="color: #008000;">;</span></span>
<span style="vertical-align:top">        viewMatrix.<span style="color: #0000FF;">Translation</span> <span style="color: #008000;">=</span> <a href="http://www.google.com/search?q=new+msdn.microsoft.com"><span style="color: #008000;">new</span></a> Vector3<span style="color: #000000;">(</span><span style="color: #FF0000;">0</span>, <span style="color: #FF0000;">0</span>, <span style="color: #FF0000;">0</span><span style="color: #000000;">)</span><span style="color: #008000;">;</span></span></pre>
</div>
</div>
</div>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p><span style="white-space: pre;"></span>Далее мы передаем параметры в 
шейдер и отрисовываем анимированную модель, обходя все меши. Так как при
 отрисовке модели мы используем кастомизированный шейдер, мы не можем 
использовать метод mesh.Draw() и реализуем отрисовку сами. И в конце 
подготавливаем цель визуализации для получения из нее данных.</p>
<p>&nbsp;</p>
<div class="rj_insertcode">
<div class="rj_insertcode_csharp">
<div class="csharp" style="background: #f8f8f8; width: 100%; border-collapse: collapse; border: #054b6e 1px solid;">
<pre style="margin:0; background:none; vertical-align:top; padding: 0px 4px; font-size: 12px;"><span style="vertical-align:top">        Matrix<span style="color: #000000;">[</span><span style="color: #000000;">]</span> bones <span style="color: #008000;">=</span> dudeEntity.<span style="color: #0000FF;">AnimationPlayer</span>.<span style="color: #0000FF;">GetSkinTransforms</span><span style="color: #000000;">(</span><span style="color: #000000;">)</span><span style="color: #008000;">;</span></span>
<span style="vertical-align:top">        skinnedModelSnowEffect.<span style="color: #0000FF;">Parameters</span><span style="color: #000000;">[</span><span style="color: #666666;">"Bones"</span><span style="color: #000000;">]</span>.<span style="color: #0000FF;">SetValue</span><span style="color: #000000;">(</span>bones<span style="color: #000000;">)</span><span style="color: #008000;">;</span></span>
<span style="vertical-align:top">        skinnedModelSnowEffect.<span style="color: #0000FF;">Parameters</span><span style="color: #000000;">[</span><span style="color: #666666;">"View"</span><span style="color: #000000;">]</span>.<span style="color: #0000FF;">SetValue</span><span style="color: #000000;">(</span>viewMatrix<span style="color: #000000;">)</span><span style="color: #008000;">;</span></span>
<span style="vertical-align:top">        skinnedModelSnowEffect.<span style="color: #0000FF;">Parameters</span><span style="color: #000000;">[</span><span style="color: #666666;">"Projection"</span><span style="color: #000000;">]</span>.<span style="color: #0000FF;">SetValue</span><span style="color: #000000;">(</span>orthoMatrix<span style="color: #000000;">)</span><span style="color: #008000;">;</span></span>
<span style="vertical-align:top"> </span>
<span style="vertical-align:top">        skinnedModelSnowEffect.<span style="color: #0000FF;">Begin</span><span style="color: #000000;">(</span><span style="color: #000000;">)</span><span style="color: #008000;">;</span></span>
<span style="vertical-align:top">        <span style="color: #0600FF;">foreach</span> <span style="color: #000000;">(</span>EffectPass pass <span style="color: #0600FF;">in</span> skinnedModelSnowEffect.<span style="color: #0000FF;">CurrentTechnique</span>.<span style="color: #0000FF;">Passes</span><span style="color: #000000;">)</span></span>
<span style="vertical-align:top">        <span style="color: #000000;">{</span></span>
<span style="vertical-align:top">            pass.<span style="color: #0000FF;">Begin</span><span style="color: #000000;">(</span><span style="color: #000000;">)</span><span style="color: #008000;">;</span></span>
<span style="vertical-align:top">            <span style="color: #0600FF;">foreach</span> <span style="color: #000000;">(</span>ModelMesh mesh <span style="color: #0600FF;">in</span> dudeModel.<span style="color: #0000FF;">Meshes</span><span style="color: #000000;">)</span></span>
<span style="vertical-align:top">            <span style="color: #000000;">{</span></span>
<span style="vertical-align:top">                <span style="color: #0600FF;">foreach</span> <span style="color: #000000;">(</span>ModelMeshPart meshpart <span style="color: #0600FF;">in</span> mesh.<span style="color: #0000FF;">MeshParts</span><span style="color: #000000;">)</span></span>
<span style="vertical-align:top">                <span style="color: #000000;">{</span></span>
<span style="vertical-align:top">                    graphics.<span style="color: #0000FF;">GraphicsDevice</span>.<span style="color: #0000FF;">VertexDeclaration</span> <span style="color: #008000;">=</span></span>
<span style="vertical-align:top">                      meshpart.<span style="color: #0000FF;">VertexDeclaration</span><span style="color: #008000;">;</span></span>
<span style="vertical-align:top"> </span>
<span style="vertical-align:top">                    graphics.<span style="color: #0000FF;">GraphicsDevice</span>.<span style="color: #0000FF;">Vertices</span><span style="color: #000000;">[</span><span style="color: #FF0000;">0</span><span style="color: #000000;">]</span>.<span style="color: #0000FF;">SetSource</span><span style="color: #000000;">(</span></span>
<span style="vertical-align:top">                                                          mesh.<span style="color: #0000FF;">VertexBuffer</span>,</span>
<span style="vertical-align:top">                                                          meshpart.<span style="color: #0000FF;">StreamOffset</span>,</span>
<span style="vertical-align:top">                                                          meshpart.<span style="color: #0000FF;">VertexStride</span><span style="color: #000000;">)</span><span style="color: #008000;">;</span></span>
<span style="vertical-align:top"> </span>
<span style="vertical-align:top">                    graphics.<span style="color: #0000FF;">GraphicsDevice</span>.<span style="color: #0000FF;">Indices</span> <span style="color: #008000;">=</span> mesh.<span style="color: #0000FF;">IndexBuffer</span><span style="color: #008000;">;</span></span>
<span style="vertical-align:top"> </span>
<span style="vertical-align:top">                    graphics.<span style="color: #0000FF;">GraphicsDevice</span>.<span style="color: #0000FF;">DrawIndexedPrimitives</span><span style="color: #000000;">(</span></span>
<span style="vertical-align:top">                                                        PrimitiveType.<span style="color: #0000FF;">TriangleList</span>,</span>
<span style="vertical-align:top">                                                        meshpart.<span style="color: #0000FF;">BaseVertex</span>,</span>
<span style="vertical-align:top">                                                        <span style="color: #FF0000;">0</span>,</span>
<span style="vertical-align:top">                                                        meshpart.<span style="color: #0000FF;">NumVertices</span>,</span>
<span style="vertical-align:top">                                                        meshpart.<span style="color: #0000FF;">StartIndex</span>,</span>
<span style="vertical-align:top">                                                        meshpart.<span style="color: #0000FF;">PrimitiveCount</span><span style="color: #000000;">)</span><span style="color: #008000;">;</span></span>
<span style="vertical-align:top">                <span style="color: #000000;">}</span></span>
<span style="vertical-align:top">            <span style="color: #000000;">}</span></span>
<span style="vertical-align:top">            pass.<span style="color: #0000FF;">End</span><span style="color: #000000;">(</span><span style="color: #000000;">)</span><span style="color: #008000;">;</span></span>
<span style="vertical-align:top">        <span style="color: #000000;">}</span></span>
<span style="vertical-align:top">        skinnedModelSnowEffect.<span style="color: #0000FF;">End</span><span style="color: #000000;">(</span><span style="color: #000000;">)</span><span style="color: #008000;">;</span></span>
<span style="vertical-align:top"> </span>
<span style="vertical-align:top">        graphics.<span style="color: #0000FF;">GraphicsDevice</span>.<span style="color: #0000FF;">ResolveRenderTarget</span><span style="color: #000000;">(</span><span style="color: #FF0000;">0</span><span style="color: #000000;">)</span><span style="color: #008000;">;</span></span>
<span style="vertical-align:top">        graphics.<span style="color: #0000FF;">GraphicsDevice</span>.<span style="color: #0000FF;">SetRenderTarget</span><span style="color: #000000;">(</span><span style="color: #FF0000;">0</span>, oldRT<span style="color: #000000;">)</span><span style="color: #008000;">;</span></span>
<span style="vertical-align:top">        graphics.<span style="color: #0000FF;">GraphicsDevice</span>.<span style="color: #0000FF;">DepthStencilBuffer</span> <span style="color: #008000;">=</span> oldDS<span style="color: #008000;">;</span></span>
<span style="vertical-align:top">    <span style="color: #000000;">}</span></span></pre>
</div>
</div>
</div>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p><span style="white-space: pre;"></span>В реальном приложении мы должны были бы обойти все модели на сцене, но в данный момент у нас только одна модель.</p>
<p>&nbsp;</p>
<p><span style="font-style: italic;"><span style="white-space: pre;"></span>Создание финальной карты смещения</span></p>
<p>&nbsp;</p>
<p><span style="white-space: pre;"></span>Для финального этапа нашего 
урока нам необходим еще один файл шейдера, содержащий несколько техник, 
для получения карты смещения. Как уже мы это делали не раз, в папке 
Shaders создайте новый файл и назовите его Snow.fx. Для будущих техник 
нам понадобятся текстуры inputMap, randomMap, snowMap и deformationMap. 
Текстура inputMap будет использоваться при копировании данных из одной 
цели визуализации в другую, randomMap будет содержать рандомные данные, 
snowMap содержать данные смещения, а deformationMap, как понятно данные 
деформации.</p>
<p>&nbsp;</p>
<div class="rj_insertcode">
<div class="rj_insertcode_hlsl">
<div class="hlsl" style="background: #f8f8f8; width: 100%; border-collapse: collapse; border: #054b6e 1px solid;">
<pre style="margin:0; background:none; vertical-align:top; padding: 0px 4px; font-size: 12px;"><span style="vertical-align:top">    texture inputMap<span style="color: #000066;">;</span></span>
<span style="vertical-align:top">    sampler inputSampler <span style="color: #000066;">:</span> register<span style="color: #000066;">(</span>s0<span style="color: #000066;">)</span>  <span style="color: #000066;">=</span> sampler_state</span>
<span style="vertical-align:top">    <span style="color: #000066;">{</span></span>
<span style="vertical-align:top">        Texture   <span style="color: #000066;">=</span> <span style="color: #000066;">&lt;</span>inputMap<span style="color: #000066;">&gt;;</span></span>
<span style="vertical-align:top"> </span>
<span style="vertical-align:top">        MipFilter <span style="color: #000066;">=</span> Linear<span style="color: #000066;">;</span></span>
<span style="vertical-align:top">        MinFilter <span style="color: #000066;">=</span> Linear<span style="color: #000066;">;</span></span>
<span style="vertical-align:top">        MagFilter <span style="color: #000066;">=</span> Linear<span style="color: #000066;">;</span></span>
<span style="vertical-align:top"> </span>
<span style="vertical-align:top">        AddressU  <span style="color: #000066;">=</span> Clamp<span style="color: #000066;">;</span></span>
<span style="vertical-align:top">        AddressV  <span style="color: #000066;">=</span> Clamp<span style="color: #000066;">;</span></span>
<span style="vertical-align:top">    <span style="color: #000066;">}</span><span style="color: #000066;">;</span></span>
<span style="vertical-align:top"> </span>
<span style="vertical-align:top">    texture randomMap<span style="color: #000066;">;</span></span>
<span style="vertical-align:top">    sampler randomSampler <span style="color: #000066;">:</span> register<span style="color: #000066;">(</span>s0<span style="color: #000066;">)</span><span style="color: #000066;">=</span> sampler_state</span>
<span style="vertical-align:top">    <span style="color: #000066;">{</span></span>
<span style="vertical-align:top">        Texture   <span style="color: #000066;">=</span> <span style="color: #000066;">&lt;</span>randomMap<span style="color: #000066;">&gt;;</span></span>
<span style="vertical-align:top"> </span>
<span style="vertical-align:top">        MipFilter <span style="color: #000066;">=</span> Linear<span style="color: #000066;">;</span></span>
<span style="vertical-align:top">        MinFilter <span style="color: #000066;">=</span> Linear<span style="color: #000066;">;</span></span>
<span style="vertical-align:top">        MagFilter <span style="color: #000066;">=</span> Linear<span style="color: #000066;">;</span></span>
<span style="vertical-align:top"> </span>
<span style="vertical-align:top">        AddressU  <span style="color: #000066;">=</span> mirror<span style="color: #000066;">;</span></span>
<span style="vertical-align:top">        AddressV  <span style="color: #000066;">=</span> mirror<span style="color: #000066;">;</span></span>
<span style="vertical-align:top">    <span style="color: #000066;">}</span><span style="color: #000066;">;</span></span>
<span style="vertical-align:top"> </span>
<span style="vertical-align:top">    texture snowMap<span style="color: #000066;">;</span></span>
<span style="vertical-align:top">    sampler snowSampler <span style="color: #000066;">=</span> sampler_state</span>
<span style="vertical-align:top">    <span style="color: #000066;">{</span></span>
<span style="vertical-align:top">        Texture   <span style="color: #000066;">=</span> <span style="color: #000066;">&lt;</span>snowMap<span style="color: #000066;">&gt;;</span></span>
<span style="vertical-align:top"> </span>
<span style="vertical-align:top">        MipFilter <span style="color: #000066;">=</span> Linear<span style="color: #000066;">;</span></span>
<span style="vertical-align:top">        MinFilter <span style="color: #000066;">=</span> Linear<span style="color: #000066;">;</span></span>
<span style="vertical-align:top">        MagFilter <span style="color: #000066;">=</span> Linear<span style="color: #000066;">;</span></span>
<span style="vertical-align:top"> </span>
<span style="vertical-align:top">        AddressU  <span style="color: #000066;">=</span> Clamp<span style="color: #000066;">;</span></span>
<span style="vertical-align:top">        AddressV  <span style="color: #000066;">=</span> Clamp<span style="color: #000066;">;</span></span>
<span style="vertical-align:top">    <span style="color: #000066;">}</span><span style="color: #000066;">;</span></span>
<span style="vertical-align:top"> </span>
<span style="vertical-align:top">    texture deformationMap<span style="color: #000066;">;</span></span>
<span style="vertical-align:top">    sampler deformationSampler <span style="color: #000066;">=</span> sampler_state</span>
<span style="vertical-align:top">    <span style="color: #000066;">{</span></span>
<span style="vertical-align:top">        Texture   <span style="color: #000066;">=</span> <span style="color: #000066;">&lt;</span>deformationMap<span style="color: #000066;">&gt;;</span></span>
<span style="vertical-align:top"> </span>
<span style="vertical-align:top">        MipFilter <span style="color: #000066;">=</span> Linear<span style="color: #000066;">;</span></span>
<span style="vertical-align:top">        MinFilter <span style="color: #000066;">=</span> Linear<span style="color: #000066;">;</span></span>
<span style="vertical-align:top">        MagFilter <span style="color: #000066;">=</span> Linear<span style="color: #000066;">;</span></span>
<span style="vertical-align:top"> </span>
<span style="vertical-align:top">        AddressU  <span style="color: #000066;">=</span> Clamp<span style="color: #000066;">;</span></span>
<span style="vertical-align:top">        AddressV  <span style="color: #000066;">=</span> Clamp<span style="color: #000066;">;</span></span>
<span style="vertical-align:top">    <span style="color: #000066;">}</span><span style="color: #000066;">;</span></span></pre>
</div>
</div>
</div>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p><span style="white-space: pre;"></span>При инициализации мы устанавливаем высоту снежного покрова в значение 32:</p>
<p>&nbsp;</p>
<div class="rj_insertcode">
<div class="rj_insertcode_hlsl">
<div class="hlsl" style="background: #f8f8f8; width: 100%; border-collapse: collapse; border: #054b6e 1px solid;">
<pre style="margin:0; background:none; vertical-align:top; padding: 0px 4px; font-size: 12px;"><span style="vertical-align:top">    <span style="color: #000066; font-weight: bold;">float4</span> InitSnowPS<span style="color: #000066;">(</span><span style="color: #333399; font-weight: bold;">in</span> <span style="color: #000066; font-weight: bold;">float2</span> uv <span style="color: #000066;">:</span> <span style="color: #551111;">TEXCOORD0</span><span style="color: #000066;">)</span> <span style="color: #000066;">:</span> <span style="color: #551111;">COLOR</span></span>
<span style="vertical-align:top">    <span style="color: #000066;">{</span></span>
<span style="vertical-align:top">        <span style="color: #000000; font-weight: bold;">return</span> <span style="color: #0000ff;">32</span><span style="color: #000066;">;</span></span>
<span style="vertical-align:top">    <span style="color: #000066;">}</span></span></pre>
</div>
</div>
</div>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p><span style="white-space: pre;"></span>При деформации снежного покрова мы просто вычитаем данные деформации и текущих данных высоты:</p>
<p>&nbsp;</p>
<div class="rj_insertcode">
<div class="rj_insertcode_hlsl">
<div class="hlsl" style="background: #f8f8f8; width: 100%; border-collapse: collapse; border: #054b6e 1px solid;">
<pre style="margin:0; background:none; vertical-align:top; padding: 0px 4px; font-size: 12px;"><span style="vertical-align:top">    <span style="color: #000066; font-weight: bold;">float4</span> AddDeformationPS<span style="color: #000066;">(</span><span style="color: #333399; font-weight: bold;">in</span> <span style="color: #000066; font-weight: bold;">float2</span> uv <span style="color: #000066;">:</span> <span style="color: #551111;">TEXCOORD0</span><span style="color: #000066;">)</span> <span style="color: #000066;">:</span> <span style="color: #551111;">COLOR</span></span>
<span style="vertical-align:top">    <span style="color: #000066;">{</span></span>
<span style="vertical-align:top">        <span style="color: #000066; font-weight: bold;">float</span> height        <span style="color: #000066;">=</span> <span style="color: #993333; font-weight: bold;">tex2D</span><span style="color: #000066;">(</span>snowSampler<span style="color: #000066;">,</span> uv<span style="color: #000066;">)</span><span style="color: #000066;">;</span></span>
<span style="vertical-align:top">        <span style="color: #000066; font-weight: bold;">float</span> deformation   <span style="color: #000066;">=</span> <span style="color: #993333; font-weight: bold;">tex2D</span><span style="color: #000066;">(</span>deformationSampler<span style="color: #000066;">,</span> uv<span style="color: #000066;">)</span><span style="color: #000066;">;</span></span>
<span style="vertical-align:top">        <span style="color: #000000; font-weight: bold;">return</span> <span style="color: #993333; font-weight: bold;">clamp</span><span style="color: #000066;">(</span>height <span style="color: #000066;">-</span> deformation<span style="color: #000066;">,</span> <span style="color: #0000ff;">0</span><span style="color: #000066;">,</span> <span style="color: #0000ff;">32</span><span style="color: #000066;">)</span><span style="color: #000066;">;</span></span>
<span style="vertical-align:top">    <span style="color: #000066;">}</span></span></pre>
</div>
</div>
</div>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p><span style="white-space: pre;"></span>Для «восстановления» снежного 
покрова, мы прибавляем к данным высоты случайные значения, которые 
считываем из текстуры randomMap. Значение randomNumbers меняется на 
каждом кадре, чтобы распределить данные по всей поверхности.</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<div class="rj_insertcode">
<div class="rj_insertcode_hlsl">
<div class="hlsl" style="background: #f8f8f8; width: 100%; border-collapse: collapse; border: #054b6e 1px solid;">
<pre style="margin:0; background:none; vertical-align:top; padding: 0px 4px; font-size: 12px;"><span style="vertical-align:top">    <span style="color: #000066; font-weight: bold;">float2</span> randomNumbers<span style="color: #000066;">;</span></span>
<span style="vertical-align:top">    <span style="color: #000066; font-weight: bold;">float4</span> AccumulateSnowPS<span style="color: #000066;">(</span><span style="color: #333399; font-weight: bold;">in</span> <span style="color: #000066; font-weight: bold;">float2</span> uv <span style="color: #000066;">:</span> <span style="color: #551111;">TEXCOORD0</span><span style="color: #000066;">)</span> <span style="color: #000066;">:</span> <span style="color: #551111;">COLOR</span></span>
<span style="vertical-align:top">    <span style="color: #000066;">{</span></span>
<span style="vertical-align:top">            <span style="color: #000066; font-weight: bold;">float</span> accumulatedSnow <span style="color: #000066;">=</span> <span style="color: #0000ff;">0.5</span> <span style="color: #000066;">*</span> <span style="color: #993333; font-weight: bold;">tex2D</span><span style="color: #000066;">(</span>randomSampler<span style="color: #000066;">,</span></span>
<span style="vertical-align:top">                                                uv <span style="color: #000066;">+</span> randomNumbers<span style="color: #000066;">)</span><span style="color: #000066;">;</span></span>
<span style="vertical-align:top"> </span>
<span style="vertical-align:top">            <span style="color: #000066; font-weight: bold;">float</span> height <span style="color: #000066;">=</span> <span style="color: #993333; font-weight: bold;">tex2D</span><span style="color: #000066;">(</span>snowSampler<span style="color: #000066;">,</span> uv<span style="color: #000066;">)</span><span style="color: #000066;">;</span></span>
<span style="vertical-align:top"> </span>
<span style="vertical-align:top">            <span style="color: #000000; font-weight: bold;">return</span> <span style="color: #993333; font-weight: bold;">clamp</span><span style="color: #000066;">(</span>accumulatedSnow <span style="color: #000066;">+</span> height<span style="color: #000066;">,</span> <span style="color: #0000ff;">0</span><span style="color: #000066;">,</span> <span style="color: #0000ff;">32</span><span style="color: #000066;">)</span><span style="color: #000066;">;</span></span>
<span style="vertical-align:top">    <span style="color: #000066;">}</span></span></pre>
</div>
</div>
</div>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p><span style="white-space: pre;"></span>Перед тем как скомбинировать 
карты деформации и смещения, мы для начала немного «размоем» (blur) 
карту деформации, что приведет к ее сглаживанию.</p>
<p>&nbsp;</p>
<div class="rj_insertcode">
<div class="rj_insertcode_hlsl">
<div class="hlsl" style="background: #f8f8f8; width: 100%; border-collapse: collapse; border: #054b6e 1px solid;">
<pre style="margin:0; background:none; vertical-align:top; padding: 0px 4px; font-size: 12px;"><span style="vertical-align:top">    <span style="color: #333399; font-weight: bold;">static</span> <span style="color: #000066; font-weight: bold;">float2</span> blurOffset<span style="color: #000066;">[</span><span style="color: #0000ff;">8</span><span style="color: #000066;">]</span> <span style="color: #000066;">=</span></span>
<span style="vertical-align:top">    <span style="color: #000066;">{</span></span>
<span style="vertical-align:top">        <span style="color: #000066; font-weight: bold;">float2</span><span style="color: #000066;">(</span> <span style="color: #0000ff;">1</span> <span style="color: #000066;">/</span> 256<span style="color: #000066;">.</span>0f <span style="color: #000066;">,</span>   <span style="color: #0000ff;">1</span> <span style="color: #000066;">/</span> 256<span style="color: #000066;">.</span>0f<span style="color: #000066;">)</span><span style="color: #000066;">,</span></span>
<span style="vertical-align:top">        <span style="color: #000066; font-weight: bold;">float2</span><span style="color: #000066;">(</span><span style="color: #000066;">-</span><span style="color: #0000ff;">1</span> <span style="color: #000066;">/</span> 256<span style="color: #000066;">.</span>0f <span style="color: #000066;">,</span>  <span style="color: #000066;">-</span><span style="color: #0000ff;">1</span> <span style="color: #000066;">/</span> 256<span style="color: #000066;">.</span>0f<span style="color: #000066;">)</span><span style="color: #000066;">,</span></span>
<span style="vertical-align:top">        <span style="color: #000066; font-weight: bold;">float2</span><span style="color: #000066;">(</span><span style="color: #000066;">-</span><span style="color: #0000ff;">1</span> <span style="color: #000066;">/</span> 256<span style="color: #000066;">.</span>0f <span style="color: #000066;">,</span>   <span style="color: #0000ff;">1</span> <span style="color: #000066;">/</span> 256<span style="color: #000066;">.</span>0f<span style="color: #000066;">)</span><span style="color: #000066;">,</span></span>
<span style="vertical-align:top">        <span style="color: #000066; font-weight: bold;">float2</span><span style="color: #000066;">(</span> <span style="color: #0000ff;">1</span> <span style="color: #000066;">/</span> 256<span style="color: #000066;">.</span>0f <span style="color: #000066;">,</span>  <span style="color: #000066;">-</span><span style="color: #0000ff;">1</span> <span style="color: #000066;">/</span> 256<span style="color: #000066;">.</span>0f<span style="color: #000066;">)</span><span style="color: #000066;">,</span></span>
<span style="vertical-align:top">        <span style="color: #000066; font-weight: bold;">float2</span><span style="color: #000066;">(</span> <span style="color: #0000ff;">1</span> <span style="color: #000066;">/</span> 256<span style="color: #000066;">.</span>0f <span style="color: #000066;">,</span>   0<span style="color: #000066;">.</span>0f<span style="color: #000066;">)</span><span style="color: #000066;">,</span></span>
<span style="vertical-align:top">        <span style="color: #000066; font-weight: bold;">float2</span><span style="color: #000066;">(</span><span style="color: #000066;">-</span><span style="color: #0000ff;">1</span> <span style="color: #000066;">/</span> 256<span style="color: #000066;">.</span>0f <span style="color: #000066;">,</span>   0<span style="color: #000066;">.</span>0f<span style="color: #000066;">)</span><span style="color: #000066;">,</span></span>
<span style="vertical-align:top">        <span style="color: #000066; font-weight: bold;">float2</span><span style="color: #000066;">(</span>0<span style="color: #000066;">.</span>0f <span style="color: #000066;">,</span>          <span style="color: #0000ff;">1</span> <span style="color: #000066;">/</span> 256<span style="color: #000066;">.</span>0f<span style="color: #000066;">)</span><span style="color: #000066;">,</span></span>
<span style="vertical-align:top">        <span style="color: #000066; font-weight: bold;">float2</span><span style="color: #000066;">(</span>0<span style="color: #000066;">.</span>0f <span style="color: #000066;">,</span>         <span style="color: #000066;">-</span><span style="color: #0000ff;">1</span> <span style="color: #000066;">/</span> 256<span style="color: #000066;">.</span>0f<span style="color: #000066;">)</span></span>
<span style="vertical-align:top">    <span style="color: #000066;">}</span><span style="color: #000066;">;</span></span>
<span style="vertical-align:top"> </span>
<span style="vertical-align:top">    <span style="color: #000066; font-weight: bold;">float4</span> BlurPS<span style="color: #000066;">(</span><span style="color: #333399; font-weight: bold;">in</span> <span style="color: #000066; font-weight: bold;">float2</span> uv <span style="color: #000066;">:</span> <span style="color: #551111;">TEXCOORD0</span><span style="color: #000066;">)</span> <span style="color: #000066;">:</span> <span style="color: #551111;">COLOR</span></span>
<span style="vertical-align:top">    <span style="color: #000066;">{</span></span>
<span style="vertical-align:top">        <span style="color: #000066; font-weight: bold;">float4</span> color <span style="color: #000066;">=</span> <span style="color: #993333; font-weight: bold;">tex2D</span><span style="color: #000066;">(</span>deformationSampler<span style="color: #000066;">,</span> uv<span style="color: #000066;">)</span><span style="color: #000066;">;</span></span>
<span style="vertical-align:top"> </span>
<span style="vertical-align:top">        <span style="color: #000000; font-weight: bold;">for</span><span style="color: #000066;">(</span> <span style="color: #000066; font-weight: bold;">int</span> i <span style="color: #000066;">=</span> <span style="color: #0000ff;">0</span><span style="color: #000066;">;</span> i <span style="color: #000066;">&lt;</span> <span style="color: #0000ff;">8</span><span style="color: #000066;">;</span> i<span style="color: #000066;">++</span><span style="color: #000066;">)</span></span>
<span style="vertical-align:top">        <span style="color: #000066;">{</span></span>
<span style="vertical-align:top">            color <span style="color: #000066;">+=</span> <span style="color: #993333; font-weight: bold;">tex2D</span><span style="color: #000066;">(</span>deformationSampler<span style="color: #000066;">,</span></span>
<span style="vertical-align:top">                           uv <span style="color: #000066;">+</span> blurOffset<span style="color: #000066;">[</span>i<span style="color: #000066;">]</span><span style="color: #000066;">)</span><span style="color: #000066;">;</span></span>
<span style="vertical-align:top">        <span style="color: #000066;">}</span></span>
<span style="vertical-align:top"> </span>
<span style="vertical-align:top">        <span style="color: #000000; font-weight: bold;">return</span> color <span style="color: #000066;">/</span> 9<span style="color: #000066;">.</span>0f<span style="color: #000066;">;</span></span>
<span style="vertical-align:top">    <span style="color: #000066;">}</span></span></pre>
</div>
</div>
</div>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p><span style="white-space: pre;"></span>Далее приведен пиксельный шейдер для копирования текстур и техники для каждого из шейдеров.</p>
<p>&nbsp;</p>
<div class="rj_insertcode">
<div class="rj_insertcode_hlsl">
<div class="hlsl" style="background: #f8f8f8; width: 100%; border-collapse: collapse; border: #054b6e 1px solid;">
<pre style="margin:0; background:none; vertical-align:top; padding: 0px 4px; font-size: 12px;"><span style="vertical-align:top">    <span style="color: #000066; font-weight: bold;">float4</span> CopyTexturePS<span style="color: #000066;">(</span><span style="color: #333399; font-weight: bold;">in</span> <span style="color: #000066; font-weight: bold;">float2</span> uv <span style="color: #000066;">:</span> <span style="color: #551111;">TEXCOORD0</span><span style="color: #000066;">)</span> <span style="color: #000066;">:</span> <span style="color: #551111;">COLOR</span></span>
<span style="vertical-align:top">    <span style="color: #000066;">{</span></span>
<span style="vertical-align:top">        <span style="color: #000000; font-weight: bold;">return</span> <span style="color: #993333; font-weight: bold;">tex2D</span><span style="color: #000066;">(</span>inputSampler<span style="color: #000066;">,</span> uv<span style="color: #000066;">)</span><span style="color: #000066;">;</span></span>
<span style="vertical-align:top">    <span style="color: #000066;">}</span></span>
<span style="vertical-align:top"> </span>
<span style="vertical-align:top">    <span style="color: #333399; font-weight: bold;">technique</span> AddDeformation</span>
<span style="vertical-align:top">    <span style="color: #000066;">{</span></span>
<span style="vertical-align:top">        <span style="color: #333399; font-weight: bold;">pass</span> P0</span>
<span style="vertical-align:top">        <span style="color: #000066;">{</span></span>
<span style="vertical-align:top">            pixelShader  <span style="color: #000066;">=</span> compile ps_3_0 AddDeformationPS<span style="color: #000066;">(</span><span style="color: #000066;">)</span><span style="color: #000066;">;</span></span>
<span style="vertical-align:top">        <span style="color: #000066;">}</span></span>
<span style="vertical-align:top">    <span style="color: #000066;">}</span></span>
<span style="vertical-align:top"> </span>
<span style="vertical-align:top">    <span style="color: #333399; font-weight: bold;">technique</span> AccumulateSnow</span>
<span style="vertical-align:top">    <span style="color: #000066;">{</span></span>
<span style="vertical-align:top">        <span style="color: #333399; font-weight: bold;">pass</span> P0</span>
<span style="vertical-align:top">        <span style="color: #000066;">{</span></span>
<span style="vertical-align:top">            pixelShader  <span style="color: #000066;">=</span> compile ps_3_0 AccumulateSnowPS<span style="color: #000066;">(</span><span style="color: #000066;">)</span><span style="color: #000066;">;</span></span>
<span style="vertical-align:top">        <span style="color: #000066;">}</span></span>
<span style="vertical-align:top">    <span style="color: #000066;">}</span></span>
<span style="vertical-align:top"> </span>
<span style="vertical-align:top">    <span style="color: #333399; font-weight: bold;">technique</span> BlurDeformation</span>
<span style="vertical-align:top">    <span style="color: #000066;">{</span></span>
<span style="vertical-align:top">        <span style="color: #333399; font-weight: bold;">pass</span> P0</span>
<span style="vertical-align:top">        <span style="color: #000066;">{</span></span>
<span style="vertical-align:top">            pixelShader  <span style="color: #000066;">=</span> compile ps_3_0 BlurPS<span style="color: #000066;">(</span><span style="color: #000066;">)</span><span style="color: #000066;">;</span></span>
<span style="vertical-align:top">        <span style="color: #000066;">}</span></span>
<span style="vertical-align:top">    <span style="color: #000066;">}</span></span>
<span style="vertical-align:top"> </span>
<span style="vertical-align:top">    <span style="color: #333399; font-weight: bold;">technique</span> InitSnow</span>
<span style="vertical-align:top">    <span style="color: #000066;">{</span></span>
<span style="vertical-align:top">        <span style="color: #333399; font-weight: bold;">pass</span> P0</span>
<span style="vertical-align:top">        <span style="color: #000066;">{</span></span>
<span style="vertical-align:top">            pixelShader  <span style="color: #000066;">=</span> compile ps_3_0 InitSnowPS<span style="color: #000066;">(</span><span style="color: #000066;">)</span><span style="color: #000066;">;</span></span>
<span style="vertical-align:top">        <span style="color: #000066;">}</span></span>
<span style="vertical-align:top">    <span style="color: #000066;">}</span></span>
<span style="vertical-align:top"> </span>
<span style="vertical-align:top">    <span style="color: #333399; font-weight: bold;">technique</span> CopyTexture</span>
<span style="vertical-align:top">    <span style="color: #000066;">{</span></span>
<span style="vertical-align:top">        <span style="color: #333399; font-weight: bold;">pass</span> P0</span>
<span style="vertical-align:top">        <span style="color: #000066;">{</span></span>
<span style="vertical-align:top">            pixelShader  <span style="color: #000066;">=</span> compile ps_3_0 CopyTexturePS<span style="color: #000066;">(</span><span style="color: #000066;">)</span><span style="color: #000066;">;</span></span>
<span style="vertical-align:top">        <span style="color: #000066;">}</span></span>
<span style="vertical-align:top">    <span style="color: #000066;">}</span></span></pre>
</div>
</div>
</div>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p><span style="white-space: pre;"></span>Возвращаемся в Game1.cs и загружаем шейдер в методе LoadGraphicsContent:</p>
<p>&nbsp;</p>
<div class="rj_insertcode">
<div class="rj_insertcode_csharp">
<div class="csharp" style="background: #f8f8f8; width: 100%; border-collapse: collapse; border: #054b6e 1px solid;">
<pre style="margin:0; background:none; vertical-align:top; padding: 0px 4px; font-size: 12px;"><span style="vertical-align:top">    <span style="color: #0600FF;">protected</span> <span style="color: #0600FF;">override</span> <span style="color: #0600FF;">void</span> LoadGraphicsContent<span style="color: #000000;">(</span><span style="color: #FF0000;">bool</span> loadAllContent<span style="color: #000000;">)</span></span>
<span style="vertical-align:top">    <span style="color: #000000;">{</span></span>
<span style="vertical-align:top">        <span style="color: #0600FF;">if</span> <span style="color: #000000;">(</span>loadAllContent<span style="color: #000000;">)</span></span>
<span style="vertical-align:top">        <span style="color: #000000;">{</span></span>
<span style="vertical-align:top">            <span style="color: #000000;">[</span>...<span style="color: #000000;">]</span></span>
<span style="vertical-align:top">            snowEffect <span style="color: #008000;">=</span> content.<span style="color: #0000FF;">Load</span><span style="color: #008000;">&lt;</span>Effect<span style="color: #008000;">&gt;</span><span style="color: #000000;">(</span><span style="color: #666666;">"Shaders<span style="color: #008080; font-weight: bold;">\\</span>Snow"</span><span style="color: #000000;">)</span><span style="color: #008000;">;</span></span>
<span style="vertical-align:top">        <span style="color: #000000;">}</span></span>
<span style="vertical-align:top">        <span style="color: #000000;">[</span>...<span style="color: #000000;">]</span></span>
<span style="vertical-align:top">    <span style="color: #000000;">}</span></span></pre>
</div>
</div>
</div>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p><span style="white-space: pre;"></span>Так же как и в уроке с 
системой частиц нам необходим вспомогательный метод, который будет 
принимать на вход наименования техник и реализовывать работу с целями 
визуализации.</p>
<p>&nbsp;</p>
<div class="rj_insertcode">
<div class="rj_insertcode_csharp">
<div class="csharp" style="background: #f8f8f8; width: 100%; border-collapse: collapse; border: #054b6e 1px solid;">
<pre style="margin: 0; background: none; vertical-align: top; padding: 0px 4px; font-size: 12px;"><span style="vertical-align: top;"><span style="color: #0600ff;">private</span> <span style="color: #0600ff;">void</span> DoSnowTechnique<span style="color: #000000;">(</span><span style="color: #ff0000;">string</span> technique, RenderTarget2D resultTarget<span style="color: #000000;">)</span></span>
<span style="vertical-align: top;"><span style="color: #000000;">{</span></span>
<span style="vertical-align: top;">    RenderTarget2D oldRT <span style="color: #008000;">=</span> graphics.<span style="color: #0000ff;">GraphicsDevice</span>.<span style="color: #0000ff;">GetRenderTarget</span><span style="color: #000000;">(</span><span style="color: #ff0000;">0</span><span style="color: #000000;">)</span></span>
<span style="vertical-align: top;">                                                        <span style="color: #0600ff;">as</span> RenderTarget2D<span style="color: #008000;">;</span></span>
<span style="vertical-align: top;">    DepthStencilBuffer oldDS <span style="color: #008000;">=</span> graphics.<span style="color: #0000ff;">GraphicsDevice</span>.<span style="color: #0000ff;">DepthStencilBuffer</span><span style="color: #008000;">;</span></span>
<span style="vertical-align: top;">    graphics.<span style="color: #0000ff;">GraphicsDevice</span>.<span style="color: #0000ff;">DepthStencilBuffer</span> <span style="color: #008000;">=</span> snowDepth<span style="color: #008000;">;</span></span>
<span style="vertical-align: top;">    graphics.<span style="color: #0000ff;">GraphicsDevice</span>.<span style="color: #0000ff;">SetRenderTarget</span><span style="color: #000000;">(</span><span style="color: #ff0000;">0</span>, temporaryRT<span style="color: #000000;">)</span><span style="color: #008000;">;</span></span>
<span style="vertical-align: top;">    graphics.<span style="color: #0000ff;">GraphicsDevice</span>.<span style="color: #0000ff;">Clear</span><span style="color: #000000;">(</span>Color.<span style="color: #0000ff;">White</span><span style="color: #000000;">)</span><span style="color: #008000;">;</span></span>
<span style="vertical-align: top;">    spriteBatch.<span style="color: #0000ff;">Begin</span><span style="color: #000000;">(</span>SpriteBlendMode.<span style="color: #0000ff;">None</span>, SpriteSortMode.<span style="color: #0000ff;">Immediate</span>,</span>
<span style="vertical-align: top;">                      SaveStateMode.<span style="color: #0000ff;">None</span><span style="color: #000000;">)</span><span style="color: #008000;">;</span></span>
<span style="vertical-align: top;">    snowEffect.<span style="color: #0000ff;">CurrentTechnique</span> <span style="color: #008000;">=</span> snowEffect.<span style="color: #0000ff;">Techniques</span><span style="color: #000000;">[</span>technique<span style="color: #000000;">]</span><span style="color: #008000;">;</span></span>
<span style="vertical-align: top;">    snowEffect.<span style="color: #0000ff;">Begin</span><span style="color: #000000;">(</span><span style="color: #000000;">)</span><span style="color: #008000;">;</span></span>
<span style="vertical-align: top;"> </span>
<span style="vertical-align: top;">    <span style="color: #0600ff;">if</span> <span style="color: #000000;">(</span>isSnowReset<span style="color: #000000;">)</span></span>
<span style="vertical-align: top;">    <span style="color: #000000;">{</span></span>
<span style="vertical-align: top;">        snowEffect.<span style="color: #0000ff;">Parameters</span><span style="color: #000000;">[</span><span style="color: #666666;">"snowMap"</span><span style="color: #000000;">]</span>.<span style="color: #0000ff;">SetValue</span><span style="color: #000000;">(</span> snowRT.<span style="color: #0000ff;">GetTexture</span><span style="color: #000000;">(</span><span style="color: #000000;">)</span><span style="color: #000000;">)</span><span style="color: #008000;">;</span></span>
<span style="vertical-align: top;"> </span>
<span style="vertical-align: top;">        snowEffect.<span style="color: #0000ff;">Parameters</span><span style="color: #000000;">[</span><span style="color: #666666;">"deformationMap"</span><span style="color: #000000;">]</span>.<span style="color: #0000ff;">SetValue</span><span style="color: #000000;">(</span></span>
<span style="vertical-align: top;">                                                deformationRT.<span style="color: #0000ff;">GetTexture</span><span style="color: #000000;">(</span><span style="color: #000000;">)</span><span style="color: #000000;">)</span><span style="color: #008000;">;</span></span>
<span style="vertical-align: top;">    <span style="color: #000000;">}</span></span>
<span style="vertical-align: top;">    snowEffect.<span style="color: #0000ff;">Parameters</span><span style="color: #000000;">[</span><span style="color: #666666;">"randomNumbers"</span><span style="color: #000000;">]</span>.<span style="color: #0000ff;">SetValue</span><span style="color: #000000;">(</span></span>
<span style="vertical-align: top;">                                        <a href="http://www.google.com/search?q=new+msdn.microsoft.com"><span style="color: #008000;">new</span></a> Vector2<span style="color: #000000;">(</span><span style="color: #000000;">(</span><span style="color: #ff0000;">float</span><span style="color: #000000;">)</span>random.<span style="color: #0000ff;">NextDouble</span><span style="color: #000000;">(</span><span style="color: #000000;">)</span>,</span>
<span style="vertical-align: top;">                                                    <span style="color: #000000;">(</span><span style="color: #ff0000;">float</span><span style="color: #000000;">)</span>random.<span style="color: #0000ff;">NextDouble</span><span style="color: #000000;">(</span><span style="color: #000000;">)</span><span style="color: #000000;">)</span><span style="color: #000000;">)</span><span style="color: #008000;">;</span></span>
<span style="vertical-align: top;"> </span>
<span style="vertical-align: top;">    snowEffect.<span style="color: #0000ff;">CurrentTechnique</span>.<span style="color: #0000ff;">Passes</span><span style="color: #000000;">[</span><span style="color: #ff0000;">0</span><span style="color: #000000;">]</span>.<span style="color: #0000ff;">Begin</span><span style="color: #000000;">(</span><span style="color: #000000;">)</span><span style="color: #008000;">;</span></span>
<span style="vertical-align: top;"> </span>
<span style="vertical-align: top;">    spriteBatch.<span style="color: #0000ff;">Draw</span><span style="color: #000000;">(</span>noiseTexture, <a href="http://www.google.com/search?q=new+msdn.microsoft.com"><span style="color: #008000;">new</span></a> Rectangle<span style="color: #000000;">(</span><span style="color: #ff0000;">0</span>, <span style="color: #ff0000;">0</span>, <span style="color: #ff0000;">256</span>, <span style="color: #ff0000;">256</span><span style="color: #000000;">)</span>, Color.<span style="color: #0000ff;">White</span><span style="color: #000000;">)</span><span style="color: #008000;">;</span></span>
<span style="vertical-align: top;"> </span>
<span style="vertical-align: top;">    snowEffect.<span style="color: #0000ff;">CurrentTechnique</span>.<span style="color: #0000ff;">Passes</span><span style="color: #000000;">[</span><span style="color: #ff0000;">0</span><span style="color: #000000;">]</span>.<span style="color: #0000ff;">End</span><span style="color: #000000;">(</span><span style="color: #000000;">)</span><span style="color: #008000;">;</span></span>
<span style="vertical-align: top;">    snowEffect.<span style="color: #0000ff;">End</span><span style="color: #000000;">(</span><span style="color: #000000;">)</span><span style="color: #008000;">;</span></span>
<span style="vertical-align: top;">    spriteBatch.<span style="color: #0000ff;">End</span><span style="color: #000000;">(</span><span style="color: #000000;">)</span><span style="color: #008000;">;</span></span>
<span style="vertical-align: top;"> </span>
<span style="vertical-align: top;">    graphics.<span style="color: #0000ff;">GraphicsDevice</span>.<span style="color: #0000ff;">ResolveRenderTarget</span><span style="color: #000000;">(</span><span style="color: #ff0000;">0</span><span style="color: #000000;">)</span><span style="color: #008000;">;</span></span>
<span style="vertical-align: top;">    graphics.<span style="color: #0000ff;">GraphicsDevice</span>.<span style="color: #0000ff;">SetRenderTarget</span><span style="color: #000000;">(</span><span style="color: #ff0000;">0</span>, resultTarget<span style="color: #000000;">)</span><span style="color: #008000;">;</span></span>
<span style="vertical-align: top;">    spriteBatch.<span style="color: #0000ff;">Begin</span><span style="color: #000000;">(</span>SpriteBlendMode.<span style="color: #0000ff;">None</span>, SpriteSortMode.<span style="color: #0000ff;">Immediate</span>,</span>
<span style="vertical-align: top;">                      SaveStateMode.<span style="color: #0000ff;">None</span><span style="color: #000000;">)</span><span style="color: #008000;">;</span></span>
<span style="vertical-align: top;">    snowEffect.<span style="color: #0000ff;">CurrentTechnique</span> <span style="color: #008000;">=</span> snowEffect.<span style="color: #0000ff;">Techniques</span><span style="color: #000000;">[</span><span style="color: #666666;">"CopyTexture"</span><span style="color: #000000;">]</span><span style="color: #008000;">;</span></span>
<span style="vertical-align: top;">    snowEffect.<span style="color: #0000ff;">Begin</span><span style="color: #000000;">(</span><span style="color: #000000;">)</span><span style="color: #008000;">;</span></span>
<span style="vertical-align: top;">    snowEffect.<span style="color: #0000ff;">CurrentTechnique</span>.<span style="color: #0000ff;">Passes</span><span style="color: #000000;">[</span><span style="color: #ff0000;">0</span><span style="color: #000000;">]</span>.<span style="color: #0000ff;">Begin</span><span style="color: #000000;">(</span><span style="color: #000000;">)</span><span style="color: #008000;">;</span></span>
<span style="vertical-align: top;"> </span>
<span style="vertical-align: top;">    spriteBatch.<span style="color: #0000ff;">Draw</span><span style="color: #000000;">(</span>temporaryRT.<span style="color: #0000ff;">GetTexture</span><span style="color: #000000;">(</span><span style="color: #000000;">)</span>, <a href="http://www.google.com/search?q=new+msdn.microsoft.com"><span style="color: #008000;">new</span></a> Rectangle<span style="color: #000000;">(</span><span style="color: #ff0000;">0</span>, <span style="color: #ff0000;">0</span>, <span style="color: #ff0000;">256</span>, <span style="color: #ff0000;">256</span><span style="color: #000000;">)</span>,</span>
<span style="vertical-align: top;">                     Color.<span style="color: #0000ff;">White</span><span style="color: #000000;">)</span><span style="color: #008000;">;</span></span>
<span style="vertical-align: top;"> </span>
<span style="vertical-align: top;"> </span>
<span style="vertical-align: top;">    snowEffect.<span style="color: #0000ff;">CurrentTechnique</span>.<span style="color: #0000ff;">Passes</span><span style="color: #000000;">[</span><span style="color: #ff0000;">0</span><span style="color: #000000;">]</span>.<span style="color: #0000ff;">End</span><span style="color: #000000;">(</span><span style="color: #000000;">)</span><span style="color: #008000;">;</span></span>
<span style="vertical-align: top;">    snowEffect.<span style="color: #0000ff;">End</span><span style="color: #000000;">(</span><span style="color: #000000;">)</span><span style="color: #008000;">;</span></span>
<span style="vertical-align: top;">    spriteBatch.<span style="color: #0000ff;">End</span><span style="color: #000000;">(</span><span style="color: #000000;">)</span><span style="color: #008000;">;</span></span>
<span style="vertical-align: top;">    graphics.<span style="color: #0000ff;">GraphicsDevice</span>.<span style="color: #0000ff;">ResolveRenderTarget</span><span style="color: #000000;">(</span><span style="color: #ff0000;">0</span><span style="color: #000000;">)</span><span style="color: #008000;">;</span></span>
<span style="vertical-align: top;">    graphics.<span style="color: #0000ff;">GraphicsDevice</span>.<span style="color: #0000ff;">SetRenderTarget</span><span style="color: #000000;">(</span><span style="color: #ff0000;">0</span>, oldRT<span style="color: #000000;">)</span><span style="color: #008000;">;</span></span>
<span style="vertical-align: top;">    graphics.<span style="color: #0000ff;">GraphicsDevice</span>.<span style="color: #0000ff;">DepthStencilBuffer</span> <span style="color: #008000;">=</span> oldDS<span style="color: #008000;">;</span></span>
<span style="vertical-align: top;"><span style="color: #000000;">}</span></span></pre>
</div>
</div>
</div>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p><span style="white-space: pre;"></span>Даная функция будет вызываться
 с различными параметрами. Для начала если данные о снежном покрове 
должны быть «сброшены», мы вызываем ее с указанием техники InitSnow. 
Затем первичная отрисовка карты деформации, затем ее размытие, затем 
«спекание» с картой смещения и наконец для «восстановления» снежного 
покрова. Все эти вызовы мы помещаем в начало метода Draw(). И только 
после этого мы можем передать полученную текстуру в параметр 
displacementMap шейдера VTFSnow.</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<div class="rj_insertcode">
<div class="rj_insertcode_csharp">
<div class="csharp" style="background: #f8f8f8; width: 100%; border-collapse: collapse; border: #054b6e 1px solid;">
<pre style="margin:0; background:none; vertical-align:top; padding: 0px 4px; font-size: 12px;"><span style="vertical-align:top">    <span style="color: #0600FF;">void</span> UpdateSnow<span style="color: #000000;">(</span><span style="color: #000000;">)</span></span>
<span style="vertical-align:top">    <span style="color: #000000;">{</span></span>
<span style="vertical-align:top">        <span style="color: #0600FF;">if</span> <span style="color: #000000;">(</span><span style="color: #008000;">!</span>isSnowReset<span style="color: #000000;">)</span></span>
<span style="vertical-align:top">        <span style="color: #000000;">{</span></span>
<span style="vertical-align:top">            DoSnowTechnique<span style="color: #000000;">(</span><span style="color: #666666;">"InitSnow"</span>, snowRT<span style="color: #000000;">)</span><span style="color: #008000;">;</span></span>
<span style="vertical-align:top">            isSnowReset <span style="color: #008000;">=</span> true<span style="color: #008000;">;</span></span>
<span style="vertical-align:top">        <span style="color: #000000;">}</span></span>
<span style="vertical-align:top"> </span>
<span style="vertical-align:top">        RenderDeformationMap<span style="color: #000000;">(</span><span style="color: #000000;">)</span><span style="color: #008000;">;</span></span>
<span style="vertical-align:top"> </span>
<span style="vertical-align:top">        DoSnowTechnique<span style="color: #000000;">(</span><span style="color: #666666;">"BlurDeformation"</span>, deformationRT<span style="color: #000000;">)</span><span style="color: #008000;">;</span></span>
<span style="vertical-align:top">        DoSnowTechnique<span style="color: #000000;">(</span><span style="color: #666666;">"AddDeformation"</span>, snowRT<span style="color: #000000;">)</span><span style="color: #008000;">;</span></span>
<span style="vertical-align:top">        DoSnowTechnique<span style="color: #000000;">(</span><span style="color: #666666;">"AccumulateSnow"</span>, snowRT<span style="color: #000000;">)</span><span style="color: #008000;">;</span></span>
<span style="vertical-align:top">    <span style="color: #000000;">}</span></span>
<span style="vertical-align:top"> </span>
<span style="vertical-align:top">    <span style="color: #0600FF;">protected</span> <span style="color: #0600FF;">override</span> <span style="color: #0600FF;">void</span> Draw<span style="color: #000000;">(</span>GameTime gameTime<span style="color: #000000;">)</span></span>
<span style="vertical-align:top">    <span style="color: #000000;">{</span></span>
<span style="vertical-align:top">        UpdateSnow<span style="color: #000000;">(</span><span style="color: #000000;">)</span><span style="color: #008000;">;</span></span>
<span style="vertical-align:top">        graphics.<span style="color: #0000FF;">GraphicsDevice</span>.<span style="color: #0000FF;">Clear</span><span style="color: #000000;">(</span>Color.<span style="color: #0000FF;">CornflowerBlue</span><span style="color: #000000;">)</span><span style="color: #008000;">;</span></span>
<span style="vertical-align:top"> </span>
<span style="vertical-align:top">        graphics.<span style="color: #0000FF;">GraphicsDevice</span>.<span style="color: #0000FF;">RenderState</span>.<span style="color: #0000FF;">CullMode</span> <span style="color: #008000;">=</span> CullMode.<span style="color: #0000FF;">None</span><span style="color: #008000;">;</span></span>
<span style="vertical-align:top">        graphics.<span style="color: #0000FF;">GraphicsDevice</span>.<span style="color: #0000FF;">RenderState</span>.<span style="color: #0000FF;">DepthBufferEnable</span> <span style="color: #008000;">=</span> true<span style="color: #008000;">;</span></span>
<span style="vertical-align:top"> </span>
<span style="vertical-align:top">        gridEffect.<span style="color: #0000FF;">Parameters</span><span style="color: #000000;">[</span><span style="color: #666666;">"displacementMap"</span><span style="color: #000000;">]</span>.<span style="color: #0000FF;">SetValue</span><span style="color: #000000;">(</span>snowRT.<span style="color: #0000FF;">GetTexture</span><span style="color: #000000;">(</span><span style="color: #000000;">)</span><span style="color: #000000;">)</span><span style="color: #008000;">;</span></span>
<span style="vertical-align:top"> </span>
<span style="vertical-align:top">        <span style="color: #000000;">[</span>...<span style="color: #000000;">]</span></span>
<span style="vertical-align:top">    <span style="color: #000000;">}</span></span></pre>
</div>
</div>
</div>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>Запустите приложение и вы увидите как персонаж, несколько не напрягаясь, преодолевает снежные сугробы.</p>
<p><img src="XnaDev.ru%20-%20XNA%20%D0%BD%D0%BE%D0%B2%D0%BE%D1%81%D1%82%D0%B8%20%D1%83%D1%80%D0%BE%D0%BA%D0%B8%20%D1%81%D1%82%D0%B0%D1%82%D1%8C%D0%B8%20%28xna.ru%29_files/tough3.PNG" border="0" height="450" width="600"></p>
<p><img src="XnaDev.ru%20-%20XNA%20%D0%BD%D0%BE%D0%B2%D0%BE%D1%81%D1%82%D0%B8%20%D1%83%D1%80%D0%BE%D0%BA%D0%B8%20%D1%81%D1%82%D0%B0%D1%82%D1%8C%D0%B8%20%28xna.ru%29_files/trail.PNG" border="0" height="450" width="600"></p>
<p><span style="white-space: pre;"></span>В данной части мы рассмотрели 
как можно сгенерировать карту деформации путем рендеринга сцены, 
используя специфичные матрицы, как скомбинировать полученную карту с 
картой смещения и как получить эффект оставления следов на снегу. Данный
 эффект можно скомбинировать с алгоритмом генерации нормалей для 
нормального освещения и с системой частиц для более реалистичного 
результата. Если вы решите реализовать систему частиц, то можете 
реализовать «восстановление» снежного покрова на основе текстуры 
содержащей данные о местоположении частиц и заставить частицы «умирать» 
когда они касаются снега, основываясь на данных карты смещения.</p>
<p>&nbsp;</p>
<p><span style="white-space: pre;"></span>Полный код этой главы можно скачать тут: <a href="http://www.xnadev.ru/_Content/Tutorials/VTF/Chapter4.zip" target="_blank">Chapter4.rar</a></p>
<p>&nbsp;</p>
<p></p>
<p>&nbsp;</p>
<p><span style="white-space: pre;"></span><span style="font-weight: bold;">Итоги и куда двигаться дальше</span></p>
<p>&nbsp;</p>
<p><span style="white-space: pre;"></span>В данном уроке мы рассмотрели 
четыре способа использования вершинных текстур, но это только вершина 
айсберга того, где их можно использовать. Эффекты, рассмотренные здесь, 
были реализованы на скорую руку и если немного подумать, то можно было 
написать более «красивую» реализацию.</p>
<p><span style="white-space: pre;"></span>Для отрисовки ландшафта можно 
использовать вершинную текстуру с различной плотностью сетки, более 
высокую плотность использовать в том месте куда у нас в данный момент 
смотрит камера и смещать ее по мере движения камеры по сцене. При таком 
подходе мы получим автоматическую реализацию LOD (Level Of Detail) 
ландшафта. Это вполне реализуемо с VTF так как данные высоты постоянно 
рассчитываются в вершинном шейдере. Это использовано в технике geometric
 clipmaps разработанной Hugues Hoppe и Frank Losasso .</p>
<p><span style="white-space: pre;"></span>Существует просто масса путей 
для усовершенствования системы частиц. Не так давно тред Lord Ikon в 
форуме creators.xna.com натолкнул на идею по усовершенствованию системы 
частиц. Первое, это определение столкновений частиц со всеми объектами 
сцены. Мы все видели, как это реализовать с примере с ландшафтом, когда у
 нас была карта высот. Но немного подумав, я понял как это реализовать 
со всеми объектами сцены. Для этого нам надо отрисовать сцену с 
положения камеры «сверху вниз» и сгенерировать динамическую карту высот 
для всей сцены вместе со всеми объектами. Так как мы только что 
закончили четвертую часть урока, не так уж и трудно себе представить, 
как это сделать, с помощью ортогональной матрицы и специального 
пиксельного шейдера. Полученную карту вида сверху затем использовать в 
пиксельном шейдере системы частиц. Это особенной действенным окажется 
для частиц которые имеют свойство падать с неба: снег, дождь. Вид камеры
 может быть немного подправлен если нам нужен будет не «прямой» дождь, а
 идущий немного под углом. Еще одно дополнение к системе частиц, это 
если взглянуть на наш пример и поперемещаться внутри системы, то можно 
заметить разницу в плотности идущих частиц. Все было бы нормально если 
бы мы держали систему частиц оцентрованной относительно положения 
наблюдателя. Но для этого надо решить одну проблему, надо чтобы частицы 
не двигались вслед за наблюдателем. Я до сих пор работаю над этим и как 
только найду решение, дам знать.</p>
<p><span style="white-space: pre;"></span>Существуем множество других 
эффектов использующих вершинные текстуры: симуляция ткани (cloth 
simulation), реалистичный рендеринг воды, который был рассмотрен в GPU 
Gems 2 и у ATI есть пример сортировки спрайтов используя R2VB, который 
можно переписать с использованием вершинных текстур.</p>
<p><span style="white-space: pre;"></span>Я надеюсь, вам понравился 
данный урок, и он подтолкнет вас на дальнейшие эксперименты с вершинными
 текстурами и поиск новых путей их использования. Пожалуйста, дайте мне 
знать, если найдете что-нибудь интересное.</p>
<div><br></div>
<p>&nbsp;</p>


</body></html>