<!DOCTYPE html PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN">
<html><head>
<title>Тонкая настройка параметров TCP/IP под толстые каналы</title>
<meta name="keywords" content="восстановление паролей, взлом паролей, взлом хэшей, пароль, пароли, хэш, хэши, хеш, хеши, хэши с форумов, соленые хэши, MD5, SHA-1, DES, NTLM, перебор паролей, аудит паролей, атака, GPU, NVIDIA, CUDA, словари, Rainbow, таблицы">
<meta name="description" content="Тонкая настройка параметров TCP/IP под толстые каналы">
<meta http-equiv="Content-Type" content="text/html; charset=windows-1251">
<link href="http://www.insidepro.com/favicon.ico" rel="SHORTCUT ICON">
<link rel="STYLESHEET" href="%D0%A2%D0%BE%D0%BD%D0%BA%D0%B0%D1%8F%20%D0%BD%D0%B0%D1%81%D1%82%D1%80%D0%BE%D0%B9%D0%BA%D0%B0%20%D0%BF%D0%B0%D1%80%D0%B0%D0%BC%D0%B5%D1%82%D1%80%D0%BE%D0%B2%20TCP_IP%20%D0%BF%D0%BE%D0%B4%20%D1%82%D0%BE%D0%BB%D1%81%D1%82%D1%8B%D0%B5%20%D0%BA%D0%B0%D0%BD%D0%B0%D0%BB%D1%8B_files/style.css" type="text/css">
</head>

<body bgcolor="#E6E6E6">

<center>

<table style="BORDER-RIGHT: #C0C0C0 1px solid; BORDER-TOP: #C0C0C0 1px solid; BORDER-LEFT: #C0C0C0 1px solid; BORDER-BOTTOM: #C0C0C0 1px solid" bgcolor="#FFFFFF" border="0" cellpadding="4" cellspacing="4" width="100%">
<tbody><tr>
<td valign="top" width="190">
<a href="http://www.insidepro.com/rus/index.shtml"><img src="%D0%A2%D0%BE%D0%BD%D0%BA%D0%B0%D1%8F%20%D0%BD%D0%B0%D1%81%D1%82%D1%80%D0%BE%D0%B9%D0%BA%D0%B0%20%D0%BF%D0%B0%D1%80%D0%B0%D0%BC%D0%B5%D1%82%D1%80%D0%BE%D0%B2%20TCP_IP%20%D0%BF%D0%BE%D0%B4%20%D1%82%D0%BE%D0%BB%D1%81%D1%82%D1%8B%D0%B5%20%D0%BA%D0%B0%D0%BD%D0%B0%D0%BB%D1%8B_files/logo190.jpg" alt="InsidePro Software" border="0" height="56" width="190"></a><br><br>
<div class="area">
<strong><a href="http://www.insidepro.com/rus/egb.shtml">Extreme GPU Bruteforcer</a></strong>
<div class="small">Версия 2.3.1, <font color="#555555">30.04.2013</font>
<br><a href="http://www.insidepro.com/download/egb64.zip">Скачать (64-bit)</a>
<br><a href="http://www.insidepro.com/download/egb.zip">Скачать</a>
</div>
<br>
<strong><a href="http://www.insidepro.com/rus/passwordspro.shtml">PasswordsPro</a></strong>
<div class="small">Версия 3.1.2.2, <font color="#555555">28.01.2013</font>
<br><a href="http://www.insidepro.com/download/passwordspro.zip">Скачать</a>
</div>
<br>
<strong><a href="http://www.insidepro.com/rus/saminside.shtml">SAMInside</a></strong>
<div class="small">Версия 2.7.0.1, <font color="#555555">08.06.2013</font>
<br><a href="http://www.insidepro.com/download/saminside.zip">Скачать</a>
</div>
<br>
<strong><a href="http://www.insidepro.com/rus/buy.shtml">Купить</a></strong>
</div>

<br>
<div class="area">
<strong><a href="http://forum.insidepro.com/">Форум</a></strong>
<br><div class="small">Сообщений: 126334</div>
<br>
<strong><a href="http://wiki.insidepro.com/">Wiki</a></strong>
<div class="small">Страниц: 516</div>
<br>
<strong><a href="http://www.insidepro.com/dictionaries.php?lang=rus">Словари</a></strong>
<br><div class="small">Файлов: 90</div>
<br>
<strong><a href="http://www.insidepro.com/tables.php?lang=rus">Rainbow-таблицы</a></strong>
<div class="small">Таблиц: 132</div>
<br>
<strong><a href="http://www.insidepro.com/rus/doc.shtml">Библиотека</a></strong>
<div class="small">Документов: 501</div>
<br>
<strong><a href="http://www.insidepro.com/hashes.php?lang=rus">Генератор хэшей</a></strong>
<div class="small">Алгоритмов: 345</div>
</div>

<br>
<div class="area">
<strong><a href="http://www.insidepro.com/scribe.php?l=ru">Подписка на новости</a></strong>
<div class="small">Подписчиков: 1757<br>
<br><font color="#555555">Посетителей сегодня: 2559<br>Всего посещений: 11394511</font>
</div>
</div>

</td>
<td valign="top">

<table class="area" border="0" cellpadding="0" cellspacing="0" width="100%">
<tbody><tr>
<td class="small" valign="top">
<u>Наши новости</u>
<br><font color="#555555">02.03.2013</font> Программа <a href="http://www.insidepro.com/rus/egb.shtml">Extreme GPU Bruteforcer</a> обновлена до версии 2.3.1
<font color="#555555">(комментариев: <a href="http://forum.insidepro.com/viewtopic.php?t=20441">52</a>)</font>
<br><font color="#555555">06.02.2013</font> Программа <a href="http://www.insidepro.com/rus/egb.shtml">Extreme GPU Bruteforcer</a> обновлена до версии 2.3
<font color="#555555">(комментариев: <a href="http://forum.insidepro.com/viewtopic.php?t=19996">32</a>)</font>
<br><font color="#555555">05.01.2013</font> Программа <a href="http://www.insidepro.com/rus/saminside.shtml">SAMInside</a> обновлена до версии 2.7.0.1
<font color="#555555">(комментариев: <a href="http://forum.insidepro.com/viewtopic.php?t=19333">7</a>)</font>
</td>
<td class="small" align="right" valign="top">
<a href="http://www.insidepro.com/"><img src="%D0%A2%D0%BE%D0%BD%D0%BA%D0%B0%D1%8F%20%D0%BD%D0%B0%D1%81%D1%82%D1%80%D0%BE%D0%B9%D0%BA%D0%B0%20%D0%BF%D0%B0%D1%80%D0%B0%D0%BC%D0%B5%D1%82%D1%80%D0%BE%D0%B2%20TCP_IP%20%D0%BF%D0%BE%D0%B4%20%D1%82%D0%BE%D0%BB%D1%81%D1%82%D1%8B%D0%B5%20%D0%BA%D0%B0%D0%BD%D0%B0%D0%BB%D1%8B_files/us.gif" alt="English" border="0" height="14" width="18"></a>
<br>ICQ: 285429551
<br><a href="mailto:support@insidepro.com">support@insidepro.com</a>
</td>
</tr>
</tbody></table>

<br>

<div class="area" style="padding-left:4px">

<!-- Begin -->

<h1>Тонкая настройка параметров TCP/IP под толстые каналы</h1>

<p>Автор: (c)<a href="mailto:kk@sendmail.ru">Крис Касперски ака мыщъх</a></p>

<blockquote><i>Пропускная
способность локальных сетей и Интернет-каналов неуклонно растет, однако вместе
с ней растут и потребности, вызывающие естественное желание выжать из TCP/IP-стека максимум возможного, чем мы
сейчас, собственно, и займемся, главным образом акцентируя внимания на Windows&nbsp;Server&nbsp;2003,
хотя описанные технология оптимизации справедливы и для рабочих станций,
собранных на базе W2K/XP.</i></blockquote>

<h4>Введение</h4>

<p>По поводу
кручения настроек TCP/IP существуют два
диаметрально противоположных мнения: многие администраторы (а вместе с ними и
авторы популярных книг!) считают, что разработчики уже сделали все, что нужно и
любое вмешательство в этот четко отлаженный механизм может только навредить. В
то же самое время в Интернете валяется множество руководств, обещающих если не
путевку в рай, то радикальное увеличение производительности ценою изменения
пары-тройки ключей в системном реестре.</p>

<p>Истина, как
водится, где-то посередине. Операционные системы уже давно научились
автоматически распознавать тип подключения, выбирая соответствующий ему набор
настроек по умолчанию. Адаптивные алгоритмы динамически подстраиваются под
характеристики канала и неквалифицированные "указания" пользователя
действительно только мешают. Однако адаптивным алгоритмам свойственно
ошибаться, а настройки по умолчанию далеко не всегда соответствуют
характеристикам конкретно взятых каналов связи, разброс которых просто колоссален.</p>

<p>Какой прирост
производительности может дать оптимизация параметров TCP/IP, при условии, что она выполнена правильно? Зависит от того,
насколько настройки по умолчанию близки к свойствам используемого канала. В
среднем, следует ожидать 20%...30% выигрыша, однако в "клинических"
случаях скорость увеличивается в несколько раз!</p>

<h4>Прежде чем приступать к оптимизации</h4>

<p>Вместо того,
чтобы, засучив рукава, с первых же строк бросаться в бой, лучше сперва покурить
и подумать. Допустим, мы имеем 10&nbsp;мегабитный канал и скачиваем/раздаем
файлы с превалирующей скоростью порядка мегабайта в секунду. Понятно, что
никакими ухищрениями нам не удастся поднять производительность на сколь-нибудь
заметную величину. Так стоит ли возиться?! К тому же, достаточно большое количество
администраторов умышленно ущемляет отдачу в районе 50-100&nbsp;Кбайт/с,
предотвращая перегрузку сети. Какая уж тут оптимизация...</p>

<p>Другое дело,
если наблюдаемая пропускная способность составляет менее 2/3 от заявленной
аплинком. Тут уже без оптимизации никак не обойтись! Однако помимо TCP/IP-стека за производительность отвечают
и другие системные компоненты - например, процессор. При большом количестве
одновременно установленных соединений, загрузка ЦП может достигать 100%,
особенно с учетом того, что в дешевом сетевом оборудовании подсчет контрольных
сумм пакетов реализован на программном, а не аппаратном (как у дорогих моделей)
уровне.</p>

<p>Еще одна
виновница&nbsp;- видеокарта, надолго захватывающая шину безо всяких видимых
причин, в результате чего все остальные периферийные устройства садятся на
голодный паек и скорость ввода/вывода (в том числе и сетевого) многократно
снижается. Обновление драйверов или отключение всех "агрессивных"
настроек видеокарты обычно решают проблему даже без обращения к стеку TCP/IP.</p>

<p>Также не стоит
забывать и о том, что чрезмерная фрагментация дискового пространства
существенно замедляет скорость отдачи/приема файлов, что является одной из
основных причин замедления загрузок web-страничек у конечных пользователей.</p>

<p>В общем,
прежде чем лезть в TCP/IP стек, следует убедиться,
что все остальные возможные причины устранены и узким местом являются именно
настройки сетевых протоколов, а не что-то иное (<b><i>внимание</i></b><i>:
"убедиться" это совсем не тоже самое, что "убедить себя"</i>).</p>

<h4>MTU + MSS = ???</h4>

<p><b>MTU</b> (<b><i>M</i></b><i>aximum </i><b><i>T</i></b><i>ransmission </i><b><i>U</i></b><i>nit</i>&nbsp;- Максимальный [размер]
Передаваемого Пакета), вероятно, самый известный параметр TCP/IP, рекомендации по настройке которого можно встретить
практически в любой статье по оптимизации TCP/IP.
Сотни утилит предлагают свои услуги по определению предельно точного значения,
но, увы, обещанного увеличения производительности как-то не достигается.</p>

<p>MTU задет наибольший
возможный размер отправляемого IP-пакета
(вместе с заголовком), нарезая отправляемые данные на порции фиксированного
размера. Чем больше MTU,
тем ниже накладные расходы на передачу служебной информации, а, значит, выше
"КПД" канала. С другой стороны, маршрутизаторы сваливают пакеты,
поступающие от разных узлов, в общую очередь и потому гораздо выгоднее
отправить один большой пакет, чем два маленьких, причем чем сильнее загружен
маршрутизатор, тем больший выигрыш мы получим.</p>

<p align="center">
<img src="%D0%A2%D0%BE%D0%BD%D0%BA%D0%B0%D1%8F%20%D0%BD%D0%B0%D1%81%D1%82%D1%80%D0%BE%D0%B9%D0%BA%D0%B0%20%D0%BF%D0%B0%D1%80%D0%B0%D0%BC%D0%B5%D1%82%D1%80%D0%BE%D0%B2%20TCP_IP%20%D0%BF%D0%BE%D0%B4%20%D1%82%D0%BE%D0%BB%D1%81%D1%82%D1%8B%D0%B5%20%D0%BA%D0%B0%D0%BD%D0%B0%D0%BB%D1%8B_files/181_1.jpg" alt="MTU и MSS" border="0" height="194" width="553">
</p>

<p class="small" align="center"><b>Рисунок&nbsp;1.&nbsp;</b>MTU и MSS.</p>

<p>Так в чем же
дело?! Выкручиваем MTU
до предела и... скорость падает до нуля. Почему? Причина в том, что с ростом
размера пакетов увеличивается и время, необходимое для их повторной передачи в
том случае, если пакет потерян или искажен. К тому же, промежуточные узлы имеют
свои собственные настройки, и если размер передаваемого пакета, превышает
текущий MTU, пакет
разрезается на два или более пакетов, (т.е. фрагментируется) и эти фрагменты
собираются воедино только на узле-приемнике, в результате чего пропускная
способность уменьшается. Причем, если MTU узла отправителя лишь чуть-чуть превышает MTU промежуточного узла, то второй пакет
состоит практически из одного заголовка, в результате чего зависимость скорость
передачи от размера превращается в характерную пилообразную кривую
(см.&nbsp;рис.&nbsp;2).</p>

<p>Значения MTU, используемые Windows&nbsp;Server&nbsp;2003
по умолчанию, приведены в таблице&nbsp;1, однако при желании их можно
изменить.</p>

<p align="center">
<img src="%D0%A2%D0%BE%D0%BD%D0%BA%D0%B0%D1%8F%20%D0%BD%D0%B0%D1%81%D1%82%D1%80%D0%BE%D0%B9%D0%BA%D0%B0%20%D0%BF%D0%B0%D1%80%D0%B0%D0%BC%D0%B5%D1%82%D1%80%D0%BE%D0%B2%20TCP_IP%20%D0%BF%D0%BE%D0%B4%20%D1%82%D0%BE%D0%BB%D1%81%D1%82%D1%8B%D0%B5%20%D0%BA%D0%B0%D0%BD%D0%B0%D0%BB%D1%8B_files/181_2.jpg" alt="Зависимость скорости передачи данных от размера MTU" border="0" height="498" width="553">
</p>

<p class="small" align="center"><b>Рисунок&nbsp;2.&nbsp;</b>Зависимость скорости передачи
данных от размера MTU
(по данным <u>http://member.nifty.ne.jp/oso/faq.mtu-faq.html</u>).</p>

<p>Запускаем
утилиту "Редактора Реестра" и открываем в ней следующий раздел: <i>HKLM\SYSTEM\CurrentControlSet\Services\Tcpip\Parameters\Interfaces\interfaceGUID</i>.
Видим там параметр <b>MTU</b> типа DWORD (а если не видим, то создаем) и вводим размер в байтах (0xFFFFFFFF означает
"использовать значение MTU
по умолчанию). Интерфейсы заданы GUID-идентификаторами и обычно их бывает намного больше одного.
Как среди них найти интерфейс кабельного модема или конкретной сетевой карты?
Да очень просто&nbsp;- по IP-адресу!</p>

<p align="center">
<img src="%D0%A2%D0%BE%D0%BD%D0%BA%D0%B0%D1%8F%20%D0%BD%D0%B0%D1%81%D1%82%D1%80%D0%BE%D0%B9%D0%BA%D0%B0%20%D0%BF%D0%B0%D1%80%D0%B0%D0%BC%D0%B5%D1%82%D1%80%D0%BE%D0%B2%20TCP_IP%20%D0%BF%D0%BE%D0%B4%20%D1%82%D0%BE%D0%BB%D1%81%D1%82%D1%8B%D0%B5%20%D0%BA%D0%B0%D0%BD%D0%B0%D0%BB%D1%8B_files/181_3.jpg" alt="Тонкая настройка TCP/IP" border="0" height="389" width="554">
</p>

<p class="small" align="center"><b>Рисунок&nbsp;3.&nbsp;</b>Тонкая настройка TCP/IP параметров через
"Редактор Реестра".</p>

<p>Существует
возможность автоматического определения маршрута, по которому пакеты с заданным
MTU проходят без
фрагментации (параметр <b>EnablePMTUDiscovery</b> типа DWORD, находящийся в той же ветви
реестра, что и MTU (значение "1" включает данную функцию, "0"&nbsp;- выключает). Однако
многие администраторы промежуточных узлов по соображениям
"безопасности" блокируют отправку ICMP-сообщений и узел-отправитель остается в полном неведении
относительно факта фрагментации. Специально для обнаружения таких вот
"неправильных" маршрутизаторов (прозванных "черными дырами"
или, по-английски, Black Hole),
Windows поддерживает
специальный алгоритм, управляемый параметром <b>EnablePMTUDiscovery</b> (во
всем аналогичным EnablePMTUDiscovery).</p>

<p align="center">
<img src="%D0%A2%D0%BE%D0%BD%D0%BA%D0%B0%D1%8F%20%D0%BD%D0%B0%D1%81%D1%82%D1%80%D0%BE%D0%B9%D0%BA%D0%B0%20%D0%BF%D0%B0%D1%80%D0%B0%D0%BC%D0%B5%D1%82%D1%80%D0%BE%D0%B2%20TCP_IP%20%D0%BF%D0%BE%D0%B4%20%D1%82%D0%BE%D0%BB%D1%81%D1%82%D1%8B%D0%B5%20%D0%BA%D0%B0%D0%BD%D0%B0%D0%BB%D1%8B_files/181_4.jpg" alt="Черные дыры" border="0" height="380" width="553">
</p>

<p class="small" align="center"><b>Рисунок&nbsp;4.&nbsp;</b>"Черными
дырами" называют маршрутизаторы, не отправляющие ICMP-сообщения о факте фрагментации
ретранслируемого пакета, что создает большие проблемы при попытке определения
оптимального значения MTU.</p>

<p>В подавляющем
большинстве случаев использование опций EnablePMTUDiscovery и
EnablePMTUDiscovery приводит к снижению производительности и значение MTU лучше выбирать,
отталкиваясь от таблицы&nbsp;2, или действовать методом перебора.</p>

<p>Еще один
параметр&nbsp;- <b>MSS</b>
(<b><i>M</i></b><i>aximum </i><b><i>S</i></b><i>egment </i><b><i>S</i></b><i>ize</i>&nbsp;- Максимальный Размер Сегмента)
отвечает за максимальный размер передаваемых данных за вычетом длины заголовка IP-пакета (см.&nbsp;рис.&nbsp;1). Трогать его не
следует, да и Windows
это все равно не позволяет. В общем случае, MSS&nbsp;=&nbsp;MTU&nbsp;-&nbsp;40&nbsp;байт.</p>

<center>
<table border="1" cellpadding="4" cellspacing="0">
<tbody><tr>
<td align="center"><b>Параметр</b></td><td align="center"><b>Канал с скоростью &lt;128 Kbps</b></td><td align="center"><b>Канал со скоростью &gt;= 128</b></td>
</tr><tr>
<td align="center">MTU (Maximum Transmission Unit)</td><td align="center">576</td><td align="center">1500</td>
</tr><tr>
<td align="center">MSS (Maximum Segment Size)</td><td align="center">536</td><td align="center">1460</td>
</tr>
</tbody></table>
</center>

<p class="small" align="center"><b>Таблица&nbsp;1.&nbsp;</b>Значения
MTU и MSS по умолчанию в Microsoft Windows Server 2003.</p>

<center>
<table border="1" cellpadding="4" cellspacing="0">
<tbody><tr>
<td align="center"><b>MTU (байт)</b></td><td align="center"><b>Протокол</b></td><td align="center"><b>Нормативный RFC</b></td>
</tr><tr>
<td align="center">576</td><td align="center">по умолчанию</td><td align="center">879</td>
</tr><tr>
<td align="center">1500</td><td align="center">PPP по умолчанию</td><td align="center">1134</td>
</tr><tr>
<td align="center">296</td><td align="center">PPP (low relay)</td><td align="center">1144</td>
</tr><tr>
<td align="center">1500</td><td align="center">Ethernet</td><td align="center">895</td>
</tr><tr>
<td align="center">1006</td><td align="center">SLIP</td><td align="center">1055</td>
</tr><tr>
<td align="center">1492</td><td align="center">PPPOE</td><td align="center">2516</td>
</tr>
</tbody></table>
</center>

<p class="small" align="center"><b>Таблица&nbsp;2.&nbsp;</b>Значения
MTU, автоматически
выбираемые Microsoft&nbsp;Windows&nbsp;Server&nbsp;2003
в зависимости от типа подключения.</p>

<h4>TCP Receive Window</h4>

<p>Размер TCP-окна&nbsp;-
малоизвестный, но чрезвычайно важный (в плане производительности) параметр,
способный увеличить пропускную способность в несколько
раз. Рассмотрим два узла -
"A" и "B" и заставим узел
"A"
передавать узлу "B"
данные, разбитые на сегменты, размер которых (как уже говорилось) определяется
параметром MSS.
Протокол TCP работает с
установкой соединения, что обязывает его отправлять уведомления об успешно
принятых сегментах. Неподтвержденные сегменты спустя некоторое время передаются
узлом "A"
вновь.</p>

<p>Промежуток
времени между отправкой пакета и его получением называется латентностью (latency) и эта латентность в
зависимости от типа и загруженности сети варьируется от 20&nbsp;ms (и менее) до 100&nbsp;ms (и более). Легко
посчитать, что если бы подтверждался каждый сегмент, до даже в низколатентной
сети реальная скорость передачи заметно отставала от ее реальных возможностей и
была бы равна MTU / (2 * latency), что образует предел
в 6&nbsp;мегабит/сек, независящий от пропускной способности. Кошмар! Ну, как
дальше жить?!</p>

<p>Вот потому-то
создатели TCP/IP и разрешили узлу "A" отправлять более
одного сегмента, не дожидаясь подтверждения. Максимальное количество сегментов,
которые можно передать до прихода подтверждения и называется размером TCP-окна (процесс передачи
хорошо проиллюстрированном на анимированном gif'e: <u>http://cable-dsl.home.att.net/rwinanim.htm</u>). Почему этот параметр так важен
для достижения наибольшей производительности?</p>

<p>Допустим, мы
имеем 10-мегабитный канал и передаем 7&nbsp;сегментов по 1460&nbsp;байт каждый,
потратив на этого 8&nbsp;ms.
Если латентность составляет 100&nbsp;ms, то... 100&nbsp;ms&nbsp;+&nbsp;92&nbsp;ms&nbsp;=&nbsp;192&nbsp;ms. Мы, как идиоты, ждем
подтверждения целых 192&nbsp;ms
и 96% времени узел "А" проводит в бездействии, используя лишь 4%
пропускной способности канала. Это, конечно, крайний случай, но все-таки не
настолько далекий от истины, как можно было бы подумать.</p>

<p>В процессе
установки соединения, узел "A" предлагает узлу "B" установить размер окна, равный 16&nbsp;Кбайтам (значение
по умолчанию, прописанное в параметре <b>ТсрWindowSize</b> реестра, который при
желании можно изменить). Размер окна всегда округляется до целого количества
сегментов (см. параметр MSS).</p>

<p>Если размер
окна превышает 64&nbsp;Кбайт, система активирует алгоритм автоматического
масштабирования, который, впрочем, работает только в том случае, если узел B также поддерживает этот
механизм, поэтому лучше задавать размер TCP-окна вручную, руководствуясь таблицей&nbsp;3. (Однако следует
помнить, что слишком большое окно забивает канал пакетами, вызывая перегрузку
сети, препятствующую пересылке уведомлений, в результате чего
производительность падает).</p>

<center>
<table border="1" cellpadding="4" cellspacing="0">
<tbody><tr><td colspan="7" align="center"><b>Минимально необходимый размер TCP-окна</b></td>
</tr><tr><td rowspan="2" colspan="2">&nbsp;</td>
<td colspan="5" align="center">Скорость канала в (Килобит/сек)</td>
</tr><tr>
<td align="center">500</td><td align="center">1000</td><td align="center">1500</td><td align="center">2000</td><td align="center">2500</td>
</tr>
<tr>
<td rowspan="5" align="center">Латентность канала (ms)</td><td align="center">50</td><td align="center">2K</td><td align="center">5K</td><td align="center">7K</td><td align="center">10K</td><td align="center">12K</td>
</tr><tr>
<td align="center">100</td><td align="center">5K</td><td align="center">10K</td><td align="center">15K</td><td align="center">20K</td><td align="center">24K</td>
</tr><tr>
<td align="center">150</td><td align="center">7K</td><td align="center">15K</td><td align="center">22K</td><td align="center">29K</td><td align="center">37K</td>
</tr><tr>
<td align="center">200</td><td align="center">10K</td><td align="center">20K</td><td align="center">29K</td><td align="center">39K</td><td align="center">49K</td>
</tr><tr>
<td align="center">250</td><td align="center">12K</td><td align="center">24K</td><td align="center">37K</td><td align="center">49K</td><td align="center">61K</td>
</tr><tr>
<td colspan="2" align="center">Windows 9x/NT по умолчанию</td><td colspan="5" align="center">8K</td>
</tr><tr>
<td colspan="2" rowspan="3" align="center">Windows Me/2000/XP Server 2003 по умолчанию</td><td colspan="5" align="center"><b>Скорость канала</b></td>
</tr><tr>
<td colspan="2" align="center">&lt; 1 Мегабит/сек</td><td colspan="2" align="center">100 Мегабит/сек</td><td align="center">&gt; 100 Мегабит/сек
</td></tr><tr>
<td colspan="2" align="center">8 KB</td><td colspan="2" align="center">17 KB</td><td align="center">64 KB
</td></tr><tr>
<td colspan="2" align="center">Рекомендуемые значения</td><td colspan="5" align="center">32-63K
</td></tr>
</tbody></table>
</center>

<p class="small" align="center"><b>Таблица&nbsp;3.&nbsp;</b>Рекомендуемые значения размера TCP-окна в зависимости от
характеристик канала (по данным <u>http://cable-dsl.home.att.net/</u>).</p>

<h4>Один за всех&nbsp;- все за одного!</h4>

<p>Если клиенты
локальной сети работают через Proxy-сервер,
то для достижения максимальной производительности достаточно изменить размер TCP-окна непосредственно на
самом сервере.</p>

<p>При работе же
через NAT необходимо
настроить TCP-окно на
каждой рабочей станции, подключенной к локальной сети.</p>

<h4>Медленный старт и выборочное подтверждение</h4>

<p>Для
предотвращения перегрузок сети в протокол TCP был введен так называемый "<b>медленный старт</b>"
("slow start"),
подробно описанный в RFC&nbsp;1122 и RFC&nbsp;2581.</p>

<p>При создании
нового TCP/IP соединения система
устанавливает размер окна, равный одному сегменту. После получения
подтверждения размер окна увеличивается вдвое и так продолжается вплоть до
достижения максимально возможного размера.</p>

<p>Экспоненциальный
рост ширины окна "съедает" совсем немного времени при передачи
огромных файлов, но вот при установке множества TCP/IP соединений (характерных, например, для браузеров),
обменивающихся крошечными порциями данных (классический пример которых - web-сервер), медленный старт
заметно снижает эффективность широких каналов, кроме того даже при
кратковременной перегрузке сети система сбрасывает размер окна в единицу, в
результате чего график скорости отдачи файла из степной равнины превращается в
холмистую терраформу (см.&nbsp;рис.&nbsp;5).</p>

<p align="center">
<img src="%D0%A2%D0%BE%D0%BD%D0%BA%D0%B0%D1%8F%20%D0%BD%D0%B0%D1%81%D1%82%D1%80%D0%BE%D0%B9%D0%BA%D0%B0%20%D0%BF%D0%B0%D1%80%D0%B0%D0%BC%D0%B5%D1%82%D1%80%D0%BE%D0%B2%20TCP_IP%20%D0%BF%D0%BE%D0%B4%20%D1%82%D0%BE%D0%BB%D1%81%D1%82%D1%8B%D0%B5%20%D0%BA%D0%B0%D0%BD%D0%B0%D0%BB%D1%8B_files/181_5.jpg" alt="Медленный старт" border="0" height="224" width="515">
</p>

<p class="small" align="center"><b>Рисунок&nbsp;5.&nbsp;</b>"Медленный старт" и его последствия (CW&nbsp;-
размер окна в сегментах).</p>

<p>Кроме того,
система поддерживает специальный параметр Slow Start Threshold Size (Пороговый Размер [окна] Медленного
Старта), по умолчанию равный 65636, но после распознавания ситуации
"перегрузка сети", принимающий значение W / 2 и в дальнейшем является
верхней границей экспоненциального роста параметра CW, что вызывает
драматическое падение производительности (см.&nbsp;рис.&nbsp;6).</p>

<p align="center">
<img src="%D0%A2%D0%BE%D0%BD%D0%BA%D0%B0%D1%8F%20%D0%BD%D0%B0%D1%81%D1%82%D1%80%D0%BE%D0%B9%D0%BA%D0%B0%20%D0%BF%D0%B0%D1%80%D0%B0%D0%BC%D0%B5%D1%82%D1%80%D0%BE%D0%B2%20TCP_IP%20%D0%BF%D0%BE%D0%B4%20%D1%82%D0%BE%D0%BB%D1%81%D1%82%D1%8B%D0%B5%20%D0%BA%D0%B0%D0%BD%D0%B0%D0%BB%D1%8B_files/181_6.gif" alt="Уменьшение размеров TCP-окна" border="0" height="269" width="540">
</p>

<p class="small" align="center"><b>Рисунок&nbsp;6.&nbsp;</b>Уменьшение размеров TCP-окна при
обнаружении перегрузки сети.</p>

<p>Непосредственно
отключить "медленный старт" штатными средствами Windows (не прибегая к патчу ядра)
нельзя, однако если задействовать SACK-алгоритм (Selective Acknowledgement&nbsp;-
Выборочное подтверждение, одно из расширений TCP-протокола, описанное в RFC 2018), "медленный старт"
вырубается сам собой, становясь при этом никому не нужным пережитком
старины.</p>

<p>Выборочное
подтверждение передачи позволяет осуществлять повторную передачу
неподтвержденных сегментов в одном окне (при неактивном SACK'е потерянные сегменты передаются
один за другим в индивидуальном порядке). Другими словами, узел "А"
повторно передает узлу "B"
только реально потерянные сегменты, а не весь блок, в состав которого входят и
успешно принятые пакеты. Очевидно, что максимальный прирост производительности
будет наблюдаться на нестабильных каналах связи, регулярно теряющих пакеты.</p>

<p>Для активации
алгоритма SACK
достаточно установить параметр реестра <b>SackOpts</b> в значение "1" (значение по умолчанию для W2K и XP).</p>

<h4>Время, работающее против нас</h4>

<p>С
подтвержденными сегментами все ясно. Если подтверждение пришло, сегмент можно
считать успешно доставленным. Весь вопрос в том, сколько это самое
подтверждение ждать и когда начинать повторную пересылку.</p>

<p>По умолчанию Windows&nbsp;Server&nbsp;2003
ждет три секунды (при желании это значение можно изменить редактированием
параметра <b>TcpInitialRTT</b>), после чего осуществляет повторную посылку
неподтвержденных пакетов, а сам интервал ожидания увеличивают в соответствии с
алгоритмом SRTT (Smoothed Round Trip Time&nbsp;-
сглаженное оцененное время обращения). Максимальное количество повторных
передач хранится в параметре <b>TcpMaxDataRetransmissions</b> (по умолчанию
равному пяти), при достижении которого соединение разрывается.</p>

<p>Очевидно, что
на нестабильных каналах, страдающих хроническими задержками, количество
разрывов соединений можно сократить путем увеличения параметра <b>TcpMaxDataRetransmissions</b>
до любой разумной величины (но не больше FFFFFFFFh). С другой стороны, для повышения
производительности и "нейтрализации" пагубного влияния потерянных
пакетов на быстрых каналах с малым временем задержки значение TcpInitialRTT
рекомендуется уменьшить до одной секунды.</p>

<p>Главный
недостаток статического таймера в его неспособности реагировать на
кратковременные изменения характеристик канала связи. Выбранное системой время
ожидания подтверждения оказывается то мало, то велико. Производительность
падает, пользователь рвет и мечет, а пропускная способность "плавает"
в очень широких пределах, заметно отставая от ожидаемой.</p>

<p>Задержанное подтверждение
(Delayed Acknowledgement)&nbsp;-
еще одно расширение протокола TCP/IP, описанное в RFC&nbsp;1122
и впервые реализованное в W2K (а также в NT&nbsp;4.0&nbsp;SP4). Вместо того, чтобы
подтверждать каждый полученный сегмент, узел "B" теперь отправляет подтверждение
только в случае, если в течении определенного промежутка времени (хранящегося в
параметре <b>TcpDelAckTicks</b> и по умолчанию равном 200&nbsp;ms), от узла "A" не было получено ни
одного сегмента. Другими словами, если сегменты идут дружными косяками и все
работает нормально, подтверждения не отправляются до тех пор, пока в сети не
возникнет "затор". Немного подождав, узел "B" высылает подтверждение обо всех
полученных сегментах, давая узлу "A" возможность самостоятельно разобраться&nbsp;- какие
сегменты потерялись в дороге и передать их повторно с минимальными накладными
расходами.</p>

<p>К сожалению,
задержка, выбранная компанией Microsoft
по умолчанию, близка к латентности сетей с большими задержками, что сводит на
нет все достоинства данного алгоритма и для повышения производительности
значение TcpDelAckTicks рекомендуется увеличить в несколько раз.
Соответственно, на низколатентных сетях его лучше уменьшить, ликвидируя никому
не нужные простои.</p>

<p>Значения
данного параметра могут варьироваться в диапазоне от 0 до 6, выражаемом в десятых
долях секунды, т.е. единица соответствует 100&nbsp;ms, а нуль трактуется как запрет на
использование задержанных подтверждений.</p>

<p>При
использовании TCP-окон
большого размера рекомендуется задействовать алгоритм временных меток (TCP-Timestamps), описанный в RFC&nbsp;1323,
и автоматически адаптирующий значение таймера повторной передачи даже в
условиях быстро меняющихся характеристик канала связи. За это отвечает параметр
Tcp1323Opts, который, будучи установленным в значение 3, разрешает
использование всех расширений RFC&nbsp;1323.</p>

<h4>Заключение</h4>

<p>В статье
рассмотрены лишь некоторые опции TCP/IP-протокола,
в наибольшей степени ответственные за его производительность. Но помимо них
существует и другие, за разъяснением которых мы оправляем читателя по ссылкам
ниже.</p>

<h4>Полезные ссылки</h4>

<p>Оптимизация работы протокола ТСР в распределенных сетях:
<br><u>http://www.gurnov.ru/kms_catalog+stat+cat_id-4+page-1+nums-14.html</u></p>

<p>Enabling High Performance Data Transfers:
<br><u>http://www.psc.edu/networking/projects/tcptune/</u></p>

<p>Step-by-step instructions for tuning TCP under Windows:
<br><u>http://www.psc.edu/networking/projects/tcptune/OStune/winxp/winxp_stepbystep.html</u></p>

<p>UNIX IP Stack Tuning Guide:
<br><u>http://www.cymru.com/Documents/ip-stack-tuning.html</u></p>

<p>Navas Cable Modem/DSL Tuning Guide:
<br><u>http://cable-dsl.home.att.net</u></p>

<p>Microsoft Windows 2000 TCP/IP Implementation Details:
<br><u>http://www.microsoft.com/technet/network/deploy/depovg/tcpip2k.mspx</u></p>

<p>TCP/IP and NBT configuration parameters for Windows 2000 or for Windows NT:
<br><u>http://support.microsoft.com/kb/120642/</u></p>

<p>PMTU black hole detection algorithm change for Windows:
<br><u>http://support.microsoft.com/kb/136970/</u></p>

<p>Default MTU size for different network topology:
<br><u>http://support.microsoft.com/kb/140375/</u></p>

<p>Dial-Up and Home Networking Troubleshooting Reference:
<br><u>http://www.internetweekly.org/llarrow/mtumss.html</u></p>


<!-- End -->
</div>
</td>
</tr>
</tbody></table>

<div class="small" align="center"><br>Copyright © 2003-2013 <a href="http://www.insidepro.com/">InsidePro Software</a></div>
</center>



</body></html>