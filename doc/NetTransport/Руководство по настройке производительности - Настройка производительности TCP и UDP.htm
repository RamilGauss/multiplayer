<!DOCTYPE html PUBLIC "-//IETF//DTD HTML 4//EN">
<html><head>
<title>Руководство по настройке производительности - Настройка производительности TCP и UDP</title>
<!-- Begin Header Records  ========================================== -->
<!-- D:\IDWBWIN\Temp\idwt1128\prftungd.scr converted by idb2h R4.4    -->
<!-- (367) ID Workbench Version (WINNT-WIN95) on 20 Apr 2001 at       -->
<!-- 20:59:38                                                         -->
<!-- (C) Copyright IBM Corporation, 1999                              -->
<!-- Все права защищены. Licensed Materials Property of IBM           -->
<meta http-equiv="Content-Type" content="text/html; charset=windows-1251">
<meta http-equiv="updated" content="Пт, 20 Апр 2001 20:57:05">
<meta http-equiv="review" content="Сб, 20 Апр 2002 20:57:05">
<meta http-equiv="expires" content="Вс, 20 Апр 2003 20:57:05">
</head><body bgcolor="#fcfbf0">
<p></p><center> 
<a name="Top_Of_Page"></a>
<b>
<p></p><hr> <a href="#Bot_Of_Page"> [</a>  <a href="http://www.regatta.cs.msu.su/doc/usr/share/man/info/ru_RU/a_doc_lib/aixbman/prftungd/2365c92.htm">Страница назад</a> | <a href="http://www.regatta.cs.msu.su/doc/usr/share/man/info/ru_RU/a_doc_lib/aixbman/prftungd/2365c94.htm">Страница вперед</a>  |  <a href="http://www.regatta.cs.msu.su/doc/usr/share/man/info/ru_RU/a_doc_lib/aixbman/prftungd/prftungd02.htm#ToC">Содержание</a>  |  <a href="http://www.regatta.cs.msu.su/doc/usr/share/man/info/ru_RU/a_doc_lib/aixbman/prftungd/prftungd145.htm#HDRINDEX_START">Индекс</a>  | <a href="http://www.regatta.cs.msu.su/cgi-bin/ds_form?lang=ru_RU&amp;viewset=AIX" target="_top">Библиотека</a> | 
<a href="http://www.regatta.cs.msu.su/doc/usr/share/man/info/ru_RU/a_doc_lib/aixbman/prftungd/notices.htm">Юридическая информация</a> | 
<a href="http://www.regatta.cs.msu.su/cgi-bin/ds_form?lang=ru_RU&amp;viewset=AIX" target="_top">Поиск</a> <a href="#Bot_Of_Page">]</a> 
</b>
</center> 
<!-- End Header Records  ============================================ -->
<h1>Руководство по настройке производительности</h1>
<hr><h2><a name="HDRI79137">Настройка производительности TCP и UDP</a></h2>
<a name="IDX2446"></a>
<a name="IDX2447"></a>
<a name="IDX2448"></a>
<p>Оптимальные значения параметров связи зависят от типа LAN, особенностей
операций ввода-вывода главной системы и прикладной программы. В
следующих разделах описаны основные принципы настройки соединений и приведены
особые рекомендации для различных типов LAN.
</p><p></p><h3><a name="HDRH09H73">Общие рекомендации</a></h3>
<p>При настройке соединения может преследоваться одна из двух целей:
повысить его пропускную способность или сократить расход памяти.
Некоторые из приведенных рекомендаций относятся только к одной из этих задач,
другие же - универсальны. Ниже указан рекомендуемый размер блока
приложения для различных адаптеров:
<br>
</p><table border="">
<tbody><tr>
<td align="LEFT" valign="TOP" width="45%"><b>Имя устройства</b>
</td><td align="LEFT" valign="TOP" width="55%"><b>Размер блока приложения</b>
</td></tr><tr>
<td align="LEFT" valign="TOP" width="45%">Ethernet
</td><td align="LEFT" valign="TOP" width="55%">Несколько блоков по 4096 Кб
</td></tr><tr>
<td align="LEFT" valign="TOP" width="45%">Token-Ring (4 Мб)
</td><td align="LEFT" valign="TOP" width="55%">Несколько блоков по 4096 Кб
</td></tr><tr>
<td align="LEFT" valign="TOP" width="45%">Token-Ring (16 Мб)
</td><td align="LEFT" valign="TOP" width="55%">Несколько блоков по 4096 Кб
</td></tr><tr>
<td align="LEFT" valign="TOP" width="45%">FDDI (tcp)
</td><td align="LEFT" valign="TOP" width="55%">Несколько блоков по 4096 Кб
</td></tr><tr>
<td align="LEFT" valign="TOP" width="45%">SOCC (tcp)
</td><td align="LEFT" valign="TOP" width="55%">28672 байт
</td></tr><tr>
<td align="LEFT" valign="TOP" width="45%">HIPPI
</td><td align="LEFT" valign="TOP" width="55%">65536 байт
</td></tr><tr>
<td align="LEFT" valign="TOP" width="45%">ATM
</td><td align="LEFT" valign="TOP" width="55%">Несколько блоков по 4096 Кб
</td></tr></tbody></table>
<p></p><h4><a name="HDRH09H75">Повышение пропускной способности</a></h4>
<p>Ниже приведены некоторые рекомендации по повышению пропускной
способности:
</p><p></p><h5><a name="HDRH09H76">Протоколы типа "запрос-ответ"</a></h5>
<p>Ниже приведены некоторые рекомендации:
</p><ul>
<li>Для повышения скорости выполнения транзакций следует отправлять сообщения
минимального размера.
</li><li>Для увеличения скорости передачи данных размер сообщений должен быть не
меньше 1000 байт. Скорость передачи будет максимальной, если размер
сообщения равен числу, кратному 4096 байт (или чуть меньше).
</li><li>Если размер запросов и ответов фиксирован и не превосходит размера
дейтаграммы, рекомендуется использовать протокол UDP. 
<ul>
<li>Рекомендуется, чтобы размер блока записи был равен следующему
значению: 
<p>(общий размер нескольких блоков MTU за исключением 28 байт для стандартных
заголовков IP и UDP).
</p></li><li>В общем случае эффективнее отправлять сообщения большого размера, которые
затем фрагментируются и вновь собираются протоколом IP, чем выполнять много
операций записи.
</li><li>Рекомендуется связать сокет UDP с адресом с помощью функции
<b>connect()</b>. Это нельзя сделать только в том случае, если
сервер обслуживает несколько клиентов через один сокет.
</li></ul>
</li><li>Если размер запросов и ответов не фиксирован, рекомендуется применять
протокол TCP с опцией TCP_NODELAY. Проведенные исследования показывают,
что при оптимальном размере сообщений производительность TCP и UDP практически
одинаковая. 
<ul>
<li>Для того чтобы данные не копировались в область памяти ядра, установите
размер сообщений больше 512 байт.
</li><li>Установите размер сообщения равный, или чуть меньший числа, кратного
MTU. Это позволит избежать отправки пакетов, с данными размером
несколько байт.
</li></ul>
</li></ul>
<p></p><h5><a name="HDRH09H77">Потоки данных</a></h5>
<p>Ниже приведены некоторые рекомендации:
</p><ul>
<li>Протокол TCP гарантирует доставку данных и обеспечивает большую пропускную
способность, чем UDP.
</li><li>Размер сообщений, записываемых приложением, должен быть кратным 16384
байт. Желательно, чтобы размер сообщения был равен MSS (см. ниже
<a href="#HDRI25950">Выбор оптимального значения MSS для TCP</a>).
</li></ul>
<p></p><h4><a name="HDRH09H78">Уменьшение расхода памяти</a></h4>
<p>Для минимизации требований к памяти воспользуйтесь следующими
рекомендациями:
</p><ul>
<li>Если основной поток данных приходится на локальную сеть, установите
максимальный размер MTU, который поддерживается вашей LAN. Это позволит
значительно сократить число фрагментируемых пакетов, передаваемых между
локальными системами. Однако при этом увеличится нагрузка на шлюзы,
соединяющие локальную сеть с другими сетями с меньшим размером MTU (за
дополнительной информацией обратитесь к разделу <a href="#HDRI25950">Выбор
оптимального значения MSS для TCP</a>).
</li><li>Рекомендуется, чтобы размер сообщений, читаемых и записываемых
приложениями, был: 
<ul>
<li>Не превышал 512 байт 
<p>или
</p></li><li>Чуть меньше или равен числу, кратному 4096 байт
</li></ul> 
<p>Если приложения применяли протокол TCP, то это приводило к излишнему
расходу памяти и потере времени. Протокол TCP отправляет пакеты данных,
размер которых равен MTU. Если MTU в данной локальной сети больше 14976
байт, то нить отправки будет простаивать до тех пор, пока не будет достигнуто
значение <b>tcp_sendspace</b>. Данные принудительно записываются
только в том случае, если возникает тайм-аут получения подтверждения от
получателя.
</p></li></ul>
<p></p><h3><a name="HDRI47970">Настройка очередей приема и передачи на уровне адаптера</a></h3>
<a name="IDX2449"></a>
<a name="IDX2450"></a>
<p>Большинство драйверов связи позволяют изменить параметры, связанные с
приемом и отправкой данных. Обычно эти параметры задают ограничения на
размер очередей приема и передачи, и, кроме того, могут задавать число и
размер буферов и прочих ресурсов. Эти параметры ограничивают число
буферов или пакетов в очереди передачи и число доступных буферов
приема. Необходимо установить такой размер очередей, чтобы даже при
максимальной нагрузке адаптер справлялся с обработкой пакетов, поступающих из
системы или сети.
</p><p>Ниже приведены некоторые рекомендации:
</p><ul>
<li>Рекомендуется настроить очереди передачи в системе с быстрым CPU и
медленным доступом в сеть (чаще встречается на многопроцессорных системах, в
которых несколько CPU передают данные с помощью одного адаптера).
</li><li>Настройте очереди передачи в системах с большими буферами сокета.
</li><li>Настройте очереди приема в случае резкого возрастания плотности потока
данных.
</li><li>Настройте очереди передачи и приема для работы с большим количеством
пакетов маленького размера.
</li></ul>
<p></p><h4><a name="HDRH09H80">Очереди передачи</a></h4>
<p>Некоторые драйверы устройств позволяют задать ограничение на размер
<i>очереди передачи</i>. В зависимости от драйвера и адаптера,
могут быть заданы ограничения на размер как аппаратной, так и программной
очереди. У некоторых драйверов есть только аппаратная очередь, у других
- как программная, так и аппаратная. Некоторые драйверы управляют
аппаратной очередью самостоятельно и позволяют задать ограничение только для
программной очереди. Обычно драйвер устройства помещает пакет
непосредственно в аппаратную очередь адаптера. Если быстродействие CPU
выше пропускной способности сети, пакеты для отправки будут быстро
накапливаться. Это же относится к системам SMP. В этом случает
аппаратная очередь переполнится. Для того чтобы этого избежать,
некоторые драйверы после заполнения аппаратной очереди создают дополнительную
программную очередь, в которую и помещаются следующие пакеты. После
достижения максимального размера программной очереди все новые пакеты для
передачи будут отбрасываться. Это приведет к снижению
производительности, так как протоколу верхнего уровня придется повторно
отправлять эти пакеты.
</p><p>В версиях AIX младше 4.2.1 размер очереди передачи
ограничивался значениями из диапазона 150-250, в зависимости от конкретного
адаптера. По умолчанию устанавливалось небольшое значение, обычно -
30. В AIX 4.2.1 и выше ограничение на размер очереди
передачи было увеличено для большинства драйверов устройств до 2048
буферов. Значение по умолчанию также было увеличено. Для
большинства драйверов оно равно 512. Благодаря этому в системах с
мощным процессором и системах SMP очереди не переполняются.
</p><p>Ниже приведены возможные размеры очереди передачи адаптера MCA:
<br>
</p><table border="">
<tbody><tr>
<td align="LEFT" valign="TOP" width="39%"><b>Адаптер MCA</b>
</td><td align="LEFT" valign="TOP" width="22%"><b>По умолчанию</b>
</td><td align="LEFT" valign="TOP" width="39%"><b>Диапазон</b>
</td></tr><tr>
<td align="LEFT" valign="TOP" width="39%">Ethernet
</td><td align="LEFT" valign="TOP" width="22%">512
</td><td align="LEFT" valign="TOP" width="39%">20 - 2048
</td></tr><tr>
<td align="LEFT" valign="TOP" width="39%">10/100 Ethernet
</td><td align="LEFT" valign="TOP" width="22%">64
</td><td align="LEFT" valign="TOP" width="39%">16,32,64,128,256
</td></tr><tr>
<td align="LEFT" valign="TOP" width="39%">Token-Ring
</td><td align="LEFT" valign="TOP" width="22%">99 или 512
</td><td align="LEFT" valign="TOP" width="39%">32 - 2048
</td></tr><tr>
<td align="LEFT" valign="TOP" width="39%">FDDI
</td><td align="LEFT" valign="TOP" width="22%">512
</td><td align="LEFT" valign="TOP" width="39%">3 - 2048
</td></tr><tr>
<td align="LEFT" valign="TOP" width="39%">ATM / 155 ATM
</td><td align="LEFT" valign="TOP" width="22%">512
</td><td align="LEFT" valign="TOP" width="39%">0 - 2048
</td></tr></tbody></table>
<p>Ниже приведены возможные размеры очереди передачи адаптера PCI:
<br>
</p><table border="">
<tbody><tr>
<td align="LEFT" valign="TOP" width="37%"><b>Адаптер PCI</b>
</td><td align="LEFT" valign="TOP" width="40%"><b>По умолчанию</b>
</td><td align="LEFT" valign="TOP" width="23%"><b>Диапазон</b>
</td></tr><tr>
<td align="LEFT" valign="TOP" width="37%">Ethernet
</td><td align="LEFT" valign="TOP" width="40%">64
</td><td align="LEFT" valign="TOP" width="23%">16 - 256
</td></tr><tr>
<td align="LEFT" valign="TOP" width="37%">10/100 Ethernet
</td><td align="LEFT" valign="TOP" width="40%">256, 512 или 2048
</td><td align="LEFT" valign="TOP" width="23%">16 -16384
</td></tr><tr>
<td align="LEFT" valign="TOP" width="37%">Token-Ring
</td><td align="LEFT" valign="TOP" width="40%">96, 512 или 2048
</td><td align="LEFT" valign="TOP" width="23%">32 - 16384
</td></tr><tr>
<td align="LEFT" valign="TOP" width="37%">FDDI
</td><td align="LEFT" valign="TOP" width="40%">30 или 2048
</td><td align="LEFT" valign="TOP" width="23%">3 - 16384
</td></tr><tr>
<td align="LEFT" valign="TOP" width="37%">155 ATM
</td><td align="LEFT" valign="TOP" width="40%">100 или 2048
</td><td align="LEFT" valign="TOP" width="23%">0 - 16384
</td></tr></tbody></table>
<p>При изменении ограничения на размер аппаратной очереди возрастет объем
памяти, требуемой для получения данных, так как увеличится число управляющих
блоков и буферов. Это ограничение рекомендуется увеличивать только в
случае крайней необходимости, либо в системах с большим объемом памяти.
Увеличение максимального размера программной очереди передачи не приводит к
расходу дополнительной памяти, так как в эту очередь помещаются только те
пакеты, которые уже сохранены протоколами верхнего уровня.
</p><p></p><h4><a name="HDRH09H83">Очереди приема</a></h4>
<p>Некоторые адаптеры позволяют изменить объем ресурсов, выделяемых для приема
пакетов из сети. Это может быть число (и даже размер) буферов приема,
или параметр очереди приема, косвенно определяющий число буферов
приема.
</p><p>Объем ресурсов, выделяемых для приема пакетов, требуется увеличить при
максимальной нагрузке в сети. Получаемые пакеты помещаются драйвером
сетевого интерфейса в очередь приема. Если очередь приема переполнена,
пакеты теряются, что приводит к необходимости повторной передачи этих пакетов
отправителем. Параметры очереди приема можно настроить с помощью команд
SMIT или <b>chdev</b> (за дополнительной информацией обратитесь к разделу
<a href="#HDRI64741">Выбор значений параметров</a>). Для каждого типа
адаптера задается максимальный размер очереди (см. <a href="#HDRI56124">Настройка адаптеров MCA и PCI</a>).
</p><p>Для всех адаптеров Microchannel и адаптеров PCI параметры очереди приема
обычно задают число выделенных адаптеру буферов приема пакетов.
</p><p></p><h4><a name="HDRH09H84">Буферы устройств</a></h4>
<p>В AIX 4.1.4 и выше некоторым устройствам выделяются отдельные
структуры mbuf. Это позволяет драйверу получить собственный набор
буферов и выполнить их предварительную настройку для DMA. Такая
настройка будет выполняться всего один раз, что позволит повысить
производительность системы. Кроме того, адаптер может запросить буферы,
размер которых соответствует значению его MTU. Например, для
коммутаторов ATM, HIPPI и SP2 MTU равен 64 Kб. Максимальный размер mbuf
системы - 16 Кб. Если адаптеру выделить буфер размером 64 Kб, то
приложения смогут записывать более крупные порции данных (64 Kб) прямо в буфер
адаптера. Иначе сообщение придется записать в несколько буферов
размером 16 Кб, причем на выделение и освобождение лишних буферов потребуются
дополнительные ресурсы системы.
</p><p>Ниже перечислены адаптеры, применяющие собственные буферы mbuf:
</p><ul>
<li>MCA ATM
</li><li>MCA HIPPI
</li><li>Различные коммутируемые высокоскоростные адаптеры SP
</li></ul>
<p>Поддержка буферов конкретных устройств усложняет работу
администратора. Для просмотра статистики, относящейся к буферам
адаптеров, и изменения параметров адаптеров администратору придется применять
команды конкретного устройства. Если согласно данным статистики
некоторые пакеты были отклонены по причине нехватки ресурсов буферов, то
следует увеличить размеры буферов.
</p><p>Поскольку для каждого типа адаптера существуют свои утилиты для изменения
параметров, они здесь не описаны. Параметры ATM MCA описаны в разделе
<a href="#HDRI40759">Адаптер MCA</a>. Для просмотра статистических данных о
работе ATM предназначена команда <b>atmstat -d atm0</b> (вместо нуля
укажите номер своего интерфейса ATM).
</p><p></p><h4><a name="HDRH09H85">В каких случаях нужно увеличить значения параметров очередей приема и передачи</a></h4>
<p>Ниже описаны случаи, в которых рекомендуется увеличить значения параметров
очередей приема и передачи:
</p><ol type="1">
<li>Если CPU работает намного быстрее, чем сеть, или по одной сети передают
данные несколько приложений. Обычно это характерно для больших
многопроцессорных систем (SMP).
</li><li>Если для параметров <b>tcp_sendspace</b> и <b>tcp_recvspace</b>
установлены большие значения. Они могут быть установлены командой
<b>no</b> или приложениями, которые посредством системных вызовов
увеличивают объем буферов приема и передачи протокола TCP. В этом
случае CPU может одновременно отправить адаптеру большое количество
пакетов. Аналогичная ситуация может возникнуть при изменении параметров
<b>udp_sendspace</b> и <b>udp_recvspace</b> протокола UDP.
</li><li>При резком возрастании плотности потока данных.
</li><li>При отправке небольших пакетов нагрузка на сеть выше, чем при отправке
больших сообщений. Это связано с тем, что передача больших сообщений по
сети занимает большее время. Соответственно, за единицу времени будет
передаваться меньшее число сообщений.
</li></ol>
<p></p><h4><a name="HDRH09H86">Команды просмотра и изменения параметров очереди</a></h4>
<p>С помощью нескольких утилит просмотра состояния можно просмотреть
максимально возможную скорость передачи данных очередью и среднее число
переполнений очереди. Для этого вызовите команду <b> netstat -v</b>
или специальную команду для просмотра статистики адаптера: <b>
entstat</b> для Ethernet, <b>tokstat</b> для Token-Ring,
<b>fddistat</b> для FDDI, <b>atmstat</b> для ATM и т.д.
</p><p>Пример вывода команды <b>entstat</b> приведен в разделе <a href="http://www.regatta.cs.msu.su/doc/usr/share/man/info/ru_RU/a_doc_lib/aixbman/prftungd/2365c92.htm#HDRI95563"> Команда entstat</a>. Кроме того, эти значения можно
узнать с помощью утилиты <b>netstat -i</b>. Если в выводе этой
команды значение <tt>Oerrs</tt> для интерфейса отлично от нуля, то, скорее
всего, очередь вывода переполнена.
</p><p></p><h4><a name="HDRH09H87">Просмотр параметров</a></h4>
<p>Для просмотра конфигурации адаптера вызовите команду <b>lsattr -E
-l</b><i> имя-адаптера</i> или команду SMIT <b>smitty
commodev</b>.
</p><p>С каждым адаптером связан свой набор переменных. Вот только
некоторые примеры параметров, задающих длину очереди передачи:
<b>sw_txq_size</b>, <b>tx_que_size</b>,
<b>xmt_que_size</b>. Параметры длины очереди приема и/или пула
буферов приема могут называться <b>rec_que_size</b>,
<b>rx_que_size</b> или <b>rv_buf4k_min</b>.
</p><p>Ниже приведен вывод команды <b>lsattr -E -l atm0</b> для адаптера ATM
155 Мб/с IBM PCI. Здесь значение <b>sw_txq_size</b> равно 250, а
значение <b>rv_buf4K_min</b> - x30.
</p><p>
</p><pre># lsattr -E -l atm0
dma_mem        0x400000    НД                                           Ложь
regmem         0x1ff88000  Адрес шины памяти регистров адаптера         Ложь
virtmem        0x1ff90000  Адрес шины виртуальной памяти адаптера       Ложь
busintr        3           Уровень прерываний шины                      Ложь
intr_priority  3           Приоритет прерывания                         Ложь
use_alt_addr   нет         Разрешить альтернативный адрес ATM MAC       Истина
alt_addr       0x0         Альтернативный адрес ATM MAC (12 шестн.цифр) Истина
<b>sw_txq_size</b>  250         Размер программной очереди передачи          Истина
max_vc         1024        Максимальное число  необходимых VC           Истина
min_vc         32          Минимальное число поддерживаемых VC          Истина
<b>rv_buf4k_min</b> 0x30        Мин. число зарез. буферов приема по 4 Кб     Истина
interface_type 0           Интерфейс Sonet или SDH                      Истина
adapter_clock  1           Предоставление таймера SONET                 Истина
uni_vers       auto_detect НД                                           Истина
</pre>
<p>Ниже в качестве примера приведены параметры адаптера Micro 10/100 Ethernet,
выданные командой <b>lsattr -E -l ent0</b>. Здесь оба значения
<b>tx_que_size</b> и <b>rx_que_size</b> равны 256.
</p><p>
</p><pre># lsattr -E -l ent0
bus_intr_lvl  11              Уровень прерываний шины            Ложь
intr_priority  3              Приоритет прерывания               Ложь
dma_bus_mem   0x7a0000        Адрес памяти шины использ. для DMA Ложь
bus_io_addr   0x2000          Адрес ввода-вывода шины            Ложь
dma_lvl       7               Уровень арбитража DMA              Ложь
<b>tx_que_size</b> 256             Размер очереди передачи            Истина
<b>rx_que_size</b> 256             Размер очереди приема              Истина
use_alt_addr  нет             Разрешить альтерн. адрес ETHERNET  Истина
alt_addr      0x              Альтернативный адрес ETHERNET      Истина
media_speed   100_Full_Duplex Быстродействие линии связи         Истина
ip_gap        96              Интервал между пакетами            Истина
</pre>
<p></p><h4><a name="HDRI64741">Изменение параметров</a></h4>
<p>Ниже перечислены некоторые из параметров, которые могут быть изменены
пользователем:
</p><ul>
<li>Размер очереди передачи (<b>tx_que_size</b>) 
<p>Драйвер может работать с очередью передачи, размер которой задан
пользователем. Это будет очередь адаптера, а не ее расширение.
Ее размер может быть равен 16, 32, 64, 128 или 256; по умолчанию он равен
256. 
</p><p>Поскольку можно изменить размер аппаратной очереди адаптера, драйвер не
поддерживает программную очередь.
</p></li><li>Размер очереди приема (<b>rx_que_size</b>) 
<p>Драйвер позволяет изменять размер очереди приема. Это будет очередь
адаптера, а не ее расширение. Ее размер может быть равен 16, 32, 64,
128 или 256; по умолчанию он равен 256.
</p></li><li>Размер пула буферов приема (<b>rxbuf_pool_size</b>) 
<p>Драйвер устройства разрешает изменить размер пула буферов приема.
Это значение задает число структур mbuf, зарезервированных для приема
пакетов. Минимальный размер буфера равен размеру очереди приема, а
максимальный размер составляет 2 Кб (значение по умолчанию - 384).
</p></li><li>Скорость передачи данных (<b>media_speed</b>) 
<p>Драйвер устройства поддерживает следующие скорости передачи данных:
10 (10 Мб/с, полудуплекс), 20 (10 Мб/с, дуплекс), 100 (100 Мб/с, полудуплекс),
200 (100 Мб/с, дуплекс), а также автоматический выбор скорости передачи данных
в случае витой пары. При работе с портом AUI драйвер устройства
поддерживает скорость передачи данных 10 (10 Мб/с, полудуплекс) и 20 (10 Мб/с,
дуплекс). При работе с портом BNC поддерживается только значение 10 (10
Мб/с, полудуплекс). Это значение можно изменить. При работе с
витой парой скорость передачи данных по умолчанию выбирается
автоматически.
</p></li><li>Разрешить применение альтернативного адреса (<b>use_alt_addr</b>) 
<p>Для драйвера устройства предусмотрен параметр, разрешающий применять
альтернативный сетевой адрес. Допустимы значения yes и no.
Значение по умолчанию равно no. Если этот параметр равен yes, то
применяется адрес, заданный в параметре <b>alt_addr</b>.
</p></li><li>Альтернативный сетевой адрес (<b>alt_addr</b>) 
<p>В качестве сетевого адреса драйвер устройства применяет аппаратный адрес
адаптера или указанный альтернативный сетевой адрес. Если параметр
<b>use_alt_addr </b> равен yes, то применяется альтернативный
адрес. Можно указать любой адрес узла сети. Групповые адреса
указывать нельзя.
</p></li><li>Интервал между пакетами (<b>ip_gap</b>) 
<p>Интервал между пакетами (IPG) определяет уровень активности адаптера в
сети. Чем меньше это значение, тем активнее адаптер. Если в
статистической информации о работе адаптера указано большое число конфликтов и
задержек, то увеличьте это значение. Допустимы значения от 94 до 252,
кратные четырем. Значение по умолчанию равно 96. Оно означает,
что в сети со скоростью передачи данных 10 Мб/с значение IPG будет равно 9,6
мс, а в сети со скоростью передачи данных 100 Мб/с - 0,96 мс. В сети со
скоростью передачи данных 10 Мб/с значение IPG умножается на 100 наносекунд, а
в сети со скоростью передачи данных 100 Мб/с - на 10 наносекунд.
</p></li></ul>
<p>Для изменения значений параметров выполните следующие действия:
</p><ol type="1">
<li>Отключите интерфейс с помощью следующей команды: 
<p>
</p><pre># ifconfig en0 detach
</pre> 
<p>где <i>en0</i> задает имя адаптера.
</p></li><li>Просмотрите параметры адаптера с помощью SMIT. Выберите
<b>Устройства -&gt; Средства связи -&gt;</b><i> тип адаптера </i><b>
-&gt; Изменить...</b>
</li><li>Поместите курсор на поле, значение в котором нужно изменить, и нажмите
F4. Появится диапазон или список допустимых значений.
</li><li>Выберите нужное значение и нажмите Enter. Значение параметра будет
обновлено в базе данных ODM.
</li><li>Подключите адаптер с помощью следующей команды: 
<p>
</p><pre># ifconfig en0 <i>имя-хоста</i> up
</pre>
</li></ol>
<p>Кроме того, значения параметров можно изменить с помощью следующей
команды:
</p><p>
</p><pre># chdev -l [имя-интерфейса] -a [имя-атрибута]=значение
</pre>
<p>Например, для того чтобы присвоить параметру <b>tx_que_size</b>
интерфейса en0 значение 128, нужно вызвать приведенную ниже последовательность
команд. Обратите внимание, что этот драйвер поддерживает очереди
передачи только четырех размеров, поэтому для изменения этого параметра
удобнее воспользоваться командой SMIT.
</p><p>
</p><pre># ifconfig en0 detach
# chdev -l ent0 -a tx_que_size=128
# ifconfig en0 <i>имя-хоста</i> up
</pre>
<p></p><h4><a name="HDRI56124">Настройка адаптеров MCA и PCI</a></h4>
<p>Ниже описаны различные параметры адаптера. Указанные параметры
поддерживаются в операционной системе AIX 4.3.1. Это
описание позволяет составить более четкое представление об имеющихся
параметрах. Кроме того, оно может применяться в том случае, если вы не
можете просмотреть список параметров в системе.
</p><p>Имена параметров, значения по умолчанию и списки допустимых значений были
получены из базы данных ODM. В качестве комментария приведен вывод
команды <b>lsattr -E -l</b> <i>имя-интерфейса</i>.
</p><p>В поле Примечания указана дополнительная информация.
</p><p></p><h5><a name="HDRI40759">Адаптер MCA</a></h5>
<p>
</p><pre>Код:  2980
Высокопроизводительный LAN адаптер Ethernet (8ef5)
 
Параметр      По умолч.Диапазон  Комментарий                Примечания
------------- -------- -------- --------------------------- -----------------
xmt_que_size   512     20-2048   размер очереди передачи   программная очередь передачи
rec_que_size   30      20-150    размер очереди приема     Cм. примечание 1
rec_pool_size  37      16-64     разм. пула буферов приема На адаптере
 
 
Код: 2992
Высокопроизводительный LAN адаптер Ethernet (8f95)
 
Параметр      По умолч. Диапазон  Комментарий         Примечания
------------- --------- -------- -------------------  ----------
xmt_que_size   512      20-2048  разм. очер. передачи  программная очередь
 
 
Код: 2994
Адаптер Ethernet TX MCA 10/100 Мбит/с IBM (8f62)
 
Параметр      По умолч.   Диапазон          Комментарий         Примечания
------------- -------- ----------------  --------------------- -----------
tx_que_size   64       16,32,64,128,256  разм.очереди передачи аппаратная очередь
rx_que size   32       16,32,64,128,256  разм.очереди приема   аппаратная очередь
 
 
Код: 2970
Высокопроизводительный  адаптер Token-Ring (8fc8)
 
Параметр      По умолч. Диапазон   Комментарий            Примечания
------------- -------- --------  ---------------------  ------------
xmt_que_size  99       32-2048   разм очереди передачи  программная очередь
rec_que_size  30       20-150    размер очереди приема  См. примечание 1
 
 
Код: 2972
Высокопроизводительный  адаптер Token-Ring (8fa2)
 
Параметр      По умолч. Диапазон   Комментарий                 Примечания
------------- -------- -------- ----------------------------  ----------
xmt_que_size  512      32-2048  размер очереди передачи       программная очередь
rx_que_size   32       32-160   размер очереди приема         аппаратная очередь
 
 
Код: 2727
FDDI Primary Card, Single Ring Fiber
 
Параметр      По умолч. Диапазон  Комментарий                    Примечания
------------- -------- --------  ------------------------------ --------------------
tx_que_size   512      3-2048    Размер очер. передачи (в mbuf)
rcv_que_size  30       20-150    Очередь приема                 См. примечание 1
 
 
Код: 2984
Адаптер оптоволоконного ATM 100 Мбит/с (8f7f)
 
Параметр      По умолч.   Диапазон          Комментарий         Примечания
--------------- ----- --------- -------------------------- -----
sw_queue         512       0-2048                          Длина программной очереди передачи        Программная очередь
dma_bus_width   0x1000000 0x800000-0x40000000,0x100000  Объем памяти для DMA   См. примечание 3
max_sml_bufs    50    40-400    Макс. число мал.буф.ATM    Макс. число буферов по 256 байт
max_med_bufs     100       40-1000                         Максимальное число mbuf ATM               Макс. колич. буферов по 4 Кб
max_lrg_bufs    300   75-1000   Макс. число бол. буф. ATM  Макс. число буферов по 8 Кб  См. прим. 2
max_hug_bufs     50        0-400                           Макс. число крупных mbuf ATM              Макс. колич. буферов по 16 Кб
max_spec_bufs   4     0-400     Макс. число mbuf ATM MTB   Макс. размер max_spec_buf
spec_buf_size   64    32-1024   Макс. блок передачи (MTB) в Кб
sml_highwater   20    10-200    Мин. число мал. буф. ATM   Мин. число буферов по 256 байт
med_highwater   30    20-300    Мин. число ср. буф. ATM    Мин. число буферов по 4 Кб
lrg_highwater   70    65-400    Мин. число бол. буф. ATM   Мин. число буферов по 8 Кб
hug_highwater   10    4-300     Мин. число оч.бол.буф. ATM Мин. число буферов по 16 Кб
spec_highwater  20    0-300     Мин. число mbuf ATM MTB    Мин. число буферов по 64 Кб
best_peak_rate  1500  1-155000  Макс. скорость передачи по виртуальному контуру
 
 
Код: 2989
Адаптер оптоволоконного ATM 155 Мбит/с (8f67)
 
Параметр      По умолч. Диапазон  Комментарий Примечания
------------- --------  --------  ---------- -------
 (те же параметры, что и для адаптера ATM 100, описанного выше)
</pre>
<p><b>Примечания</b>:
</p><ol type="1">
<li>Программная очередь передачи применяется только для совместимости с
приложениями операционной системы версии 3.2.х, которые напрямую
считывают пакеты из очереди драйвера с помощью интерфейса драйвера сетевого
устройства. Этот параметр ограничивает число пакетов для приложений,
помещаемых в очередь. Он применяется только в том случае, если
установлен пакет <b>bos.compat</b>. 
<p>Эта очередь не применяется стандартным стеком протоколов TCP/IP.
</p></li><li>MCA ATM: Для приема данных также применяются большие буферы
(размером 8 Кб). Функция приема данных применяет только такие буферы,
поэтому если их число недостаточно, то скорость получения данных будет
низкой. 
<p>Все остальные размеры поддерживаются только буферами передачи.
</p></li><li>MCA ATM: Для того чтобы увеличить общее число буферов, может
потребоваться изменить параметр <b>dma_bus_width</b> (= 0x1000000).
Общим объемом памяти буферов ATM управляет параметр объема памяти DMA.
Если при увеличении числа буферов или верхнего ограничения возникла ошибка,
увеличьте значение этого параметра.
</li></ol>
<p></p><h5><a name="HDRH09H91">Адаптеры PCI</a></h5>
<p>
</p><pre>Код: 2985
Адаптер PCI Ethernet IBM (22100020)
 
Параметр      По умолч. Диапазон         Комментарий         Примечания
------------- -------- ----------------- ------------------- ---------
tx_que_size   64       16,32,64,128,256  разм.очер. передачи Аппаратные очереди
rx_que size   32       16,32,64,128,256  разм.очер. приема   Аппаратные очереди
 
 
Код: 2968
Адаптер Ethernet PCI 10/100 Мбит/с IBM (23100020)
 
Параметр      По умолч.   Диапазон         Комментарий           Примечания
---------------- ------- ---------------- --------------------- --------------------
tx_que_size      256     16,32,64,128,256  разм.очер. передачи   Аппаратная очередь Примечание 1
rx_que size      256     16,32,64,128,256  разм.очер. приема     Аппаратная очередь Примечание 2
rxbuf_pool_size  384     16-2048          число буферов приема в  Буферы для приема данных
                                          пуле                  Примечание 3
 
 
Код: 2969
Адаптер Gigabit Ethernet-SX PCI (14100401)
 
Параметр      По умолч.   Диапазон          Комментарий         Примечания
------------- ------- -------- ----------------------------------- ---------
tx_que_size    512       512-2048     Размер программной очереди передачи         Программная очередь
rx_que_size    512       512          Размер очереди приема                       Аппаратная очередь
receive_proc  6       0-128    Минимальное число дескрипторов буфера приема
 
 
Код: 2986
3Com 3C905-TX-IBM Fast EtherLink XL NIC
 
Параметр      По умолч.   Диапазон          Комментарий         Примечания
-------------- -------- ------ ---------------------------- ----------
tx_wait_q_size 32       4-128        Размер очереди передачи драйвера             Аппаратные очереди
rx_wait_q_size 32       4-128        Размер очереди приема драйвера               Аппаратные очереди
 
 
Код: 2742
Адаптер SysKonnect PCI FDDI (48110040)
 
Параметр      По умолч.   Диапазон          Комментарий         Примечания
------------- -------- -------- ------------------- ---------------
tx_queue_size 30       3-250          Размер очереди передачи                     Программная очередь
RX_buffer_cnt 42       1-128          Число полученных кадров                     Пул буферов приема
 
 
Код: 2979
Адаптер Token-Ring PCI IBM (14101800)
 
Параметр      По умолч.   Диапазон          Комментарий         Примечания
------------- -------- ------- --------------------------- --------
xmt_que_size  96        32-2048       Размер очереди передачи                     Программная очередь
rx_que_size   32       32-160         Размер очереди приема                       Аппаратная очередь
 
 
Код: 2979
Адаптер Token-Ring PCI IBM (14103e00)
 
Параметр      По умолч.   Диапазон          Комментарий         Примечания
------------- -------- -------- -------------------- --------
xmt_que_size  512      32-2048        Размер очереди передачи                     Программная очередь
rx_que_size   64       32-512         Размер очереди приема                       Аппаратная очередь
 
 
Код: 2988
Адаптер ATM 155 Мбит/с IBM PCI (14107c00)
 
Параметр      По умолч.   Диапазон          Комментарий         Примечания
------------- --------- ------------ -------------------------------- --------
sw_txq_size   100       0-4096        Размер очереди передачи    Программная очередь
rv_buf4k_min  48 (0x30) 0-512 (x200)  Мин. число зарезерв. буферов приема по 4 Кб
</pre>
<p>Примечания для адаптера IBM 10/100 Мб/с Ethernet PCI:
</p><ol type="1">
<li>В версиях AIX младше 4.3.2 значение по умолчанию параметра
<b>tx_queue_size</b> равно 64.
</li><li>В версиях AIX младше 4.3.2 значение по умолчанию параметра
<b>rx_que_size</b> равно 32.
</li><li>В AIX 4.3.2 и выше применяется новый параметр драйвера,
задающий число буферов, выделенных для приема пакетов.
</li></ol>
<p></p><h4><a name="HDRI50640">Применение нитей на уровне адаптеров LAN</a></h4>
<p>По умолчанию драйверы напрямую вызывают уровень IP, который в режиме
прерывания обращается к стеку протоколов для вызова уровня сокета. За
счет этого сокращается число команд, но возрастает время обработки
прерывания. В многопроцессорной системе один процессор может не
справиться с обработкой принимаемых пакетов через адаптер с высокой скоростью
передачи данных. В случае <i>применения нитей</i> драйвер помещает
принятый пакет в очередь нити, а затем нить вызывает уровень IP, TCP или
сокета. Такая нить может выполняться на других менее загруженных
процессорах. В некоторых случаях применение нитей позволяет повысить
пропускную способность системы.
</p><p>
</p><blockquote>
<b>Примечание</b>: Эта функция не поддерживается в однопроцессорных
системах, поскольку ее применение в таких системах приведет к снижению
производительности за счет увеличения числа команд.
</blockquote>
<p>Эта функция может применяться адаптерами LAN при приеме данных. Ее
можно включить для интерфейса с помощью команды <b>ifconfig</b>
(<b>ifconfig</b><i>интерфейс</i><b> thread</b> или
<b>ifconfig</b> <i>интерфейс</i><i> имя-хоста</i><b> up
thread</b>).
</p><p>Для выключения этой функции вызовите команду <b>ifconfig</b><i>
интерфейс</i> <b>-thread</b>.
</p><p>Ниже приведены некоторые рекомендации по применению нитей:
</p><ul>
<li>Для применения этой функции число процессоров должно быть больше числа
адаптеров. Рекомендуется, чтобы число процессоров было как минимум в
два раза больше числа адаптеров.
</li><li>В системах с мощным процессором эффект от применения этой функции
меньше. Она в первую очередь предназначена для компьютеров с
низкопроизводительными процессорами.
</li><li>Эта функция позволяет повысить производительность в том случае, когда
система получает большое число пакетов. В сетях с MTU=1500 эта функция
будет работать более эффективно, чем в сетях с MTU=9000 (большие кадры), так
как в сетях с меньшим размером MTU число пакетов будет больше. 
<p>Нити работают эффективнее, если их очередь все время заполнена, и им не
нужно переходить в состояние ожидания получения ввода. В этом случае
будут сэкономлены ресурсы, затрачиваемые драйвером на активизацию нитей и их
передачу на выполнение.
</p></li><li>Нити уменьшают количество процессорного времени, которое затрачивается на
обработку прерываний. В результате процессор быстрее возобновляет
выполнение пользовательских задач.
</li><li>Если число пакетов недостаточно велико, для того чтобы очередь нити
никогда не пустовала, то производительность может снизиться на 10
процентов. В этом случае в среднем 10 процентов процессорного времени
будет затрачиваться на планирование запуска нитей и передачу нитей на
выполнение.
</li></ul>
<p></p><h3><a name="HDRI25950">Настройка максимального размера сегмента TCP</a></h3>
<a name="IDX2451"></a>
<a name="IDX2452"></a>
<p>Протокол TCP позволяет согласовать значение максимального размера сегмента
(MSS) обоим участникам соединения. Каждая сторона указывает
предлагаемый размер MSS в поле ОПЦИИ заголовка пакета TCP. Будет
принято наименьшее из двух значений.
</p><p>Такое согласование позволяет избежать фрагментации пакетов при прохождении
через маршрутизаторы и шлюзы, и их последующей сборки на целевом хосте, что
приводит к задержкам и снижению скорости передачи.
</p><p>При выборе значения MSS, предлагаемого уровнем TCP при настройке
соединения, учитывается то, в какой сети расположена целевая система: в
той же физической сети (в этом случае у систем совпадает адрес сети) или в
другой сети (удаленной сети).
</p><p></p><h4><a name="HDRH09H94">Локальная сеть</a></h4>
<p>Если целевая система подключена к той же локальной сети, то уровень TCP
выбирает значение MSS с учетом текущего значения MTU, установленного для
сетевого интерфейса:
</p><p>TCP MSS = MTU - размер заголовка TCP - размер заголовка IP.
</p><p>Поскольку это максимальный размер MSS, при котором уровень IP не выполняет
фрагментацию пакета, это значение является оптимальным. Следовательно,
в локальных сетях изменять значение MSS не нужно.
</p><p></p><h4><a name="HDRH09H95">Удаленная сеть</a></h4>
<p>Если целевая система расположена в удаленной сети, то уровень TCP данной
операционной системы предлагает установить MSS, равный 512 байт. Это
значение выбирается исходя из того, что все IP-маршрутизаторы должны
поддерживать MTU не меньше 576 байт.
</p><p>Оптимальное значение MSS при передаче данных в удаленную систему выбирается
исходя из наименьшего MTU, поддерживаемого всеми промежуточными сетями на пути
между конечными системами. Это динамическая величина и ее можно
вычислить только на основе информации о маршруте блока передачи. По
умолчанию протокол TCP не поддерживает вычисление MTU маршрута, поэтому для
MSS предлагается установить такое маленькое значение. Однако вы можете
включить вычисление MTU маршрута TCP с помощью следующей команды:
</p><p>
</p><pre># no -o tcp_pmtu_discover=1
</pre>
<p>Функция вычисления MTU маршрута поддерживается в AIX, начиная с версии
4.2.1, однако по умолчанию она выключена. В AIX
4.3.3 и выше эта функция по умолчанию включена.
</p><p>Побочным эффектом при этом является увеличение объема таблицы маршрутизации
(для каждого активного соединения TCP добавляется одна новая запись). С
помощью команды <b>no</b> присвойте параметру <b>route_expire</b>
ненулевое значение, для того чтобы все неиспользуемые записи удалялись из
таблицы по истечении интервала <b>route_expire</b>.
</p><p>Хотя при работе в сети Internet значение по умолчанию оправданно низкое,
оно слишком мало, если вы работаете во внутренней корпоративной сети.
Поскольку в этом случае можно узнать, какие значения MTU применяются в
промежуточных физических сетях, администратор может вычислить минимальное
значение MTU и оптимальный размер MSS. В операционной системе
предусмотрено несколько средств для изменения значения MSS, применяемого
протоколом TCP. Необходимо, чтобы эти функции поддерживали и исходный,
и целевой хост. В неоднородных сетях нужно выбрать ту функцию, которая
есть в обеих системах.
</p><p></p><h5><a name="HDRH09H96">Статические маршруты</a></h5>
<p>Для того чтобы переопределить значение по умолчанию для параметра MSS (512
байт), можно задать статический маршрут к удаленной сети. Размер MTU
для этого маршрута задается в опции <b>-mtu</b> команды
<b>route</b>. Укажите в этом параметре фактический минимальный MTU
маршрута. На его основе будет автоматически вычислен оптимальный размер
MSS.
</p><p>Такой способ выбора оптимального MSS для конкретных маршрутов между сетями
рекомендуется применять в среде с постоянной конфигурацией. Ниже
перечислены недостатки такого подхода:
</p><ul>
<li>Такой способ неприменим для динамической маршрутизации.
</li><li>Неэффективен при росте числа удаленных сетей.
</li><li>Статический маршрут должен быть определен в обеих конечных
системах. Только в этом случае вместо значения по умолчанию будет
применяться оптимальный MSS.
</li></ul>
<p></p><h5><a name="HDRI31586">Применение опции tcp_mssdflt команды no</a></h5>
<p>С помощью этого параметра можно задать максимальный размер пакета для
соединений с удаленными сетями. Если в системе есть несколько адаптеров
с различными значениями MTU, то это значение будет действовать для всех
адаптеров. Значение по умолчанию (512), которое применяется протоколом
TCP при подключении к удаленным сетям, можно изменить с помощью команды
<b>no</b>. В этом случае новое значение MSS будет установлено для
всех соединений с удаленными сетями.
</p><p>Для того чтобы переопределить значение MSS по умолчанию, укажите значение,
равное минимальному из значений MTU минус 40 (вычитается стандартный размер
заголовков TCP и IP).
</p><p>При работе в локальной сети значение MSS имеет тот же смысл, что и значение
MTU, за исключением того, что <b>tcp_mssdflt</b> определяет размер данных
в пакете. Выбирая значение <b>tcp_mssdflt</b>, вычтите из значения
MTU суммарный размер всех заголовков. В противном случае пакет будет
разделен на два фрагмента. Подсчитайте значение MSS по следующей
формуле:
</p><p>
</p><pre>MTU интерфейса - размер заголовка TCP - размер заголовка IP - размер заголовка rfc1323
</pre>
<p>Это равно:
</p><p>
</p><pre>MTU - 20 - 20 - 12 или MTU - 52
</pre>
<p>Если это значение будет равно (MTU - 52), то во всех возможных случаях
будут отправляться полные пакеты.
</p><p>Если размер MTU в сети превосходит значение по умолчанию, то вам не
потребуется изменять MSS для этой сети. Однако у такого способа
вычисления MSS есть и некоторые недостатки:
</p><ul>
<li>Увеличение значения по умолчанию может привести к фрагментации пакета на
маршрутизаторе IP, если целевая система находится за пределами рассматриваемой
среды и размеры MTU промежуточных сетей неизвестны.
</li><li>Значения параметра <b>tcp_mssdflt</b> на исходном и целевом хосте
должны совпадать.
</li></ul>
<p></p><h5><a name="HDRH09H98">Создание подсетей и опция subnetsarelocal команды no</a></h5>
<p>Подсетями называются физические сети, которым присвоен общий адрес
сети. С помощью опции <b>subnetsarelocal</b> команды <b>no</b>
можно установить системную переменную, указывающую, каким образом должны
рассматриваться подсети: как локальные или как удаленные сети.
Если будет вызвана команда <b>no -o subnetsarelocal=1 </b> (такое значение
применяется по умолчанию), то хост A из подсети 1 будет считать, что хост B из
подсети 2 расположен в той же физической сети.
</p><p>В результате при установлении соединения между хостами A и B значение MSS
будет выбираться исходя из того, что они расположены в одной сети.
Каждый из хостов предложит значение MSS, вычисленное на основании MTU своего
сетевого интерфейса, и будет пытаться установить оптимальное значение
MSS.
</p><p>Ниже перечислены преимущества такого подхода:
</p><ul>
<li>Не требуются статические связывания; согласование MSS происходит
автоматически.
</li><li>Этот метод не отменяет и не заменяет согласование TCP MSS, что позволяет
выбрать оптимальное значение даже в том случае, если MTU смежных подсетей
немного отличаются.
</li></ul>
<p>У такого подхода есть и некоторые недостатки:
</p><ul>
<li>Возможна фрагментация пакета на маршрутизаторе IP, если две сети с
большими значениями MTU соединяются через сеть с меньшим MTU. Такая
ситуация проиллюстрирована на следующем рисунке.
<p>
</p><p><b><a name="Figure_9-3">Рис. 9-3. Фрагментация при передаче данных между подсетями</a></b>.
 На этом рисунке показан маршрут передачи данных от хоста A. Он проходит
 через сеть FDDI с MTU=4352, маршрутизатор 1 и сеть Ethernet с MTU=1500.
 После этого данные передаются через маршрутизатор 2 в сеть FDDI с 
MTU=4352, в которой расположен целевой хост B. Ниже описано, каким 
образом в данном случае выполняется фрагментация.<br>
<img src="%D0%A0%D1%83%D0%BA%D0%BE%D0%B2%D0%BE%D0%B4%D1%81%D1%82%D0%B2%D0%BE%20%D0%BF%D0%BE%20%D0%BD%D0%B0%D1%81%D1%82%D1%80%D0%BE%D0%B9%D0%BA%D0%B5%20%D0%BF%D1%80%D0%BE%D0%B8%D0%B7%D0%B2%D0%BE%D0%B4%D0%B8%D1%82%D0%B5%D0%BB%D1%8C%D0%BD%D0%BE%D1%81%D1%82%D0%B8%20-%20%D0%9D%D0%B0%D1%81%D1%82%D1%80%D0%BE%D0%B9%D0%BA%D0%B0%20%D0%BF%D1%80%D0%BE%D0%B8%D0%B7%D0%B2%D0%BE%D0%B4%D0%B8%D1%82%D0%B5%D0%BB%D1%8C%D0%BD%D0%BE%D1%81%D1%82%D0%B8%20TCP%20%D0%B8%20UDP_files/h09i12.jpg" alt="Рисунок h09i12"><br>
</p></li><li>В данном примере, хосты A и B устанавливают соединение при MTU равном
4352. Пакет, отправленный хостом A хосту B, будет разбит на фрагменты
на маршрутизаторе 1 и собран на маршрутизаторе 2. При передаче данных
от B к A маршрутизаторы меняются ролями.
</li><li>Для применения этой функции как исходный, так и целевой хост должны
рассматривать подсети как локальные сети.
</li></ul>
<p></p><h3><a name="HDRI65236">Настройка буфера сокета UDP</a></h3>
<a name="IDX2453"></a>
<a name="IDX2454"></a>
<p>UDP - это протокол передачи дейтаграмм. При отправке дейтаграммы все
сообщение должно быть скопировано в область памяти ядра за одну атомарную
операцию. В связи с этим максимальный объем данных, который может быть
отправлен UDP за одну операцию, ограничен размером буфера памяти, выделенного
сокету UDP, а также максимальным размером пакета, установленным на уровне
IP.
</p><p></p><h4><a name="HDRI81295">udp_sendspace</a></h4>
<p>Присвойте этому параметру значение 65536. Применять большие значения
не рекомендуется. Поскольку UDP передает пакет без всякой обработки, а
на уровне IP для размера пакета установлено ограничение в 65536 байт, пакеты
большего размера могут быть отброшены на уровне IP. При необходимости
протокол IP поделит дейтаграмму на пакеты меньшего размера с учетом значения
MTU, установленного для интерфейса, через который будет отправлен
пакет. Например, дейтаграмма размером 8 Кб будет разбита на уровне IP
на пакеты размером 1500 байт, если она будет передана по сети Ethernet.
Поскольку UDP не поддерживает средства управления потоком, все пакеты,
полученные UDP, передаются на уровень IP (где они могут быть фрагментированы),
а затем помещаются сразу в очередь передачи драйвера устройства.
</p><p></p><h4><a name="HDRH09H102">udp_recvspace</a></h4>
<p>В целевой системе полученная дейтаграмма (или ее фрагмент, если размер
дейтаграммы больше MTU) помещается в буфер драйвера устройства. Обычно
размер этого буфера достаточен для хранения максимального пакета, который
может быть получен через данное устройство.
</p><p>Значение <b>udp_recvspace</b> сложнее выбрать, так как оно зависит от
типа сетевого адаптера, параметров UDP и числа дейтаграмм, находящихся в
очереди сокета. Рекомендуется, чтобы значение <b>udp_recvspace</b>
было несколько больше, чем требуется, потому что если размер буфера будет
недостаточен для размещения пакета, то пакет будет отброшен.
</p><p>Например, в Ethernet размер буфера приема обычно составляет порядка 2
Кб. Даже если будет получен пакет, размер которого совпадает с размером
MTU (1500 байт), то он займет только 73 процентов буфера. Фрагменты
будут накапливаться на уровне IP до тех пор, пока не будет получена вся
дейтаграмма UDP. После этого она будет передана на уровень UDP.
UDP поместит полученную дейтаграмму в буфер сокета получателя. Однако
если объем памяти, выделенный для буфера сокета, превышает
<b>udp_recvspace</b>, то вся дейтаграмма будет отброшена. В этом
случае будет увеличено значение счетчика <tt>число отброшенных пакетов из-за
переполнения буфера сокета</tt>, значение которого можно узнать с помощью
команды <b> netstat -s</b>.
</p><p>При настройке <b>udp_recvspace</b> следует учитывать, что подсистема
связи подсчитывает объем памяти, занятый буферами, а не их содержимым.
В предыдущем примере дейтаграмма размером 8 Кб будет разбита на 6 пакетов, для
размещения которых потребуется 6 буферов приема. В сети Ethernet размер
буфера составляет 2048 байт. Следовательно, общий объем памяти, занятый
буферами сокета, содержащими дейтаграмму размером 8 Кб, составляет
</p><p>
</p><pre>6*2048=12288 байт
</pre>
<p>Следовательно, значение <b>udp_recvspace</b> нужно выбирать и с учетом
размера буферов приема. Этот размер зависит от размера дейтаграммы и
типа драйвера устройства. Для размещения дейтаграммы размером 64 байта
потребуется буфер размером 2 Кб.
</p><p>Кроме того, нужно учесть число дейтаграмм, которые могут быть помещены в
очередь сокета. Например, сервер NFS получает пакеты UDP от всех
клиентов через стандартный сокет. Если размер очереди сокета может
достигать 30 пакетов, и размер дейтаграммы NFS составляет 8 Кб, то параметру
<b>udp_recvspace</b> нужно присвоить значение 30 * 12288 = 368640.
В NFS версии 3 поддерживаются дейтаграммы размером до 32 Кб.
</p><p>Вначале параметру <b>udp_recvspace</b> рекомендуется присвоить
значение, в десять раз превышающее значение <b>udp_sendspace</b>, так как
UDP не может отправить пакет приложению до тех пор, пока не был получен
предыдущий пакет. Кроме того, хост может получить пакеты сразу от
нескольких узлов сети. Такое значение обеспечивает некоторый запас
памяти: пакеты начнут отбрасываться, только когда длина очереди
достигнет 10 пакетов. Для приложений, выполняющих большое число
параллельных операций и применяющих UDP, это значение должно быть еще
больше.
</p><p>
</p><blockquote>
<b>Примечание</b>: Значение <b>sb_max</b>, устанавливающее
ограничение на размер всех буферов сокета, должно быть как минимум в два раза
больше размера максимального из буферов приема и передачи TCP и UDP.
</blockquote>
<p></p><h3><a name="HDRI94437">Настройка буфера сокета TCP</a></h3>
<a name="IDX2455"></a>
<a name="IDX2456"></a>
<p>В приведенной ниже таблице перечислены <i>минимальные</i> рекомендуемые
значения для размеров буферов сокета в зависимости от типа адаптера и размера
MTU. Обратите внимание, что выбор слишком больших значений может
привести к снижению производительности. Кроме того, если размеры
буферов приема и передачи TCP выбраны неправильно, то может возникнуть ошибка
<i>Nagle Black hole</i>, приводящая к резкому снижению пропускной
способности адаптеров с большими значениями MTU, например, адаптеров
ATM.
<br>
</p><table border="">
<tbody><tr>
<td align="LEFT" valign="TOP" width="13%"><b>Устройство</b>
</td><td align="LEFT" valign="TOP" width="13%"><b>Скорость передачи данных</b>
</td><td align="LEFT" valign="TOP" width="8%"><b>MTU</b>
</td><td align="LEFT" valign="TOP" width="21%"><b>tcp_sendspace</b>
</td><td align="LEFT" valign="TOP" width="24%"><b>tcp_recvspace</b>
</td><td align="LEFT" valign="TOP" width="11%"><b>sb_max</b>
</td><td align="LEFT" valign="TOP" width="11%"><b>rfc1323</b>
</td></tr><tr>
<td align="LEFT" valign="TOP" width="13%">Ethernet
</td><td align="LEFT" valign="TOP" width="13%">10 Мбит/с
</td><td align="LEFT" valign="TOP" width="8%">1500
</td><td align="LEFT" valign="TOP" width="21%">16384
</td><td align="LEFT" valign="TOP" width="24%">16384
</td><td align="LEFT" valign="TOP" width="11%">32768
</td><td align="LEFT" valign="TOP" width="11%">0
</td></tr><tr>
<td align="LEFT" valign="TOP" width="13%">Ethernet
</td><td align="LEFT" valign="TOP" width="13%">100 Мбит/с
</td><td align="LEFT" valign="TOP" width="8%">1500
</td><td align="LEFT" valign="TOP" width="21%">16384
</td><td align="LEFT" valign="TOP" width="24%">16384
</td><td align="LEFT" valign="TOP" width="11%">32768
</td><td align="LEFT" valign="TOP" width="11%">0
</td></tr><tr>
<td align="LEFT" valign="TOP" width="13%">Ethernet
</td><td align="LEFT" valign="TOP" width="13%">Гигабитный
</td><td align="LEFT" valign="TOP" width="8%">1500
</td><td align="LEFT" valign="TOP" width="21%">65535
</td><td align="LEFT" valign="TOP" width="24%">16384
</td><td align="LEFT" valign="TOP" width="11%">131072
</td><td align="LEFT" valign="TOP" width="11%">0
</td></tr><tr>
<td align="LEFT" valign="TOP" width="13%">Ethernet
</td><td align="LEFT" valign="TOP" width="13%">Гигабитный
</td><td align="LEFT" valign="TOP" width="8%">9000
</td><td align="LEFT" valign="TOP" width="21%">131072
</td><td align="LEFT" valign="TOP" width="24%">65535 (Примечание 1)
</td><td align="LEFT" valign="TOP" width="11%">262144
</td><td align="LEFT" valign="TOP" width="11%">0
</td></tr><tr>
<td align="LEFT" valign="TOP" width="13%">Ethernet
</td><td align="LEFT" valign="TOP" width="13%">Гигабитный
</td><td align="LEFT" valign="TOP" width="8%">9000
</td><td align="LEFT" valign="TOP" width="21%">131072
</td><td align="LEFT" valign="TOP" width="24%">92160 (Примечание 1)
</td><td align="LEFT" valign="TOP" width="11%">262144
</td><td align="LEFT" valign="TOP" width="11%">1
</td></tr><tr>
<td align="LEFT" valign="TOP" width="13%">ATM
</td><td align="LEFT" valign="TOP" width="13%">155 Мбит/с
</td><td align="LEFT" valign="TOP" width="8%">1500
</td><td align="LEFT" valign="TOP" width="21%">16384
</td><td align="LEFT" valign="TOP" width="24%">16384
</td><td align="LEFT" valign="TOP" width="11%">131072
</td><td align="LEFT" valign="TOP" width="11%">0
</td></tr><tr>
<td align="LEFT" valign="TOP" width="13%">ATM
</td><td align="LEFT" valign="TOP" width="13%">155 Мбит/с
</td><td align="LEFT" valign="TOP" width="8%">9180
</td><td align="LEFT" valign="TOP" width="21%">65535
</td><td align="LEFT" valign="TOP" width="24%">65535 (Примечание 2)
</td><td align="LEFT" valign="TOP" width="11%">131072
</td><td align="LEFT" valign="TOP" width="11%">0
</td></tr><tr>
<td align="LEFT" valign="TOP" width="13%">ATM
</td><td align="LEFT" valign="TOP" width="13%">155 Мбит/с
</td><td align="LEFT" valign="TOP" width="8%">65527
</td><td align="LEFT" valign="TOP" width="21%">655360
</td><td align="LEFT" valign="TOP" width="24%">655360 (Примечание 3)
</td><td align="LEFT" valign="TOP" width="11%">1310720
</td><td align="LEFT" valign="TOP" width="11%">1
</td></tr><tr>
<td align="LEFT" valign="TOP" width="13%">FDDI
</td><td align="LEFT" valign="TOP" width="13%">100 Мбит/с
</td><td align="LEFT" valign="TOP" width="8%">4352
</td><td align="LEFT" valign="TOP" width="21%">45056
</td><td align="LEFT" valign="TOP" width="24%">45056
</td><td align="LEFT" valign="TOP" width="11%">90012
</td><td align="LEFT" valign="TOP" width="11%">0
</td></tr></tbody></table>
<dl>
<p></p><dt><b>Примечание 1:
</b></dt><dd>При работе с гигабитным Ethernet, в котором размер MTU составляет 9000
байт, производительность при работе с обоими наборами буферов
одинаковая.
</dd><p></p><dt><b>Примечание 2:
</b></dt><dd>При некоторых размерах буферов приема и передачи TCP пропускная
способность очень маленькая (около 1 Мбит/с или меньше). Эта проблема
подробно описана в публикациях <i>How a Large ATM MTU Causes Deadlocks in
TCP Data Transfers </i>, IEEE/ACM Transactions on Networking, том 3, номер 4
(август 1995 года) и <i>TCP Buffering and Performance over an ATM
Network</i>, Internetworking: Research and Experience, том 6 1-13,
1995. 
<br>
Для того чтобы эта проблема не возникала, размер <b>tcp_sendspace</b>
должен как минимум в три раза превосходить размер MTU, либо должен быть не
меньше <b> tcp_recvspace</b> целевой системы. Например, если в сети
ATM с MTU=9180 параметр <b>tcp_sendspace</b> будет равен 16384, а параметр
<b>tcp_recvspace</b> - 32768 или 65536, то скорость передачи данных будет
очень низкой. Однако если оба значения будут равны 65536, то пропускная
способность станет очень высокой. Если оба значения будут равны 16384,
то пропускная способность будет средней (в этом случае размер буфера передачи
равен размеру буфера приема).
</dd><p></p><dt><b>Примечание 3:
</b></dt><dd>Размер окна TCP должен быть не более чем 16-разрядным значением.
Другими словами, максимальный размер окна может составлять 65536 байт.
В результате при работе с адаптерами с большими значениями MTU (32 Кб или 64
Кб) эффективность передачи данных по соединению TCP будет очень низкой.
Например, если размер MTU устройства равен 64 Кб, и параметр
<b>tcp_recvspace</b> равен 64 Кб, то окно будет закрыто после отправки
первого из пакетов. Следующий пакет будет отправлен только после
получения подтверждения от целевой системы. Существует два способа
решения этой проблемы:
<p>&nbsp;
<br>
 Первый из них заключается в применении <b>rfc1323</b>. Эта опция
расширяет возможности TCP, разрешая применять окно, размер которого превышает
64 Кб. В этом случае можно установить большое значение
<b>tcp_recvspace</b>, например, в десять раз превосходящее размер
MTU. Это позволит TCP передавать данные в виде потока, что приведет к
повышению производительности. 
</p><p>&nbsp;
<br>
 Второй способ заключается в уменьшении размера MTU адаптера. Например,
с помощью команды <b>ifconfig at0 mtu 16384</b> можно установить размер
MTU в сети ATM равным 16 Кб. В результате будет установлен MSS меньшего
размера. Если размер MTU равен 16 Кб, а размер окна - 64 Кб, то TCP
может отправить 4 пакета, не дожидаясь получения подтверждения.
</p></dd></dl>
<p>Ниже приведены некоторые рекомендации:
</p><ul>
<li>Размер буферов приема и передачи TCP должен быть как минимум в 10 раз
больше размера MTU.
</li><li>Если размер MTU больше 16 Кб, то установите опцию <b>rfc1323=1</b>,
для того чтобы расширить диапазон допустимых значений для параметра
recvspace.
</li><li>При работе с адаптерами с высокой скоростью передачи данных для повышения
производительности рекомендуется увеличить размер буферов приема и передачи
TCP.
</li><li>Поскольку размер окна определяется получателем, значение
<b>rfc1323</b> влияет только на получателя.
</li><li>При работе с адаптером гигабитного Ethernet увеличьте значение
<b>tcp_sendspace</b>. Если приложение блокируется и переходит в
состояние ожидания из-за недостаточно большого значения
<b>tcp_sendspace</b>, то значительные ресурсы будут затрачиваться на
активизацию приложения и повторную передачу пакетов.
</li></ul>
<p>Примерами приложений TCP, производительность которых может значительно
повыситься после настройки параметров <b>tcp_sendspace</b> и
<b>tcp_recvspace</b>, могут служить команды <b>ftp</b> и
<b>rcp</b>.
</p><p></p><h4><a name="HDRI12504">tcp_sendspace</a></h4>
<p>Размер буфера передачи TCP ограничивает объем данных, после отправки
которых приложение переводится в состояние ожидания. Данные приложения
размещаются в буфере передачи сокета TCP перед их отправкой на уровни,
расположенные ниже уровня сокета и уровня TCP. При этом они хранятся в
структурах mbuf и кластерах в области памяти ядра. Размер буфера по
умолчанию определяется параметром <b>tcp_sendspace</b>. Его можно
переопределить с помощью функции <b>setsockopt()</b>.
</p><p>Если объем данных, отправляемых приложением, меньше размера буфера передачи
и максимального размера сегмента, и опция TCP_NODELAY не установлена, то TCP
задержит отправку данных (но не более чем на 200 мс), дожидаясь, пока не будет
заполнен буфер передачи или пока размер данных не станет больше максимального
размера сегмента.
</p><p>Если опция TCP_NODELAY установлена, то данные будут отправлены немедленно
после их получения от приложения (эту опцию рекомендуется устанавливать для
приложений, работающих по схеме "вопрос-ответ"). Если размер буфера
передачи меньше максимального размера сегмента или равен ему (в сетях ATM и SP
Switch размер MTU может составлять 64 Кб), то данные приложения будут
отправлены немедленно, но приложению придется дожидаться получения
подтверждения перед отправкой следующего пакета (в результате данные не будут
передаваться в виде потока и производительность понизится).
</p><p>
</p><blockquote>
<b>Примечание</b>: Для того чтобы пакеты передавались в виде
непрерывного потока, увеличьте размер буфера передачи сокета так, чтобы он был
больше MTU (в качестве начального рекомендуется выбрать значение, в 3-10 раз
превышающее размер MTU).
</blockquote>
<p>Если выполняется ввод-вывод без блокировки приложения (для сокета
установлена опция O_NDELAY или O_NONBLOCK), то в случае переполнения буфера
передачи приложению будет отправлен код ошибки EWOULDBLOCK/EAGAIN, однако оно
не будет переведено в состояние ожидания. В приложении должен быть
предусмотрен обработчик таких ошибок (рекомендуется, чтобы приложение на
небольшое время переводилось в состояние ожидания, а затем повторяло попытку
передачи данных).
</p><p>В некоторых случаях после изменения размера буфера приема или передачи
требуется перезапустить процесс <b>inetd</b>. Для этого нужно
вызвать следующие команды:
</p><p>
</p><pre># stopsrc -s inetd; startsrc -s inetd
</pre>
<p></p><h4><a name="HDRI10624">tcp_recvspace</a></h4>
<p>Размер буфера приема TCP ограничивает объем полученных данных, которые
система может поместить в буфер перед тем, как они будут считаны
приложением. В буфере приема TCP накапливаются полученные
пакеты. После того как TCP считывает данные, он немедленно или с
задержкой отправляет подтверждение о получении пакета (ACK). Протокол
TCP пытается отправить подтверждение вместе с каким-либо пакетом данных,
который требуется передать исходной системе. Если было получено сразу
несколько пакетов, и все из них поместились в буфер приема, то TCP может
отправить общее подтверждение для всех пакетов. Вместе с подтверждением
TCP возвращает обновленный размер окна, сообщая отправителю, сколько места
осталось в буфере приема. Если оставшегося места недостаточно для
отправки данных, отправитель блокируется до тех пор, пока полученные данные не
будут считаны целевым приложением. Следовательно, чем меньше размер
буфера приема, тем чаще будет блокироваться отправитель. Размер буфера
приема TCP можно задать с помощью функции <b>setsockopt()</b> или
параметра <b>tcp_recvspace</b>.
</p><p></p><h4><a name="HDRI80631">rfc1323</a></h4>
<p>Максимальный размер окна TCP по умолчанию составляет 65536 байт (64 Кб),
однако если опция <b>rfc1323</b> равна 1, то размер окна может
превосходить это значение. Если вы планируете, что значение параметра
<b>tcp_recvspace</b> будет больше 65536, то установите опцию <b>
rfc1323=1</b> в обеих конечных системах. Если хотя бы в одной из
систем опция <b> rfc1323</b> не будет включена, то фактически значение
<b> tcp_recvspace</b> будет равно 65536.
</p><p>При передаче данных через адаптер с большим значением MTU (32 или 64 Кб),
то эффективность передачи данных не будет оптимальной. Это связано с
тем, что после отправки одного или нескольких пакетов отправитель вынужден
будет дожидаться получения подтверждения о доставке этих пакетов. Если
вы включите опцию <b>rfc1323</b> с помощью команды <b>no -o
rfc1323=1</b>, то для размера окна TCP можно будет установить любое значение
вплоть до 4 Гб. Однако производительность может резко снизиться, если
применяется адаптер с MTU больше либо равным 64 Кб, а буфер приема может
хранить не более 64 Кб данных. Если получатель не поддерживает
<b>rfc1323</b>, то для повышения производительности рекомендуется
уменьшить размер MTU.
</p><p>Если параметр <b>rfc1323</b> равен 1, то можно значительно увеличить
значение параметра <b>tcp_recvspace</b>, например, присвоить ему значение,
в 10 раз превосходящее значение MTU.
</p><p></p><h4><a name="HDRH09H108">sb_max</a></h4>
<p>Этот параметр указывает, какой объем памяти был выделен для буферов сокета
отправителя или сокета получателя. Это значение вычисляется исходя из
размера буфера, а не размера его содержимого.
</p><p>Если драйвер устройства поместит 100 байт данных в буфер размером 2048
байт, то система будет считать, что для буфера сокета выделено 2048 байт
памяти. Обычно драйвер устройства применяет буфер приема, размер
которого достаточен для хранения пакета максимального размера. При этом
какой-то объем памяти буфера остается неиспользованным. Однако
применение буферов меньшего размера приводит к увеличению процессорного
времени, затрачиваемого на копирование данных в буферы.
</p><p>Поскольку существует много различных драйверов устройств, значение
<b>sb_max</b> должно быть намного больше максимального размера буфера
сокета TCP или UDP. После того как общее число структур mbuf и
кластеров сокета достигает ограничения <b>sb_max</b>, данные перестают
помещаться в очередь сокета до тех пор, пока приложение не считает
данные.
</p><p>
</p><blockquote>
<b>Примечание</b>: Если был выбран размер буфера больше 64 Кб, то
увеличьте значение <b>sb_max</b>, которое устанавливает ограничение на
размер всех буферов сокета. 
<p>Рекомендуется, чтобы это значение в два раза превосходило размер самого
большого буфера приема TCP или UDP.
</p></blockquote>
<p></p><h3><a name="HDRI25248">Параметры сетевых интерфейсов (ISNO)</a></h3>
<a name="IDX2457"></a>
<p>В AIX 4.3.3 появился набор параметров (ISNO), позволяющих
пользователю изменить свойства отдельного интерфейса IP, влияющие на его
производительность. Значения этих параметров переопределяют значения
параметров системы, заданных с помощью команды <b>no</b>.
Применение таких параметров можно разрешить или запретить с помощью опции
<b>use_isno</b> команды <b>no</b>. По умолчанию параметры
отдельных интерфейсов настраивать разрешено. Опция, запрещающая
применение ISNO, может применяться системным администратором в качестве
средства диагностики для обнаружения ошибок в конфигурации.
</p><p>Обратите внимание, что значения параметров ISNO, установленные для сокета,
можно узнать (то есть считать с помощью функции <b> getsockopt()</b>)
только <i>после</i> установления соединения TCP. Интерфейс, с
которым будет связан сокет, выбирается только при установлении соединения,
поэтому до этого момента для сокета указываются значения по умолчанию,
установленные с помощью команды <b>no</b>. После установления
соединения вступают в силу значения параметров ISNO.
</p><p>К параметрам сетевого интерфейса было добавлено еще пять параметров:
</p><ul>
<li><b>rfc1323</b>
</li><li><b>tcp_nodelay</b>
</li><li><b>tcp_sendspace</b>
</li><li><b>tcp_recvspace</b>
</li><li><b>tcp_mssdflt</b>
</li></ul>
<p>Значения этих параметров переопределяют значения соответствующих опций
команды <b>no</b>, действующих для всей системы. Эти параметры
поддерживаются всеми основными интерфейсами TCP/IP (Token-Ring, FDDI, 10/100
Ethernet и гигабитным Ethernet), за исключением интерфейса IP
<b>css</b><i> #</i> коммутатора SP. Пользователи коммутатора SP
могут настроить необходимые параметры на уровне системы с помощью команды
<b>no</b>, а затем изменить значения для других сетевых интерфейсов с
помощью параметров ISNO. ATM поддерживается в AIX 4.3.3
(после установки обновления) и более старших версиях.
</p><p>Данные параметры устанавливаются для интерфейса TCP/IP (например, en0 или
tr0), а не для сетевого адаптера (ent0 или tok0).
</p><p>Параметры ISNO нельзя просмотреть и изменить с помощью SMIT. Ниже
перечислены команды, с помощью которых можно убедиться, что применение этих
параметров разрешено на уровне системы и интерфейса, и изменить значения
параметров.
</p><ul>
<li>Убедитесь, что опция <b>use_isno</b> включена, с помощью следующей
команды: 
<p>
</p><pre># no -a | grep isno
use_isno = 1
</pre>
</li><li>Убедитесь, что интерфейс поддерживает новые параметры ISNO, с помощью
команды <b> lsattr -El</b>: 
<p>
</p><pre># lsattr -E -l en0 -H
атрибут    значение описание                                  изменяется польз.
:
rfc1323             НД                                         Истина
tcp_nodelay         НД                                         Истина
tcp_sendspace       НД                                         Истина
tcp_recvspace       НД                                         Истина
tcp_mssdflt         НД                                         Истина
</pre>
</li><li>Для того чтобы изменить значения параметров интерфейса, вызовите команду
<b>ifconfig</b> или <b>chdev</b>. Команда <b>ifconfig</b>
временно изменяет значения параметров (может применяться при
тестировании). Команда <b>chdev</b> изменяет запись ODM, поэтому
новое значение вступает в силу после следующей загрузки системы. 
<p>Например, для того чтобы присвоить параметрам <b>tcp_recvspace</b> и
<b>tcp_sendspace</b> значение 64 Кб и включить опцию <b>
tcp_nodelay</b>, вызовите одну из следующих команд: 
</p><p>
</p><pre># ifconfig en0 tcp_recvspace 65536 tcp_sendspace 65536 tcp_nodelay 1
</pre> 
<p>или 
</p><p>
</p><pre># chdev -l en0 -a tcp_recvspace=65536 -a tcp_sendspace=65536 -a tcp_nodelay=1
</pre>
</li><li>Значения параметров можно просмотреть с помощью команды
<b>ifconfig</b> или <b>lsattr</b>: 
<p>
</p><pre># ifconfig en0
en0: flags=e080863&lt;UP,BROADCAST,NOTRAILERS,RUNNING,SIMPLEX,MULTICAST,GROUPRT,64BIT&gt;
        inet 9.19.161.100 netmask 0xffffff00 broadcast 9.19.161.255
        tcp_sendspace 65536 tcp_recvspace 65536 tcp_nodelay 1
</pre> 
<p>или 
</p><p>
</p><pre># lsattr -El en0
rfc1323             НД                                         Истина
tcp_nodelay   1             НД                                 Истина
tcp_sendspace 65536         НД                                 Истина
tcp_recvspace 65536         НД                                 Истина
tcp_mssdflt                 НД                                 Истина
</pre>
</li></ul>
<p></p><h3><a name="HDRI70713">Рекомендации по настройке производительности протокола IP</a></h3>
<a name="IDX2458"></a>
<a name="IDX2459"></a>
<p>На уровне IP предусмотрен только параметр <b>ipqmaxlen</b>, который
задает размер очереди приема IP (за дополнительной информацией обратитесь к
разделу <a href="http://www.regatta.cs.msu.su/doc/usr/share/man/info/ru_RU/a_doc_lib/aixbman/prftungd/2365c91.htm#HDRI34756"> Уровень IP</a>). В AIX версии 4 интерфейсы,
как правило, не применяют очередь данных. Если пакеты поступают очень
быстро, то очередь приема IP может переполниться. Для того чтобы узнать
число переполнений, вызовите команду <b>netstat -s</b> или <b>netstat -p
ip</b> (поле <tt>число переполнений ipintrq</tt>).
</p><p>Если значение больше нуля, значит очередь переполнялась. В этом
случае установите максимальный размер очереди с помощью команды
<b>no</b>. Например:
</p><p>
</p><pre># no -o ipqmaxlen=100
</pre>
<p>В данном примере очередь может содержать до 100 пакетов. Оптимальное
значение нужно выбрать исходя из максимальной скорости поступления
пакетов. Если такой информации нет, увеличьте длину очереди исходя из
числа переполнений. При увеличении длины очереди дополнительная память
не расходуется. Однако увеличение размера очереди может привести к
увеличению времени, которое затрачивается на обработку прерываний, так как
уровню IP потребуется обработать больше пакетов из очереди. Это может
замедлить работу других процессов, которым также требуется CPU. Таким
образом, вы можете сократить число отбрасываемых пакетов за счет уменьшения
доли процессорного времени, доступного другим процессам. Если другие
приложения также должны выполняться довольно быстро, то рекомендуется
увеличивать значение <b> ipqmaxlen</b> путем добавления небольших
приращений.
</p><p></p><h3><a name="HDRH09H111">Рекомендации по настройке производительности Ethernet</a></h3>
<a name="IDX2460"></a>
<a name="IDX2461"></a>
<p>Протокол Ethernet участвует в выборе MTU по алгоритму "наименьший общий
знаменатель". Если среда состоит из сетей Ethernet и других LAN,
которые активно обмениваются данными, то рекомендуется во всех сетях
установить MTU равным 1500 байт, чтобы избежать фрагментации пакетов,
поступающих в сеть Ethernet. Ниже приведены некоторые
рекомендации:
</p><ul>
<li>Не изменяйте значение по умолчанию для параметра MTU (1500 байт).
Это максимальное значение.
</li><li>Размер блоков приложений должен быть кратным 4096 байт.
</li><li>Оставьте для размеров буферов сокета значения по умолчанию.
</li><li>Если в системе работает много служб, применяющих протокол UDP, например,
NFS и RPC, то увеличьте значение <b>sb_max</b>, для того чтобы учесть тот
файл, что каждый пакет размером 1500 байт размещается в буфере размером 4096
байт.
</li></ul>
<p></p><h3><a name="HDRH09H112">Рекомендации по настройке производительности Token-Ring (4 Мб)</a></h3>
<a name="IDX2462"></a>
<a name="IDX2463"></a>
<p>Значение MTU, применяемое по умолчанию, (1492 байт) подходит для сетей
Token-Ring, которые взаимодействуют с сетями Ethernet или неоднородными
сетями, размер MTU которых неизвестен. Ниже приведены некоторые
рекомендации:
</p><ul>
<li>Если поток данных между локальной и внешними сетями невелик, то увеличьте
значение MTU до максимального значения (3900 байт).
</li><li>Размер блоков приложений должен быть кратным 4096 байт.
</li><li>Для размеров буферов сокета рекомендуется оставить значения по
умолчанию.
</li><li>Если в системе работает много служб, применяющих протокол UDP, например,
NFS и RPC, то увеличьте значение <b>sb_max</b>, для того чтобы учесть тот
файл, что каждый пакет размером 1492 байта размещается в буфере размером 4096
байт.
</li></ul>
<p></p><h3><a name="HDRH09H113">Рекомендации по настройке производительности Token-Ring (16 Мб)</a></h3>
<a name="IDX2464"></a>
<a name="IDX2465"></a>
<p>Значение MTU, применяемое по умолчанию, (1492 байт) подходит для сетей
Token-Ring, которые взаимодействуют с сетями Ethernet или неоднородными
сетями, размер MTU которых неизвестен. Ниже приведены некоторые
рекомендации:
</p><ul>
<li>Если поток данных между локальной и внешними сетями невелик, увеличьте
значение MTU до 8500 байт. В этом случае пакеты NFS размером 8 Кб не
будут разбиваться на фрагменты. Как правило, дальнейшее увеличение
размера MTU до максимума (17000 байт) не приводит к значительному увеличению
пропускной способности.
</li><li>Размер блоков приложений должен быть кратным 4096 байт.
</li><li>Для размеров буферов сокета рекомендуется оставить значения по
умолчанию.
</li><li>Если в системе работает много служб, применяющих протокол UDP, например,
NFS и RPC, и значение MTU нельзя увеличить из-за соединений с внешними сетями,
то увеличьте значение <b>sb_max</b>, чтобы учесть тот факт, что пакет
размером 1492 байта размещается в буфере размером 4096 байт.
</li></ul>
<p></p><h3><a name="HDRH09H114">Рекомендации по настройке производительности FDDI</a></h3>
<a name="IDX2466"></a>
<a name="IDX2467"></a>
<p>Несмотря на довольно маленький MTU, производительность этой
высокоскоростной среды остается высокой за счет значительного размера буфера
сокета. Ниже приведены некоторые рекомендации:
</p><ul>
<li>Если поток данных между локальной и внешними сетями невелик, рекомендуется
сохранить для MTU значение по умолчанию, равное 4352 байт.
</li><li>Для повышения производительности приложение, применяющее протокол TCP,
должно отправлять сообщения, размер которых кратен 4096 байт (предпочтительно
- размером 8 или 16 Кб).
</li><li>Измените размер буферов приема и передачи сокетов UDP и TCP с помощью
команды <b>no -o *_*space=</b><i>новое-значение</i>.
<i>Новое-значение</i> должно быть не меньше 57344 байт (56 Кб).
</li><li>Увеличьте максимальный объем памяти, который может быть выделен для буфера
сокета, с помощью команды <b>no -o
sb_max=(2*</b><i>новое-значение</i>).
</li><li>В системах RS/6000 модели *90 и более мощных системах рекомендуется
разрешить применение буферов сокета, размер которых больше 65536, с помощью
команды <b>no -o rfc1323=1</b>. После этого вызовите описанную выше
команду, указав в качестве <i>нового-значения</i> объем памяти не меньше
128 Кб.
</li></ul>
<p></p><h3><a name="HDRH09H115">Рекомендации по настройке производительности ATM</a></h3>
<a name="IDX2468"></a>
<a name="IDX2469"></a>
<p>Ниже приведены некоторые рекомендации:
</p><ul>
<li>Если поток данных между локальной и внешними сетями невелик, рекомендуется
сохранить для MTU значение по умолчанию, равное 9180 байт. Для
повышения производительности приложение, применяющее протокол TCP, должно
отправлять сообщения, размер которых кратен 4096 байт (предпочтительно -
размером 8 или 16 Кб).
</li><li>Измените размер буферов приема и передачи сокетов UDP и TCP с помощью
команды <b>no -o *_*space=</b><i>новое-значение</i>.
<i>Новое-значение</i> должно быть не меньше 57344 байт (56 Кб).
</li><li>Увеличьте максимальный объем памяти, который может быть выделен для буфера
сокета, с помощью команды <b>no -o
sb_max=(2*</b><i>новое-значение</i>).
</li><li>В системах RS/6000 модели *90 и более мощных системах рекомендуется
разрешить применение буферов сокета, размер которых больше 65536, с помощью
команды <b>no -o rfc1323=1</b>. После этого вызовите описанную выше
команду, указав в качестве <i>нового-значения</i> объем памяти не меньше
128 Кб.
</li></ul>
<p></p><h3><a name="HDRH09H116">Рекомендации по повышению производительности SOCC</a></h3>
<a name="IDX2470"></a>
<a name="IDX2471"></a>
<p>Ниже приведены некоторые рекомендации:
</p><ul>
<li>Не следует изменять значение MTU по умолчанию, равное 61428 байт.
</li><li>Для повышения производительности приложение, применяющее протокол TCP,
должно отправлять сообщения размером 28672 байт (28 Кб).
</li><li>Установите в качестве значения по умолчанию для размера буферов приема и
передачи сокетов TCP и UDP значение 57344 байт.
</li></ul>
<p></p><h3><a name="HDRH09H117">Рекомендации по настройке производительности HIPPI</a></h3>
<a name="IDX2472"></a>
<a name="IDX2473"></a>
<p>Ниже приведены некоторые рекомендации:
</p><ul>
<li>Не следует изменять значение MTU по умолчанию, равное 65536 байт.
</li><li>Для повышения производительности приложение, применяющее протокол TCP,
должно отправлять сообщения размером 65536 байт.
</li><li>Установите значение <b>sb_max</b>, большее 2*655360.
</li><li>Установите значения по умолчанию для размера буфера приема и передачи
сокетов TCP и UDP равными 655360 байт. Разрешите применение буферов
сокета, размер которых больше 65536, с помощью команды <b>no -o
rfc1323=1</b>.
</li></ul>
<b>
</b><center><b><p></p><hr> <a href="#Top_Of_Page"> [</a>  <a href="http://www.regatta.cs.msu.su/doc/usr/share/man/info/ru_RU/a_doc_lib/aixbman/prftungd/2365c92.htm">Страница назад</a> | <a href="http://www.regatta.cs.msu.su/doc/usr/share/man/info/ru_RU/a_doc_lib/aixbman/prftungd/2365c94.htm">Страница вперед</a>  |  <a href="http://www.regatta.cs.msu.su/doc/usr/share/man/info/ru_RU/a_doc_lib/aixbman/prftungd/prftungd02.htm#ToC">Содержание</a>  |  <a href="http://www.regatta.cs.msu.su/doc/usr/share/man/info/ru_RU/a_doc_lib/aixbman/prftungd/prftungd145.htm#HDRINDEX_START">Индекс</a>  |<!-- Begin Footer Records  ========================================== -->
<font color="#A62A2A"></font> 
<a href="http://www.regatta.cs.msu.su/cgi-bin/ds_form?lang=ru_RU&amp;viewset=AIX" target="_top">Библиотека</a> | 
<a href="http://www.regatta.cs.msu.su/doc/usr/share/man/info/ru_RU/a_doc_lib/aixbman/prftungd/notices.htm">Юридическая информация</a> | 
<a href="http://www.regatta.cs.msu.su/cgi-bin/ds_form?lang=ru_RU&amp;viewset=AIX" target="_top">Поиск</a> <a href="#Top_Of_Page"> ]</a>
</b>
</center> 
<!-- End Footer Records  ============================================ -->
<a name="Bot_Of_Page"></a>


</body></html>