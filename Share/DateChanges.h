#ifndef DateChangesH
#define DateChangesH

// дата создания 1.12.2011

//***
//по архитектуре см. ./doc/архитектура.doc
//***

/*
    DONE
    TODO
    INFO
    BUG
*/


/* 
    DONE: 

21.12.2011 :
 - TList. Список с блокировкой, для операций над элементами из разных потоков.
 - отладка транспорта.
25.12.2011 :
 - первый ответ от сервера.
 - произошел коннект между клиентом и сервером.
 - логирование и отладка транспорта.
26.12.2011 :
 - версия при попытке соединиться.
27.12.2011 :
 - транспорт контроль свежести пакета.
 - механизм дисконнекта.
28.12.2011:
 - асинхронный вызов списка клиентов в окне сервера.
30.12.2011:
 - Сервер: список клиентов перевести в TArrayObject для повышения скорости.
 - свежесть пакета при потере соединения synchro.
 - два типа CN - стрим и пакетный в транспорте.
06.01.2012:
 - уведомление о приеме Stream и Packet.
07.01.2012:
 - контроль соединения - разрыв на клиенте и сервере, 
 - клиент: разрыв по 1. отсутствию пакетов от сервера 3 секунда и 2.по событию Disconnect от транспорта.
 - сервер: разрыв по отсутствию пакетов от клиента 1 минута -> 1.событие Disconnect от транспорта. Всегда отсылка раз в минуту Эхо.
 - Стрим для гаража.
 - время для массива клиентов сервера: отсылка и прием. раз в минуту отсылка Эхо.
 
10.01.2012:
 - отладка транспорта
 - добавлено управление клиентом с помощью скрипта.
 - лог стрима.
 - лог клиента по нику.
11.01.2012:
 - тестирование транспорта с 220 клиентами.+
 - тестирование транспорта с 450 клиентами.+

13.01.2012:
 - Блин, разрушил транспорт :(. Неувязки с многопоточностью.
   Разобрался: Клиент отправляет по неизвестному транспорту адресу, но не получит от НЕИЗВЕСТНОГО.
               Сервер наоборот: отправит по известному, но получит от неизвестного.
               Поэтому не возникнет ситуации когда будет добавление из двух потоков.
               НО 

14.01.2012:
 - Лог транспорта , события.
 - Список ожидающих отправления и список ожидающих подтверждения mArrWaitSend и mArrWaitCheck.
 - Очередь на отправку у транспорта.
15.01.2012:
 - отладка: вывод в файл процента нагрузки главного потока сервера.
16.01.2012:
 - Загрузка списка танков в гараже.
17.01.2012:
 - Выбор танка в гараже.
18.01.2012:
 - Форма ожидания боя и запрос на бой.
 - Запрос на бой обработан и сформирована команда.
 - Зачатки балансера.
19.01.2012:
 - Стрим для начала боя
21.01.2012:
 - Думаю над зонами и картами, физикой и боем. Это все надо как-то увязать.
25.01.2012:
 - Обратный отсчет перед боем на сервере.
 - Обратный отсчет перед боем на клиенте.
12.04.2012:
 - DXUT + DirectX + Qt4
14.04.2012:
 - Начал реализацию архитектуры на основе DirectX
15.04.2012:
 - Симбиоз DirectX и Qt4 для графики - там все просто TBaseDirectX с функциями отрисовки и событий.
17.04.2012:
 - Переделываю протокол общения Клиент-Сервер с учетом графа сценария поведения. Я думаю это дня на 2-3.
 - Установка Git. Это предложение тест для него. Пока работает. Но муть полная. Думаю, можно привыкнуть.
18.04.2012:
 - Корректирующий пакет отправляется группой не более 5-10 событий в пакете. Пакеты помещаются в TransportMain
 в независимости от кол-ва пакетов.
 - Придумал как будут взаимодействовать потоки DX и Transport Main при обмене корректирующих пакетов и стрима.
 Будут меняться непосредственно параметры объектов MultiThreadQueue. - 
19.04.2012:
 - Проверка ClientMain +
 - Проверка GameRoomPrepare +
 - Проверка WaitForm +
20.04.2012:
 - Появился ManagerGUI. Он управляет окнами клиента. Также управляет загрузкой компонентов для проведения боя и обрабатывает ответы от сервера.
21.04.2012:
 - Вставить время в Queue.
22.04.2012:
 - Мучаюсь с TA_In_Fight. Разная длина sNick и cnt Tank.
28.04.2012:
 - Реализовал TA_In_Fight. Этот класс готов для масштабирования.
01.05.2012:
 - Отдыхал. Не мог даже смотреть на проект. Похоже, что на работе рабочее место лучше. Определенно лучше.
02.05.2012:
 - Угу, лучше.
03.05.2012:
 - Логирование DirectX.
 - Кольцо работает. DirectX и транспорт обмениваются данными.
 - Подвод данных к комнате.
 - Отсылка запроса корректирующего пакета.
05.05.2012:
 - Доработка TRoom.
09.05.2012:
 - Доделал транспорт(все тесты проходит). Думаю над графикой.
10.05.2012:
 - Обнаружил странный глюк в Студии: иногда сервер может падать из-за того что 
 CRT обнаруживает запись в память после закрытия сервера. В ~TGarage().
 Помогает ребилд проекта.
11.05.2012:
 - Работа над ModelDX, ManagerModelDX.
14.05.2012:
 - Добавлен EditorModel.
17.05.2012:
 - Работа над Editor. Загрузка данных из ini-файлов.
18.05.2012:
 - Заработал графический движок. Нарисовал первый объект :)
21.05.2012:
 - Вчера скачал программку для конвертации из primitives в x формат.
Загрузчик надо переделать под этот формат. Теперь надо нарисовать хотя бы танк.
3D Object Converter
Конвертируем из primitives в *.obj (WaveFront). Далее используем для помещения в Mesh класс
Порядок действий при конвертации:
1. Загрузка модели.
2. Options->Export->WaveFront поставить галочку Export Vertex Normals
3. Tools->Flip Scene UV Map Vertically.
4. Save as WaveFront.
5. Подправить *.mtl и привести примерно к такому виду: 
              newmtl Material_1
              Ka 0.4 0.4 0.4
              Kd 0.587609 0.587609 0.587609
              Ks 0.171744 0.171744 0.171744
              illum 5
              Ns 8.000000
              map_Kd PzVl_Tiger_I.dds
 - Консервация проекта. Готовлюсь к BSC и ОблГазу.
//----------------------------------------------------------------------------------------------------------------
//----------------------------------------------------------------------------------------------------------------
    TODO:

23) "Живая стена" записи для развлечения при ожидании - 
28) Выбор карты и понятие "карта" - 
29) Обвязка процесса "бой", все кроме физики. Т.е. процесс отсылки пакетов, связанных с боем но без самого боя -
34) Класс работы с XML Можно из Qt взять - 
41) проблема совместимости загрузки карты на клиенте и сервере -
55) Сортировать список по mIndex в TModelDX
56) 
//----------------------------------------------------------------------------------------------------------------
//----------------------------------------------------------------------------------------------------------------
    INFO
Кол-во потоков в клиенте:(только в обморок не падай ;) )

0 - Qt (всегда)
1 - Транспорт Main (всегда)
2 - ClientMain Disconnect (всегда)
3 - DirectX (не всегда)
4 - Loader Map and Objects (редко)

Кол-во потоков в сервере:

0 - Qt (при отладке - всегда)
1 - Транспорт Main (всегда)
2 - ServerTank Disconnect (всегда)
3 - Главный поток сервера (всегда)
4 - Loader Map and Objects (редко) - только в начале боя 


Список менеджеров:
1) ManagerDirectX, отвечает за отрисовку и звук - 
2) ManagerModels, отвечает за хранение полигонов и текстур, оригинальные данные - 
3) ManagerObjectDX, отвечает за объекты сцены +
4) 


  На стороне КЛИЕНТа:
ManagerDirectX перед вызовом на отрисовку проверяет надо ли загрузить карту, если надо меняет состояние и запускает поток загрузки карты.
По состоянию определяет что выдать на отрисовку сцены из ManagerObjectDX.
По окончанию загрузки клиент обязан послать пакет на сервер о готовности принять корректирующий пакет(инфо о разрушенных объектах ...).

  На стороне СЕРВЕРа:


//----------------------------------------------------------------------------------------------------------------
//----------------------------------------------------------------------------------------------------------------
    BUG:
1) Иногда при загрузке в бой на стороне клиента приходит пакет-ответ на запрос на вход в бой с некорректным состоянием.


ABOUT SOMETHING:
19.04.02012: 
 - Долбанный Воронеж. Придется ехать на закрытие испытаний. С понедельника 23 апреля до пятницы 27 апреля. Блин, придётся меньше писать.

*/

#endif